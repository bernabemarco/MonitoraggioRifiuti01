CREATE TABLE [dbo].[VARIANTIARTICOLI] (
    [CODICEART]      VARCHAR (50)  NOT NULL,
    [NUMEROTIP]      SMALLINT      NOT NULL,
    [VARIANTE]       VARCHAR (8)   NOT NULL,
    [TIPOLOGIA]      VARCHAR (3)   NULL,
    [SOLOSE]         VARCHAR (255) NULL,
    [UTENTEMODIFICA] VARCHAR (25)  NOT NULL,
    [DATAMODIFICA]   DATETIME      NOT NULL,
    CONSTRAINT [PK_VARIANTIARTICOLI] PRIMARY KEY CLUSTERED ([CODICEART] ASC, [NUMEROTIP] ASC, [VARIANTE] ASC) WITH (FILLFACTOR = 90)
);


GO
CREATE NONCLUSTERED INDEX [VARART_TIP]
    ON [dbo].[VARIANTIARTICOLI]([TIPOLOGIA] ASC) WITH (FILLFACTOR = 90);


GO

/*  INSERT TRIGGER "TI_VARIANTIARTICOLI" FOR TABLE "VARIANTIARTICOLI"  */
CREATE TRIGGER TI_VARIANTIARTICOLI ON VARIANTIARTICOLI FOR INSERT AS
BEGIN
    DECLARE
       @MAXCARD  INT,
       @NUMROWS  INT,
       @NUMNULL  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  PARENT "TIPOLOGIEARTICOLI" MUST EXIST WHEN INSERTING A CHILD IN "VARIANTIARTICOLI"  */
    IF UPDATE(CODICEART) OR
       UPDATE(NUMEROTIP)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   TIPOLOGIEARTICOLI T1, INSERTED T2
           WHERE  T1.CODICEART = T2.CODICEART
            AND   T1.NUMEROTIP = T2.NUMEROTIP) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "TIPOLOGIEARTICOLI". Cannot create child in "VARIANTIARTICOLI".'
             GOTO ERROR
          END
    END
    
    /*  PARENT "ANAGRAFICAARTICOLI" MUST EXIST WHEN INSERTING A CHILD IN "VARIANTIARTICOLI"  */
    IF UPDATE(CODICEART)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   ANAGRAFICAARTICOLI T1, INSERTED T2
           WHERE  T1.CODICE = T2.CODICEART) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "ANAGRAFICAARTICOLI". Cannot create child in "VARIANTIARTICOLI".'
             GOTO ERROR
          END
    END

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

/*  UPDATE TRIGGER "TU_VARIANTIARTICOLI" FOR TABLE "VARIANTIARTICOLI"  */
CREATE TRIGGER TU_VARIANTIARTICOLI ON VARIANTIARTICOLI FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN

      
      /*  PARENT "TIPOLOGIEARTICOLI" MUST EXIST WHEN UPDATING A CHILD IN "VARIANTIARTICOLI"  */
      IF UPDATE(CODICEART) OR
         UPDATE(NUMEROTIP)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   TIPOLOGIEARTICOLI T1, INSERTED T2
             WHERE  T1.CODICEART = T2.CODICEART
              AND   T1.NUMEROTIP = T2.NUMEROTIP) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"TIPOLOGIEARTICOLI" does not exist. Cannot modify child in "VARIANTIARTICOLI".'
               GOTO ERROR
            END
      END
      
      /*  PARENT "ANAGRAFICAARTICOLI" MUST EXIST WHEN UPDATING A CHILD IN "VARIANTIARTICOLI"  */
      IF UPDATE(CODICEART)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   ANAGRAFICAARTICOLI T1, INSERTED T2
             WHERE  T1.CODICE = T2.CODICEART) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"ANAGRAFICAARTICOLI" does not exist. Cannot modify child in "VARIANTIARTICOLI".'
               GOTO ERROR
            END
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
GRANT DELETE
    ON OBJECT::[dbo].[VARIANTIARTICOLI] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[VARIANTIARTICOLI] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[VARIANTIARTICOLI] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[VARIANTIARTICOLI] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[VARIANTIARTICOLI] TO [Metodo98]
    AS [dbo];

