CREATE TABLE [dbo].[TABTIPOLOGIE] (
    [TIPOLOGIA]        VARCHAR (3)  NOT NULL,
    [DESCRIZIONE]      VARCHAR (25) NULL,
    [CTRLESISTENZA]    SMALLINT     DEFAULT (0) NULL,
    [LUNGVARIANTE]     SMALLINT     NULL,
    [UTENTEMODIFICA]   VARCHAR (25) NOT NULL,
    [DATAMODIFICA]     DATETIME     NOT NULL,
    [TIP_CONTATORE]    SMALLINT     DEFAULT ((0)) NULL,
    [CODICE_CONTATORE] DECIMAL (5)  DEFAULT ((0)) NULL,
    CONSTRAINT [PK_TABTIPOLOGIE] PRIMARY KEY CLUSTERED ([TIPOLOGIA] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [CKC_CTRLESISTENZA_TABTIPOL] CHECK ([CTRLESISTENZA] = 0 or [CTRLESISTENZA] = 1)
);


GO
CREATE NONCLUSTERED INDEX [TABTIP_DSC]
    ON [dbo].[TABTIPOLOGIE]([DESCRIZIONE] ASC) WITH (FILLFACTOR = 90);


GO

/*  UPDATE TRIGGER "TU_TABTIPOLOGIE" FOR TABLE "TABTIPOLOGIE"  */
CREATE TRIGGER TU_TABTIPOLOGIE ON TABTIPOLOGIE FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN

      
      /*  MODIFY PARENT CODE OF "TABTIPOLOGIE" FOR ALL CHILDREN IN "TABVARIANTI"  */
      IF UPDATE(TIPOLOGIA)
      BEGIN
         UPDATE TABVARIANTI
          SET   TIPOLOGIA = I1.TIPOLOGIA
         FROM   TABVARIANTI T2, INSERTED I1, DELETED D1
         WHERE  T2.TIPOLOGIA = D1.TIPOLOGIA
          AND  (I1.TIPOLOGIA != D1.TIPOLOGIA)
      END
      
      /*  MODIFY PARENT CODE OF "TABTIPOLOGIE" FOR ALL CHILDREN IN "TIPOLOGIEARTICOLI"  */
      IF UPDATE(TIPOLOGIA)
      BEGIN
         UPDATE TIPOLOGIEARTICOLI
          SET   CODTIPOLOGIA = I1.TIPOLOGIA
         FROM   TIPOLOGIEARTICOLI T2, INSERTED I1, DELETED D1
         WHERE  T2.CODTIPOLOGIA = D1.TIPOLOGIA
          AND  (I1.TIPOLOGIA != D1.TIPOLOGIA)
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO


CREATE TRIGGER TD_TABTIPOLOGIE ON TABTIPOLOGIE FOR DELETE AS
BEGIN
    DECLARE
       @NUMROWS  INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    /* CANNOT DELETE PARENT "TABTIPOLOGIE" IF CHILDREN STILL EXIST IN "ANAGRAFICAARTICOLI"  */
    IF EXISTS (SELECT TOP 1 1
               FROM   ANAGRAFICAARTICOLI T2, DELETED T1
               WHERE  T2.TIP_CONTATORE = T1.TIPOLOGIA AND T1.TIP_CONTATORE=1)
       BEGIN
          SELECT @ERRMSG = 'Children still exist in "ANAGRAFICAARTICOLI". Cannot delete parent "TABTIPOLOGIE".'
          GOTO ERROR
       END

    
    /*  DELETE ALL CHILDREN IN "TABVARIANTI"  */
    DELETE TABVARIANTI
    FROM   TABVARIANTI T2, DELETED T1
    WHERE  T2.TIPOLOGIA = T1.TIPOLOGIA
    
    /*  DELETE ALL CHILDREN IN "TIPOLOGIEARTICOLI"  */
    DELETE TIPOLOGIEARTICOLI
    FROM   TIPOLOGIEARTICOLI T2, DELETED T1
    WHERE  T2.CODTIPOLOGIA = T1.TIPOLOGIA
    
    
    RETURN


/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END


GO
GRANT DELETE
    ON OBJECT::[dbo].[TABTIPOLOGIE] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[TABTIPOLOGIE] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[TABTIPOLOGIE] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[TABTIPOLOGIE] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[TABTIPOLOGIE] TO [Metodo98]
    AS [dbo];

