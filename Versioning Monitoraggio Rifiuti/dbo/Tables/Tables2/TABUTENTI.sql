CREATE TABLE [dbo].[TABUTENTI] (
    [USERID]           VARCHAR (25)  NOT NULL,
    [USERDB]           VARCHAR (25)  NOT NULL,
    [DESCRIZIONE]      VARCHAR (80)  NULL,
    [NRTERMINALE]      DECIMAL (5)   NOT NULL,
    [ESERCIZIOATTIVO]  DECIMAL (5)   NULL,
    [SUPERVISOR]       SMALLINT      DEFAULT (0) NULL,
    [UTENTEMODIFICA]   VARCHAR (25)  NOT NULL,
    [DATAMODIFICA]     DATETIME      NOT NULL,
    [CTRLECCEZIONIART] SMALLINT      DEFAULT (0) NULL,
    [NomeMacchina]     VARCHAR (25)  DEFAULT ('') NULL,
    [PERSVISIONI]      SMALLINT      CONSTRAINT [DF_TABUTENTI_PERSVISIONI] DEFAULT (1) NULL,
    [CODCLIFOR]        VARCHAR (7)   CONSTRAINT [DF_TABUTENTI_CODCLIFOR] DEFAULT ('') NULL,
    [AGENTE]           VARCHAR (7)   NULL,
    [FLGSISTRI]        SMALLINT      CONSTRAINT [DF_TABUTENTI_FLGSISTRI] DEFAULT ((0)) NOT NULL,
    [FlgQlkAdmin]      SMALLINT      CONSTRAINT [DF_TABUTENTI_FlgQlkAdmin] DEFAULT ((0)) NULL,
    [TEAMSYSTEMID]     VARCHAR (200) DEFAULT ('') NULL,
    [PSWID]            VARCHAR (100) DEFAULT ('') NULL,
    [FlgAssistance]    SMALLINT      DEFAULT ((0)) NULL,
    [PswAs]            VARCHAR (50)  DEFAULT ('') NULL,
    CONSTRAINT [PK_TABUTENTI] PRIMARY KEY CLUSTERED ([USERID] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [CKC_SUPERVISOR_TABUTENT] CHECK ([SUPERVISOR] = 0 or [SUPERVISOR] = 1),
    CONSTRAINT [CTRLECCEZIONIART_CHK] CHECK ([CTRLECCEZIONIART] = 1 or [CTRLECCEZIONIART] = 0)
);


GO
CREATE UNIQUE NONCLUSTERED INDEX [TABUTENTI_DB]
    ON [dbo].[TABUTENTI]([USERDB] ASC) WITH (FILLFACTOR = 90);


GO
CREATE UNIQUE NONCLUSTERED INDEX [NRTERMINALE_UT]
    ON [dbo].[TABUTENTI]([NRTERMINALE] ASC) WITH (FILLFACTOR = 90);


GO

CREATE TRIGGER [TI_TABUTENTI] ON [TABUTENTI] FOR INSERT AS
BEGIN
   DECLARE
      @NUMROWS  INT,
      @UserID   varCHAR(25),
      @LastProg INT,
      @ERRNO    INT,
      @ERRMSG   varCHAR(255)

   SELECT @NUMROWS = @@ROWCOUNT
   IF @NUMROWS = 0
      RETURN

   IF UPDATE([USERID])
   BEGIN
      DECLARE CUR_UserID CURSOR FOR SELECT [USERID] FROM INSERTED
      OPEN CUR_UserID
      FETCH NEXT FROM CUR_UserID INTO @UserID

      WHILE @@FETCH_STATUS = 0
      BEGIN
         SELECT @LastProg = ISNULL(MAX([PROGRESSIVO]),0) FROM [TABPROFILI]

         INSERT INTO [TABPROFILI] ([PROGRESSIVO],[CODGRUPPO],[CODUTENTE],[CODRUOLO],[UTENTEMODIFICA],[DATAMODIFICA])
         VALUES (@LastProg+1, NULL, @UserID, 0, 'dbo', GETDATE())

         FETCH NEXT FROM CUR_UserID INTO @UserID
      END
      CLOSE CUR_UserID
      DEALLOCATE CUR_UserID
   END

   RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

CREATE TRIGGER [TU_TABUTENTI] ON [TABUTENTI] FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN

      
      /*  MODIFY PARENT CODE OF "TABUTENTI" FOR ALL CHILDREN IN "TABMEMBRIGRUPPO"  */
      IF UPDATE(USERID)
      BEGIN
         UPDATE TABMEMBRIGRUPPO
          SET   CODUTENTE = I1.USERID
         FROM   TABMEMBRIGRUPPO T2, INSERTED I1, DELETED D1
         WHERE  T2.CODUTENTE = D1.USERID
          AND  (I1.USERID != D1.USERID)
      END
      
      /*  MODIFY PARENT CODE OF "TABUTENTI" FOR ALL CHILDREN IN "TABACCESSIUTENTE"  */
      IF UPDATE(USERID)
      BEGIN
         UPDATE TABACCESSIUTENTE
          SET   CODUTENTE = I1.USERID
         FROM   TABACCESSIUTENTE T2, INSERTED I1, DELETED D1
         WHERE  T2.CODUTENTE = D1.USERID
          AND  (I1.USERID != D1.USERID)
      END

      /*  MODIFY PARENT CODE OF "TABUTENTI" FOR ALL CHILDREN IN "TABAGENTIUTENTE"  */
      IF UPDATE(USERID)
      BEGIN
         UPDATE TABAGENTIUTENTE
          SET   CODUTENTE = I1.USERID
         FROM   TABAGENTIUTENTE T2, INSERTED I1, DELETED D1
         WHERE  T2.CODUTENTE = D1.USERID
          AND  (I1.USERID != D1.USERID)
      END

      /* IMPOSTAZIONISTAMPA */
      IF UPDATE(USERID)
      BEGIN
         UPDATE IMPOSTAZIONISTAMPA
          SET   NOMEUTENTE = I1.USERID
         FROM   IMPOSTAZIONISTAMPA T2, INSERTED I1, DELETED D1
         WHERE  T2.NOMEUTENTE = D1.USERID
          AND  (I1.USERID != D1.USERID)
      END

      /*ACCESSICAUSCONT */
      IF UPDATE(USERID)
      BEGIN
         UPDATE ACCESSICAUSCONT
          SET   NOMEUTENTE = I1.USERID
         FROM   ACCESSICAUSCONT T2, INSERTED I1, DELETED D1
         WHERE  T2.NOMEUTENTE = D1.USERID
          AND  (I1.USERID != D1.USERID)
      END

      /*ACCESSICAUSMAG*/
      IF UPDATE(USERID)
      BEGIN
         UPDATE ACCESSICAUSMAG
          SET   NOMEUTENTE = I1.USERID
         FROM   ACCESSICAUSMAG T2, INSERTED I1, DELETED D1
         WHERE  T2.NOMEUTENTE = D1.USERID
          AND  (I1.USERID != D1.USERID)
      END

      /* ACCESSICOMMESSEPROD */
      IF UPDATE(USERID)
      BEGIN
         UPDATE ACCESSICOMMESSEPROD
          SET   NOMEUTENTE = I1.USERID
         FROM   ACCESSICOMMESSEPROD T2, INSERTED I1, DELETED D1
         WHERE  T2.NOMEUTENTE = D1.USERID
          AND  (I1.USERID != D1.USERID)
      END

      /* ACCESSIDOCUMENTI */
      IF UPDATE(USERID)
      BEGIN
         UPDATE ACCESSIDOCUMENTI
          SET   NOMEUTENTE = I1.USERID
         FROM   ACCESSIDOCUMENTI T2, INSERTED I1, DELETED D1
         WHERE  T2.NOMEUTENTE = D1.USERID
          AND  (I1.USERID != D1.USERID)
      END

      /* ACCESSILISTECONS */
      IF UPDATE(USERID)
      BEGIN
         UPDATE ACCESSILISTECONS
          SET   NOMEUTENTE = I1.USERID
         FROM   ACCESSILISTECONS T2, INSERTED I1, DELETED D1
         WHERE  T2.NOMEUTENTE = D1.USERID
          AND  (I1.USERID != D1.USERID)
      END
		 
      /* ACCESSILISTEMOV */
      IF UPDATE(USERID)
      BEGIN
         UPDATE ACCESSILISTEMOV
          SET   NOMEUTENTE = I1.USERID
         FROM   ACCESSILISTEMOV T2, INSERTED I1, DELETED D1
         WHERE  T2.NOMEUTENTE = D1.USERID
          AND  (I1.USERID != D1.USERID)
      END
		 
      /* ACCESSILISTETRASF */
      IF UPDATE(USERID)
      BEGIN
         UPDATE ACCESSILISTETRASF
          SET   NOMEUTENTE = I1.USERID
         FROM   ACCESSILISTETRASF T2, INSERTED I1, DELETED D1
         WHERE  T2.NOMEUTENTE = D1.USERID
          AND  (I1.USERID != D1.USERID)
      END
      
      /*  MODIFY PARENT CODE OF "TABUTENTI" FOR ALL CHILDREN IN "TABPROFILI"  */
      IF UPDATE(USERID)
      BEGIN

         UPDATE TABPROFILI

          SET   CODUTENTE = I1.USERID
         FROM   TABPROFILI T2, INSERTED I1, DELETED D1
         WHERE  T2.CODUTENTE = D1.USERID
          AND  (I1.USERID != D1.USERID)
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO



CREATE TRIGGER [TUD_SERVICEUSER] ON [TABUTENTI] FOR UPDATE, DELETE AS
BEGIN
    DECLARE @NUMROWS  INT
      
    SELECT @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
        RETURN
    
    IF EXISTS(SELECT USERDB FROM DELETED WHERE USERDB IN ('ABF4CCEC8A254509BE6016F'))
    BEGIN
        RAISERROR ('UTENTE DEI SERVIZI METODO NON MODIFICABILE', 1, 1)
        ROLLBACK  TRANSACTION
    END
END

GO

CREATE TRIGGER [TD_TABUTENTI] ON [TABUTENTI] FOR DELETE AS
BEGIN
    DECLARE
       @NUMROWS  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    /*  DELETE ALL CHILDREN IN "TABMEMBRIGRUPPO"  */
    DELETE TABMEMBRIGRUPPO
    FROM   TABMEMBRIGRUPPO T2, DELETED T1
    WHERE  T2.CODUTENTE = T1.USERID
    
    /*  DELETE ALL CHILDREN IN "TABACCESSIUTENTE"  */
    DELETE TABACCESSIUTENTE
    FROM   TABACCESSIUTENTE T2, DELETED T1
    WHERE  T2.CODUTENTE = T1.USERID
    
    /*  DELETE ALL CHILDREN IN "TABAGENTIUTENTE"  */
    DELETE TABAGENTIUTENTE
    FROM   TABAGENTIUTENTE T2, DELETED T1
    WHERE  T2.CODUTENTE = T1.USERID
    
    /*  DELETE ALL CHILDREN IN "TABPROFILI"  */
    DELETE TABPROFILI
    FROM   TABPROFILI T2, DELETED T1
    WHERE  T2.CODUTENTE = T1.USERID

    /*  DELETE ALL CHILDREN IN "IMPOSTAZIONISTAMPA"  */
    DELETE IMPOSTAZIONISTAMPA
    FROM   IMPOSTAZIONISTAMPA T2, DELETED T1
    WHERE  T2.NOMEUTENTE = T1.USERID

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR(@ERRMSG,1, 1)
    ROLLBACK  TRANSACTION
END

GO
GRANT REFERENCES
    ON OBJECT::[dbo].[TABUTENTI] TO [CTX-Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[TABUTENTI] TO [CTX-Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[TABUTENTI] TO [CTX-Metodo98]
    AS [dbo];


GO
GRANT DELETE
    ON OBJECT::[dbo].[TABUTENTI] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[TABUTENTI] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[TABUTENTI] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[TABUTENTI] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[TABUTENTI] TO [Metodo98]
    AS [dbo];

