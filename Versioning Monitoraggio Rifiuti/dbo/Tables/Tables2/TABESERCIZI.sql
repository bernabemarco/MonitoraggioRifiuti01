CREATE TABLE [dbo].[TABESERCIZI] (
    [CODICE]               DECIMAL (5)    NOT NULL,
    [DESCRIZIONE]          VARCHAR (25)   NULL,
    [DATAINICONT]          DATETIME       NOT NULL,
    [DATAFINECONT]         DATETIME       NOT NULL,
    [DATAINIMAG]           DATETIME       NOT NULL,
    [DATAFINEMAG]          DATETIME       NOT NULL,
    [DATAINIIVA]           DATETIME       NOT NULL,
    [DATAFINEIVA]          DATETIME       NOT NULL,
    [USAEURO]              SMALLINT       DEFAULT (0) NOT NULL,
    [STATOCONT]            SMALLINT       DEFAULT (0) NOT NULL,
    [STATOMAG]             SMALLINT       DEFAULT (0) NOT NULL,
    [STATOIVA]             SMALLINT       DEFAULT (0) NOT NULL,
    [LIQIVA]               CHAR (1)       DEFAULT ('M') NOT NULL,
    [INTRASTATACQ]         CHAR (1)       DEFAULT ('M') NOT NULL,
    [INTRASTATVEND]        CHAR (1)       DEFAULT ('M') NOT NULL,
    [INTRAREGIMEACQ]       SMALLINT       DEFAULT (0) NULL,
    [INTRAREGIMEVEND]      SMALLINT       DEFAULT (0) NOT NULL,
    [PLAFMOBILE]           SMALLINT       DEFAULT (0) NULL,
    [UTENTEMODIFICA]       VARCHAR (25)   NOT NULL,
    [DATAMODIFICA]         DATETIME       NOT NULL,
    [TIPOGESTSPLITPAYMENT] SMALLINT       NULL,
    [TIPOACCONTOIVA]       SMALLINT       NULL,
    [PRCACCONTOIVA]        DECIMAL (8, 5) NULL,
    CONSTRAINT [PK_TABESERCIZI] PRIMARY KEY CLUSTERED ([CODICE] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [CHK_TABESERCIZI_TIPOACCONTOIVA] CHECK ([TIPOACCONTOIVA]=(2) OR [TIPOACCONTOIVA]=(1) OR [TIPOACCONTOIVA]=(0)),
    CONSTRAINT [CKC_INTRAREGIMEACQ_TABESERC] CHECK ([INTRAREGIMEACQ] = 0 or [INTRAREGIMEACQ] = 1),
    CONSTRAINT [CKC_INTRAREGIMEVEND_TABESERC] CHECK ([INTRAREGIMEVEND] = 0 or [INTRAREGIMEVEND] = 1),
    CONSTRAINT [CKC_INTRASTATACQ_TABESERC] CHECK ([INTRASTATACQ] = 'A' or [INTRASTATACQ] = 'M' or [INTRASTATACQ] = 'T'),
    CONSTRAINT [CKC_INTRASTATVEND_TABESERC] CHECK ([INTRASTATVEND] = 'A' or [INTRASTATVEND] = 'T' or [INTRASTATVEND] = 'M'),
    CONSTRAINT [CKC_LIQIVA_TABESERC] CHECK ([LIQIVA] = 'T' or [LIQIVA] = 'M'),
    CONSTRAINT [CKC_PLAFMOBILE_TABESERC] CHECK ([PLAFMOBILE] = 0 or [PLAFMOBILE] = 1),
    CONSTRAINT [CKC_STATOCONT_TABESERC] CHECK ([STATOCONT] = 0 or [STATOCONT] = 1),
    CONSTRAINT [CKC_STATOIVA_TABESERC] CHECK ([STATOIVA] = 0 or [STATOIVA] = 1),
    CONSTRAINT [CKC_STATOMAG_TABESERC] CHECK ([STATOMAG] = 0 or [STATOMAG] = 1),
    CONSTRAINT [CKC_USAEURO_TABESERC] CHECK ([USAEURO] = 0 or [USAEURO] = 1)
);


GO

/*  DELETE TRIGGER "TD_TABESERCIZI" FOR TABLE "TABESERCIZI"  */
CREATE TRIGGER TD_TABESERCIZI ON TABESERCIZI FOR DELETE AS
BEGIN
    DECLARE
       @NUMROWS  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  CANNOT DELETE PARENT "TABESERCIZI" IF CHILDREN STILL EXIST IN "ANAGRAFICARISERVATICF"  */
    IF EXISTS (SELECT 1
               FROM   ANAGRAFICARISERVATICF T2, DELETED T1
               WHERE  T2.ESERCIZIO = T1.CODICE)
       BEGIN
          SELECT @ERRNO  = 30006,
                 @ERRMSG = 'Children still exist in "ANAGRAFICARISERVATICF". Cannot delete parent "TABESERCIZI".'
          GOTO ERROR
       END
    
    /*  DELETE ALL CHILDREN IN "TABVINCOLIGIC"  */
    DELETE TABVINCOLIGIC
    FROM   TABVINCOLIGIC T2, DELETED T1
    WHERE  T2.ESERCIZIO = T1.CODICE
    
    /*  DELETE ALL CHILDREN IN "GENCCOSTO"  */
    DELETE GENCCOSTO
    FROM   GENCCOSTO T2, DELETED T1
    WHERE  T2.ESERCIZIO = T1.CODICE

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

/*  UPDATE TRIGGER "TU_TABESERCIZI" FOR TABLE "TABESERCIZI"  */
CREATE TRIGGER TU_TABESERCIZI ON TABESERCIZI FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN

      
      /*  CANNOT MODIFY PARENT CODE IN "TABESERCIZI" IF CHILDREN STILL EXIST IN "ANAGRAFICARISERVATICF"  */
      IF UPDATE(CODICE)
      BEGIN
         IF EXISTS (SELECT 1
                    FROM   ANAGRAFICARISERVATICF T2, INSERTED I1, DELETED D1
                    WHERE  T2.ESERCIZIO = D1.CODICE
                     AND  (I1.CODICE != D1.CODICE))
            BEGIN
               SELECT @ERRNO  = 30005,
                      @ERRMSG = 'Children still exist in "ANAGRAFICARISERVATICF". Cannot modify parent code in "TABESERCIZI".'
               GOTO ERROR
            END
      END
      
      /*  MODIFY PARENT CODE OF "TABESERCIZI" FOR ALL CHILDREN IN "TABVINCOLIGIC"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE TABVINCOLIGIC
          SET   ESERCIZIO = I1.CODICE
         FROM   TABVINCOLIGIC T2, INSERTED I1, DELETED D1
         WHERE  T2.ESERCIZIO = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END
      
      /*  MODIFY PARENT CODE OF "TABESERCIZI" FOR ALL CHILDREN IN "GENCCOSTO"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE GENCCOSTO
          SET   ESERCIZIO = I1.CODICE
         FROM   GENCCOSTO T2, INSERTED I1, DELETED D1
         WHERE  T2.ESERCIZIO = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
GRANT DELETE
    ON OBJECT::[dbo].[TABESERCIZI] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[TABESERCIZI] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[TABESERCIZI] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[TABESERCIZI] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[TABESERCIZI] TO [Metodo98]
    AS [dbo];

