CREATE TABLE [dbo].[ARTICOLIUMPREFERITE] (
    [CODART]         VARCHAR (50) NOT NULL,
    [TIPOUM]         DECIMAL (5)  NOT NULL,
    [UM]             VARCHAR (3)  NOT NULL,
    [UTENTEMODIFICA] VARCHAR (25) NOT NULL,
    [DATAMODIFICA]   DATETIME     NOT NULL,
    CONSTRAINT [PK_ARTICOLIUMPREFERITE] PRIMARY KEY CLUSTERED ([CODART] ASC, [TIPOUM] ASC) WITH (FILLFACTOR = 90)
);


GO
CREATE NONCLUSTERED INDEX [TIPOUM]
    ON [dbo].[ARTICOLIUMPREFERITE]([TIPOUM] ASC) WITH (FILLFACTOR = 90);


GO

/*  INSERT TRIGGER "TI_ARTICOLIUMPREFERITE" FOR TABLE "ARTICOLIUMPREFERITE"  */
CREATE TRIGGER TI_ARTICOLIUMPREFERITE ON ARTICOLIUMPREFERITE FOR INSERT AS
BEGIN
    DECLARE
       @MAXCARD  INT,
       @NUMROWS  INT,
       @NUMNULL  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  PARENT "ARTICOLIUNITAMISURA" MUST EXIST WHEN INSERTING A CHILD IN "ARTICOLIUMPREFERITE"  */
    IF UPDATE(CODART) OR
       UPDATE(UM)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   ARTICOLIUNITAMISURA T1, INSERTED T2
           WHERE  T1.CODART = T2.CODART
            AND   T1.UM = T2.UM) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "ARTICOLIUNITAMISURA". Cannot create child in "ARTICOLIUMPREFERITE".'
             GOTO ERROR
          END
    END
    
    /*  PARENT "TABTIPIUM" MUST EXIST WHEN INSERTING A CHILD IN "ARTICOLIUMPREFERITE"  */
    IF UPDATE(TIPOUM)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   TABTIPIUM T1, INSERTED T2
           WHERE  T1.CODICE = T2.TIPOUM) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "TABTIPIUM". Cannot create child in "ARTICOLIUMPREFERITE".'
             GOTO ERROR
          END
    END

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

/*  UPDATE TRIGGER "TU_ARTICOLIUMPREFERITE" FOR TABLE "ARTICOLIUMPREFERITE"  */
CREATE TRIGGER TU_ARTICOLIUMPREFERITE ON ARTICOLIUMPREFERITE FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN

      
      /*  PARENT "ARTICOLIUNITAMISURA" MUST EXIST WHEN UPDATING A CHILD IN "ARTICOLIUMPREFERITE"  */
      IF UPDATE(CODART) OR
         UPDATE(UM)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   ARTICOLIUNITAMISURA T1, INSERTED T2
             WHERE  T1.CODART = T2.CODART
              AND   T1.UM = T2.UM) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"ARTICOLIUNITAMISURA" does not exist. Cannot modify child in "ARTICOLIUMPREFERITE".'
               GOTO ERROR
            END
      END
      
      /*  PARENT "TABTIPIUM" MUST EXIST WHEN UPDATING A CHILD IN "ARTICOLIUMPREFERITE"  */
      IF UPDATE(TIPOUM)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   TABTIPIUM T1, INSERTED T2
             WHERE  T1.CODICE = T2.TIPOUM) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"TABTIPIUM" does not exist. Cannot modify child in "ARTICOLIUMPREFERITE".'
               GOTO ERROR
            END
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

CREATE TRIGGER [dbo].[TI_ARTICOLIUMPREFERITE_SINONIMI]
   ON  [dbo].[ARTICOLIUMPREFERITE]
   AFTER INSERT
AS 
BEGIN

DECLARE @TIPOCONF		CHAR(1)
DECLARE @ARTTIPOLOGIA	SMALLINT
DECLARE @CODART			VARCHAR(50)
DECLARE @DESCRIZIONE	VARCHAR(80)
DECLARE @UM				VARCHAR(3)
DECLARE @UTENTEMODIFICA	VARCHAR(25)
DECLARE @PROGRESSIVO	DECIMAL(10,0)
DECLARE @GSTSINONUM		SMALLINT

	SELECT 
		@TIPOCONF = VALORE 
	FROM 
		TP_PARAMETRI 
	WHERE NOME = 'trsf' 
	
	IF (@TIPOCONF = 'C')
		BEGIN
			DECLARE CUR_ART CURSOR FOR SELECT CODART,UM,UTENTEMODIFICA FROM inserted WHERE TIPOUM = 1
			OPEN CUR_ART
			FETCH NEXT FROM CUR_ART INTO @CODART,@UM,@UTENTEMODIFICA
			
			WHILE @@FETCH_STATUS = 0
			  	BEGIN
					SELECT 
						@GSTSINONUM = ISNULL(VALORE ,0)
					FROM 
						TP_PARAMETRI 
					WHERE NOME = 'SINONIMONUMERICO'

					SELECT
						@ARTTIPOLOGIA = ARTTIPOLOGIA,
						@DESCRIZIONE = DESCRIZIONE
					FROM
						ANAGRAFICAARTICOLI
					WHERE
						CODICE = @CODART
			
					IF (@ARTTIPOLOGIA = 0)
						BEGIN
							IF NOT EXISTS(	SELECT 
												* 
											FROM 
												TP_SINONIMI 
											WHERE
												CODICE = @CODART
										 )
								BEGIN
									EXEC NUOVOPROGRESSIVO 'TP_SINONIMI',1,@PROGRESSIVO OUTPUT
									INSERT INTO TP_SINONIMI(
															PROGRESSIVO,
															CODICE,
															COD_SINO,
															DESC_SINO,
															COEFF_SINO,
															UTENTEMODIFICA,
															DATAMODIFICA,
															UM,
															ESPORTAAG,
															ESPORTAPV
															) 
									VALUES	(
											@PROGRESSIVO,@CODART,@CODART,@DESCRIZIONE,1,@UTENTEMODIFICA,GETDATE(),@UM,1,1
											)
			
									EXEC NUOVOPROGRESSIVO 'TP_SINONIMI',1,@PROGRESSIVO OUTPUT
									INSERT INTO TP_SINONIMI(
															PROGRESSIVO,
															CODICE,
															COD_SINO,
															DESC_SINO,
															COEFF_SINO,
															UTENTEMODIFICA,
															DATAMODIFICA,
															UM,
															ESPORTAAG,
															ESPORTAPV
															) 
									VALUES	(
											@PROGRESSIVO,@CODART,left(@DESCRIZIONE,7),@DESCRIZIONE,1,@UTENTEMODIFICA,GETDATE(),@UM,1,1
											)
									
									IF ( @GSTSINONUM = 1 )
										BEGIN

											EXEC NUOVOPROGRESSIVO 'TP_SINONIMI',1,@PROGRESSIVO OUTPUT
											INSERT INTO TP_SINONIMI(
																	PROGRESSIVO,
																	CODICE,
																	COD_SINO,
																	DESC_SINO,
																	COEFF_SINO,
																	UTENTEMODIFICA,
																	DATAMODIFICA,
																	UM,
																	ESPORTAAG,
																	ESPORTAPV
																	) 
											VALUES	(
													@PROGRESSIVO,@CODART,@PROGRESSIVO,@DESCRIZIONE,1,@UTENTEMODIFICA,GETDATE(),@UM,1,1
													)
										END
								END
						END
					FETCH NEXT FROM CUR_ART INTO @CODART,@UM,@UTENTEMODIFICA
				END
			CLOSE CUR_ART
			DEALLOCATE CUR_ART
	END
END


GO
GRANT DELETE
    ON OBJECT::[dbo].[ARTICOLIUMPREFERITE] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[ARTICOLIUMPREFERITE] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[ARTICOLIUMPREFERITE] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[ARTICOLIUMPREFERITE] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[ARTICOLIUMPREFERITE] TO [Metodo98]
    AS [dbo];

