CREATE TABLE [dbo].[IMPOSTAZIONICTRLINV] (
    [NOMEIMPOSTAZIONE]   VARCHAR (80) NOT NULL,
    [RP_CAUSALE]         DECIMAL (5)  NULL,
    [RP_CONTO]           VARCHAR (7)  NULL,
    [RP_MASTROCDC]       VARCHAR (10) NULL,
    [RP_TIPOVAL]         INT          CONSTRAINT [DF__IMPOSTAZI__RP_TI] DEFAULT (0) NULL,
    [RP_NUMEXTRA]        SMALLINT     NULL,
    [RN_CAUSALE]         DECIMAL (5)  NULL,
    [RN_CONTO]           VARCHAR (7)  NULL,
    [RN_MASTROCDC]       VARCHAR (10) NULL,
    [RN_TIPOVAL]         INT          CONSTRAINT [DF__IMPOSTAZI__RN_TI] DEFAULT (0) NULL,
    [RN_NUMEXTRA]        SMALLINT     NULL,
    [DATAREG]            DATETIME     NOT NULL,
    [FINOALLADATA]       DATETIME     NULL,
    [SOLOLISTA]          SMALLINT     DEFAULT (0) NULL,
    [CODMAGAZZINO]       VARCHAR (10) NULL,
    [TIPOCTRL]           SMALLINT     DEFAULT (0) NULL,
    [NUMCTRL]            SMALLINT     DEFAULT (0) NULL,
    [CODUBICAZIONE]      VARCHAR (10) NULL,
    [UTENTEMODIFICA]     VARCHAR (25) NOT NULL,
    [DATAMODIFICA]       DATETIME     NOT NULL,
    [ImpostazioneFiltro] VARCHAR (50) NULL,
    CONSTRAINT [PK_IMPOSTAZIONICTRLINV] PRIMARY KEY CLUSTERED ([NOMEIMPOSTAZIONE] ASC) WITH (FILLFACTOR = 90)
);


GO

/*  UPDATE TRIGGER "TU_IMPOSTAZIONICTRLINV" FOR TABLE "IMPOSTAZIONICTRLINV"  */
CREATE TRIGGER TU_IMPOSTAZIONICTRLINV ON IMPOSTAZIONICTRLINV FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN

      
      /*  MODIFY PARENT CODE OF "IMPOSTAZIONICTRLINV" FOR ALL CHILDREN IN "LISTAARTICOLICTRLINV"  */
      IF UPDATE(NOMEIMPOSTAZIONE)
      BEGIN
         UPDATE LISTAARTICOLICTRLINV
          SET   NOMEIMPOSTAZIONE = I1.NOMEIMPOSTAZIONE
         FROM   LISTAARTICOLICTRLINV T2, INSERTED I1, DELETED D1
         WHERE  T2.NOMEIMPOSTAZIONE = D1.NOMEIMPOSTAZIONE
          AND  (I1.NOMEIMPOSTAZIONE != D1.NOMEIMPOSTAZIONE)
      END
      
      /*  MODIFY PARENT CODE OF "IMPOSTAZIONICTRLINV" FOR ALL CHILDREN IN "LISTAMOVIMENTICTRLINV"  */
      IF UPDATE(NOMEIMPOSTAZIONE)
      BEGIN
         UPDATE LISTAMOVIMENTICTRLINV
          SET   NOMEIMPOSTAZIONE = I1.NOMEIMPOSTAZIONE
         FROM   LISTAMOVIMENTICTRLINV T2, INSERTED I1, DELETED D1
         WHERE  T2.NOMEIMPOSTAZIONE = D1.NOMEIMPOSTAZIONE
          AND  (I1.NOMEIMPOSTAZIONE != D1.NOMEIMPOSTAZIONE)
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

/*  DELETE TRIGGER "TD_IMPOSTAZIONICTRLINV" FOR TABLE "IMPOSTAZIONICTRLINV"  */
CREATE TRIGGER TD_IMPOSTAZIONICTRLINV ON IMPOSTAZIONICTRLINV FOR DELETE AS
BEGIN
    DECLARE
       @NUMROWS  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  DELETE ALL CHILDREN IN "LISTAARTICOLICTRLINV"  */
    DELETE LISTAARTICOLICTRLINV
    FROM   LISTAARTICOLICTRLINV T2, DELETED T1
    WHERE  T2.NOMEIMPOSTAZIONE = T1.NOMEIMPOSTAZIONE
    
    /*  DELETE ALL CHILDREN IN "LISTAMOVIMENTICTRLINV"  */
    DELETE LISTAMOVIMENTICTRLINV
    FROM   LISTAMOVIMENTICTRLINV T2, DELETED T1
    WHERE  T2.NOMEIMPOSTAZIONE = T1.NOMEIMPOSTAZIONE

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
GRANT DELETE
    ON OBJECT::[dbo].[IMPOSTAZIONICTRLINV] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[IMPOSTAZIONICTRLINV] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[IMPOSTAZIONICTRLINV] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[IMPOSTAZIONICTRLINV] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[IMPOSTAZIONICTRLINV] TO [Metodo98]
    AS [dbo];

