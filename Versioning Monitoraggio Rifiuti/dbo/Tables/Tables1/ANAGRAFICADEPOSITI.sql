CREATE TABLE [dbo].[ANAGRAFICADEPOSITI] (
    [CODICE]                  VARCHAR (10)   NOT NULL,
    [TIPODEPOSITO]            SMALLINT       NULL,
    [DISPONIBILE]             SMALLINT       DEFAULT (0) NULL,
    [DESCRIZIONE]             VARCHAR (80)   NULL,
    [INDIRIZZO]               VARCHAR (80)   NULL,
    [CAP]                     VARCHAR (8)    NULL,
    [LOCALITA]                VARCHAR (25)   NULL,
    [PROVINCIA]               VARCHAR (4)    NULL,
    [TELEFONO]                VARCHAR (18)   NULL,
    [FAX]                     VARCHAR (18)   NULL,
    [CODNAZIONE]              DECIMAL (5)    NULL,
    [PRINCIPALE]              SMALLINT       DEFAULT (0) NULL,
    [NOTE]                    VARCHAR (255)  NULL,
    [DATAINIVALIDITA]         DATETIME       NOT NULL,
    [DATAFINEVALIDITA]        DATETIME       NOT NULL,
    [UTENTEMODIFICA]          VARCHAR (25)   NOT NULL,
    [DATAMODIFICA]            DATETIME       NOT NULL,
    [INTERVALLOPIANIF]        SMALLINT       CONSTRAINT [DF_ANAGRAFICADEPOSITI_INTERVALLOPIANIF] DEFAULT (0) NULL,
    [GIORNILAVAZIENDALE]      SMALLINT       NULL,
    [GIORNILAVSOLARE]         SMALLINT       NULL,
    [NUMEROMESICOPERTURA]     SMALLINT       NULL,
    [TASSOMANTENIMENTOSCORTA] DECIMAL (8, 5) NULL,
    [FATTORESMORZAMENTO]      DECIMAL (8, 5) NULL,
    [FLGSISTRI]               SMALLINT       CONSTRAINT [DF_ANAGRAFICADEPOSITI_FLGSISTRI] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [PK_ANAGRAFICADEPOSITI] PRIMARY KEY CLUSTERED ([CODICE] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [CKC_DISPONIBILE_ANAGRAFI] CHECK ([DISPONIBILE] = 0 or [DISPONIBILE] = 1),
    CONSTRAINT [CKC_PRINCIPALE_ANAGRAFI] CHECK ([PRINCIPALE] = 0 or [PRINCIPALE] = 1)
);


GO
CREATE NONCLUSTERED INDEX [TIPODEP]
    ON [dbo].[ANAGRAFICADEPOSITI]([TIPODEPOSITO] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [CODNAZIONED]
    ON [dbo].[ANAGRAFICADEPOSITI]([CODNAZIONE] ASC) WITH (FILLFACTOR = 90);


GO

/*  DELETE TRIGGER "TP_TD_ANAGRAFICADEPOSITI" FOR TABLE "ANAGRAFICADEPOSITI"  */
CREATE TRIGGER [dbo].[TP_TD_ANAGRAFICADEPOSITI] ON [dbo].[ANAGRAFICADEPOSITI] FOR DELETE AS
BEGIN
    DECLARE
       @NUMROWS  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)
    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN
    
    /*  CANNOT DELETE PARENT "TP_TABMAGAZZINI" IF CHILDREN STILL EXIST IN "ANAGRAFICAARTICOLI"  */
    IF EXISTS (SELECT 1
               FROM   ANAGRAFICAARTICOLI T2, DELETED T1
               WHERE  T2.CODDEPOSITO = T1.CODICE)
       BEGIN
          SELECT @ERRNO  = 30006,
                 @ERRMSG = 'Children still exist in "ANAGRAFICAARTICOLI". Cannot delete parent "ANAGRAFICADEPOSITI".'
          GOTO ERROR
       END
    
    /*  CANNOT DELETE PARENT "ANAGRAFICADEPOSITI" IF CHILDREN STILL EXIST IN "STORICOMAG"  */
    IF EXISTS (SELECT 1
               FROM   STORICOMAG T2, DELETED T1
               WHERE  T2.CODDEPOSITO = T1.CODICE)
       BEGIN
          SELECT @ERRNO  = 30006,
                 @ERRMSG = 'Children still exist in "STORICOMAG". Cannot delete parent "ANAGRAFICADEPOSITI".'
          GOTO ERROR
       END
    
    /*  DELETE ALL CHILDREN IN "TP_TABMAGAZZINI"  */
    DELETE TP_TABMAGAZZINI
    FROM   TP_TABMAGAZZINI T2, DELETED T1
    WHERE  T2.CODDEPOSITO = T1.CODICE
    
    RETURN
/*  ERRORS HANDLING  */
ERROR:
    --RAISERROR @ERRNO @ERRMSG
    ROLLBACK  TRANSACTION
END

GO

/*  UPDATE TRIGGER "TU_ANAGRAFICADEPOSITI" FOR TABLE "ANAGRAFICADEPOSITI"  */
CREATE TRIGGER TU_ANAGRAFICADEPOSITI ON ANAGRAFICADEPOSITI FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN

      
      /*  CANNOT MODIFY PARENT CODE IN "ANAGRAFICADEPOSITI" IF CHILDREN STILL EXIST IN "ANAGRAFICAARTICOLI"  */
      IF UPDATE(CODICE)
      BEGIN
         IF EXISTS (SELECT 1
                    FROM   ANAGRAFICAARTICOLI T2, INSERTED I1, DELETED D1
                    WHERE  T2.CODDEPOSITO = D1.CODICE
                     AND  (I1.CODICE != D1.CODICE))
            BEGIN
               SELECT @ERRNO  = 30005,
                      @ERRMSG = 'Children still exist in "ANAGRAFICAARTICOLI". Cannot modify parent code in "ANAGRAFICADEPOSITI".'
               GOTO ERROR
            END
      END
      
      /*  CANNOT MODIFY PARENT CODE IN "ANAGRAFICADEPOSITI" IF CHILDREN STILL EXIST IN "STORICOMAG"  */
      IF UPDATE(CODICE)
      BEGIN
         IF EXISTS (SELECT 1
                    FROM   STORICOMAG T2, INSERTED I1, DELETED D1
                    WHERE  T2.CODDEPOSITO = D1.CODICE
                     AND  (I1.CODICE != D1.CODICE))
            BEGIN
               SELECT @ERRNO  = 30005,
                      @ERRMSG = 'Children still exist in "STORICOMAG". Cannot modify parent code in "ANAGRAFICADEPOSITI".'
               GOTO ERROR
            END
      END
      
      /*  MODIFY PARENT CODE OF "ANAGRAFICADEPOSITI" FOR ALL CHILDREN IN "EXTRADEPOSITI"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE EXTRADEPOSITI
          SET   CODDEPOSITO = I1.CODICE
         FROM   EXTRADEPOSITI T2, INSERTED I1, DELETED D1
         WHERE  T2.CODDEPOSITO = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END
      
      /*  MODIFY PARENT CODE OF "ANAGRAFICADEPOSITI" FOR ALL CHILDREN IN "TABUBICAZIONIDEPOSITI"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE TABUBICAZIONIDEPOSITI
          SET   CODDEPOSITO = I1.CODICE
         FROM   TABUBICAZIONIDEPOSITI T2, INSERTED I1, DELETED D1
         WHERE  T2.CODDEPOSITO = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

/*  DELETE TRIGGER "TD_ANAGRAFICADEPOSITI" FOR TABLE "ANAGRAFICADEPOSITI"  */
CREATE TRIGGER TD_ANAGRAFICADEPOSITI ON ANAGRAFICADEPOSITI FOR DELETE AS
BEGIN
    DECLARE
       @NUMROWS  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  CANNOT DELETE PARENT "ANAGRAFICADEPOSITI" IF CHILDREN STILL EXIST IN "ANAGRAFICAARTICOLI"  */
    IF EXISTS (SELECT 1
               FROM   ANAGRAFICAARTICOLI T2, DELETED T1
               WHERE  T2.CODDEPOSITO = T1.CODICE)
       BEGIN
          SELECT @ERRNO  = 30006,
                 @ERRMSG = 'Children still exist in "ANAGRAFICAARTICOLI". Cannot delete parent "ANAGRAFICADEPOSITI".'
          GOTO ERROR
       END
    
    /*  CANNOT DELETE PARENT "ANAGRAFICADEPOSITI" IF CHILDREN STILL EXIST IN "STORICOMAG"  */
    IF EXISTS (SELECT 1
               FROM   STORICOMAG T2, DELETED T1
               WHERE  T2.CODDEPOSITO = T1.CODICE)
       BEGIN
          SELECT @ERRNO  = 30006,
                 @ERRMSG = 'Children still exist in "STORICOMAG". Cannot delete parent "ANAGRAFICADEPOSITI".'
          GOTO ERROR
       END
    
    /*  DELETE ALL CHILDREN IN "EXTRADEPOSITI"  */
    DELETE EXTRADEPOSITI
    FROM   EXTRADEPOSITI T2, DELETED T1
    WHERE  T2.CODDEPOSITO = T1.CODICE
    
    /*  DELETE ALL CHILDREN IN "TABUBICAZIONIDEPOSITI"  */
    DELETE TABUBICAZIONIDEPOSITI
    FROM   TABUBICAZIONIDEPOSITI T2, DELETED T1
    WHERE  T2.CODDEPOSITO = T1.CODICE

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
GRANT DELETE
    ON OBJECT::[dbo].[ANAGRAFICADEPOSITI] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[ANAGRAFICADEPOSITI] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[ANAGRAFICADEPOSITI] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[ANAGRAFICADEPOSITI] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[ANAGRAFICADEPOSITI] TO [Metodo98]
    AS [dbo];

