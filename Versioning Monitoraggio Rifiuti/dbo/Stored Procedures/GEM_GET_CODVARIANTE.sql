
CREATE procedure GEM_GET_CODVARIANTE ( @CODART VARCHAR(50), @TIPOLOGIA VARCHAR(50),  @VARIANTE VARCHAR(50) OUTPUT)
AS

--SOLUZIONE NON PRATICABILE IN QUANTO GLI ARTICOLI NON SONO GENERATI
--	select @RES = substring(varesplicite, charindex(@TIPOLOGIA, varesplicite)+len(@TIPOLOGIA)+1, (select lungvariante from tabtipologie where Tipologia = @TIPOLOGIA) )
--	from anagraficaarticoli
--	where codice = @ARTICOLO

	DECLARE @RES VARCHAR(50)

	DECLARE @RADICECODART	VARCHAR(50)
	DECLARE @NUMTIPOLOGIA		AS INT
	DECLARE @POSIZ				AS INT

	DECLARE @CODTIPOLOGIA		VARCHAR(50)
	DECLARE @LUNGVARIANTE		AS INT
	DECLARE @CODVARIANTE		VARCHAR(50)

	SET @RADICECODART = SUBSTRING(@CODART, CHARINDEX('#',@CODART)+1,LEN(@CODART))

	SET @POSIZ	=0
	SET @RES = ''

	DECLARE CURR_MEZZI CURSOR  LOCAL  FAST_FORWARD FOR
	SELECT CODTIPOLOGIA, LUNGVARIANTE
	FROM TipologieArticoli TA INNER JOIN TABTIPOLOGIE TT ON TA.CODTIPOLOGIA=TT.TIPOLOGIA
	WHERE CodiceArt=SUBSTRING(@CODART, 1, CHARINDEX('#',@CODART)-1) 
	ORDER BY NUMEROTIP 

	OPEN CURR_MEZZI
	FETCH NEXT FROM CURR_MEZZI INTO  @CODTIPOLOGIA, @LUNGVARIANTE		
	WHILE @@FETCH_STATUS = 0
	BEGIN

		IF @CODTIPOLOGIA <> @TIPOLOGIA BEGIN
			SET @POSIZ = @POSIZ + @LUNGVARIANTE
		END 
		ELSE BEGIN
			SET @RES = SUBSTRING(@RADICECODART, @POSIZ+1, @LUNGVARIANTE)
		END

		FETCH NEXT FROM CURR_MEZZI INTO @CODTIPOLOGIA, @LUNGVARIANTE		
	END

	CLOSE CURR_MEZZI
	DEALLOCATE CURR_MEZZI

	SET  @VARIANTE = @RES


GO
GRANT EXECUTE
    ON OBJECT::[dbo].[GEM_GET_CODVARIANTE] TO [Metodo98]
    AS [dbo];

