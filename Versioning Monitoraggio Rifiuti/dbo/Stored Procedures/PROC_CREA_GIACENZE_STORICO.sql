

CREATE PROCEDURE [dbo].[PROC_CREA_GIACENZE_STORICO]

AS

BEGIN

SET NOCOUNT ON

DECLARE @Esercizio DECIMAL(5,0)

DECLARE esercizi_cursor CURSOR FAST_FORWARD FOR  
    SELECT CODICE FROM TABESERCIZI
ORDER BY CODICE;

OPEN esercizi_cursor

FETCH NEXT FROM esercizi_cursor 
INTO @Esercizio

WHILE @@FETCH_STATUS = 0
BEGIN
    /*STORICO GIACENZE*/
    DELETE FROM TP_GIACENZESTORICO WHERE Esercizio = (@Esercizio-1)
    
    INSERT INTO TP_GIACENZESTORICO(CodDeposito,CodArticolo,Giacenza,Ordinato,Impegnato,Esercizio,UtenteModifica,DataModifica)
    SELECT
        GIACENZAMETODO.CODDEPOSITO,
        GIACENZAMETODO.CODART,
        ISNULL((GIACENZAMETODO.CARICO - GIACENZAMETODO.SCARICO - GIACENZAMETODO.RESODACARICO + GIACENZAMETODO.RESODASCARICO),0) AS GIACENZA_F,
        ISNULL(GIACENZAMETODO.ORDINATO,0) AS ORDINATO_F,
        ISNULL(GIACENZAMETODO.IMPEGNATO,0) AS IMPEGNATO_F,
        (@Esercizio-1) AS Esercizio,
        USER_NAME(),
        GETDATE()
    FROM
    (
        SELECT
            STMAG.CODART,
            STMAG.CODDEPOSITO,
            SUM((STMAG.QTA1UM*STMAG.ORDINATO)) AS ORDINATO,
            SUM((STMAG.QTA1UM*STMAG.IMPEGNATO)) AS IMPEGNATO,
            SUM((CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END)) AS CARICO,
            SUM((CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END)) AS SCARICO,
            SUM((CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END)) AS RESODACARICO,
            SUM((CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END)) AS RESODASCARICO
        FROM 
            (
                SELECT DISTINCT
                    STMAG.PROGRESSIVO,
                    STMAG.CODART,
                    STMAG.CODDEPOSITO,
                    STMAG.QTA1UM,
                    STMAG.ORDINATO,
                    STMAG.IMPEGNATO,
                    STMAG.GIACENZA,
                    STMAG.RESO
                FROM
                    STORICOMAG AS STMAG
                INNER JOIN 
                    TP_EXTRAMAG TEM
                ON
                    (TEM.CodArt = STMAG.CODART OR TEM.OFCODARTRIF = STMAG.CODART) AND TEM.ConsidAcq = 1
                WHERE
                    STMAG.ESERCIZIO < @Esercizio
            ) STMAG
        GROUP BY 
            STMAG.CODART,
            STMAG.CODDEPOSITO
        HAVING  
            SUM(STMAG.QTA1UM*STMAG.ORDINATO) <>0 OR 
            SUM(STMAG.QTA1UM*STMAG.IMPEGNATO) <>0 OR 
            SUM(CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
            SUM(CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
            SUM(CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
            SUM(CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END) <>0 
    ) AS GIACENZAMETODO;
    
    --/*Articolo di riferimento*/
    --UPDATE TP_GIACENZESTORICO
    --SET 
    --  TP_GIACENZESTORICO.Giacenza = (CASE WHEN GIACENZAMETODO.SOMMAQTASTAT = 0 THEN ISNULL((GIACENZAMETODO.CARICO - GIACENZAMETODO.SCARICO - GIACENZAMETODO.RESODACARICO + GIACENZAMETODO.RESODASCARICO),0) ELSE (TP_GIACENZESTORICO.Giacenza + ISNULL((GIACENZAMETODO.CARICO - GIACENZAMETODO.SCARICO - GIACENZAMETODO.RESODACARICO + GIACENZAMETODO.RESODASCARICO),0)) END),
    --  TP_GIACENZESTORICO.Ordinato = (CASE WHEN GIACENZAMETODO.SOMMAQTASTAT = 0 THEN ISNULL(GIACENZAMETODO.ORDINATO,0) ELSE (TP_GIACENZESTORICO.Ordinato + ISNULL(GIACENZAMETODO.ORDINATO,0)) END),
    --  TP_GIACENZESTORICO.Impegnato = (CASE WHEN GIACENZAMETODO.SOMMAQTASTAT = 0 THEN ISNULL(GIACENZAMETODO.IMPEGNATO,0) ELSE (TP_GIACENZESTORICO.Impegnato + ISNULL(GIACENZAMETODO.IMPEGNATO,0)) END)
    --FROM
    --  TP_GIACENZESTORICO
    --INNER JOIN
    --(
    --  SELECT
    --      STMAG.CODART,
    --      STMAG.CODDEPOSITO,
    --      STMAG.SOMMAQTASTAT,
    --      SUM((STMAG.QTA1UM*STMAG.ORDINATO)) AS ORDINATO,
    --      SUM((STMAG.QTA1UM*STMAG.IMPEGNATO)) AS IMPEGNATO,
    --      SUM((CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END)) AS CARICO,
    --      SUM((CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END)) AS SCARICO,
    --      SUM((CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END)) AS RESODACARICO,
    --      SUM((CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END)) AS RESODASCARICO
    --  FROM 
    --      (
    --          SELECT
    --              TEM.CODART,
    --              (CASE WHEN ((TEM.OFCODARTRIF = '''') OR (TEM.OFCODARTRIF IS NULL)) THEN TEM.CODART ELSE TEM.OFCODARTRIF END) AS CODARTRIF,
    --              ISNULL(TEM.SOMMAQTASTAT,0) AS SOMMAQTASTAT,
    --              STMAG.CODDEPOSITO,
    --              STMAG.QTA1UM,
    --              STMAG.ORDINATO,
    --              STMAG.IMPEGNATO,
    --              STMAG.GIACENZA,
    --              STMAG.RESO
    --          FROM
    --              STORICOMAG AS STMAG
    --          INNER JOIN 
    --              TP_EXTRAMAG TEM
    --          ON
    --              TEM.OFCODARTRIF <> '' AND
    --              TEM.OFCODARTRIF = STMAG.CODART AND TEM.ConsidAcq = 1
    --          WHERE
    --              STMAG.ESERCIZIO < @Esercizio
    --      ) STMAG
    --  GROUP BY 
    --      STMAG.CODART,
    --      STMAG.CODDEPOSITO,
    --      STMAG.SOMMAQTASTAT
    --  HAVING  
    --      SUM(STMAG.QTA1UM*STMAG.ORDINATO) <>0 OR 
    --      SUM(STMAG.QTA1UM*STMAG.IMPEGNATO) <>0 OR 
    --      SUM(CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
    --      SUM(CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
    --      SUM(CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
    --      SUM(CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END) <>0 
    --) AS GIACENZAMETODO
    --ON
    --  GIACENZAMETODO.CODART = TP_GIACENZESTORICO.CodArticolo And
    --  GIACENZAMETODO.CODDEPOSITO = TP_GIACENZESTORICO.CodDeposito
    --WHERE
    --  TP_GIACENZESTORICO.Esercizio = (@Esercizio-1);
    
    FETCH NEXT FROM esercizi_cursor 
    INTO @Esercizio
END 
CLOSE esercizi_cursor;
DEALLOCATE esercizi_cursor;

RETURN

END



GO
GRANT EXECUTE
    ON OBJECT::[dbo].[PROC_CREA_GIACENZE_STORICO] TO [Metodo98]
    AS [dbo];

