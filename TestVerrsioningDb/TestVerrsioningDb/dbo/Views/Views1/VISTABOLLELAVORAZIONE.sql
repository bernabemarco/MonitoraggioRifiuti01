

CREATE VIEW [dbo].[VISTABOLLELAVORAZIONE] AS
SELECT
TESTACICLOORDINE.PROGRESSIVO,TESTACICLOORDINE.CODCICLO,ANAGRAFICAARTICOLI.VARESPLICITE as VARESPLICITE,ANAGRAFICAARTICOLI.MOVIMENTAPARTITE AS ARTGESTLOTTI,
TESTACICLOORDINE.VERSIONECICLO,TESTACICLOORDINE.DSCVERSIONE,TESTACICLOORDINE.STATOVERSIONE,TESTACICLOORDINE.VALIDITACICLO,TESTACICLOORDINE.VERSIONEDBA,
TESTACICLOORDINE.CICLOSTANDARD,TESTACICLOORDINE.NOTECICLO,TESTACICLOORDINE.UM AS UMRIF,TESTACICLOORDINE.QUANTITARIF,TESTACICLOORDINE.TIPOCICLO,
TESTACICLOORDINE.IDTESTACOMM,TESTACICLOORDINE.IDTESTACOMM as IDTESTA,TESTACICLOORDINE.IDRIGACOMM,TESTACICLOORDINE.IDRIGACOMM as IDRIGA,
RIGHECICLOORDINE.NUMEROFASE,RIGHECICLOORDINE.ANNOBOLLA,RIGHECICLOORDINE.NUMEROBOLLA,RIGHECICLOORDINE.TIPOFASE,RIGHECICLOORDINE.OPERAZIONE,
RIGHECICLOORDINE.DSCOPERAZIONE,RIGHECICLOORDINE.POSIZIONE,RIGHECICLOORDINE.POSIZIONE+1 as POSIZIONEFASESUCC,RIGHECICLOORDINE.POSIZIONE-1 as POSIZIONEFASEPREC,RIGHECICLOORDINE.TIPOOPERAZIONE,RIGHECICLOORDINE.STATOOPERAZIONE,RIGHECICLOORDINE.STATODOCUMENTAZIONE,
RIGHECICLOORDINE.CDLAVORO,(select DESCRIZIONE from TABELLACDLAVORO where RIGHECICLOORDINE.CDLAVORO=TABELLACDLAVORO.CODICE) "DSCCDLAVORO",
(select REPARTO from TABELLACDLAVORO where RIGHECICLOORDINE.CDLAVORO=TABELLACDLAVORO.CODICE) "CODREPARTO",RIGHECICLOORDINE.MACCHINA,
(select DESCRIZIONE from TABELLAMACCHINE where RIGHECICLOORDINE.MACCHINA=TABELLAMACCHINE.CODICE) "DSCMACCHINA",RIGHECICLOORDINE.UMTEMPOSETUP,
RIGHECICLOORDINE.UMTEMPOMACCHINA,RIGHECICLOORDINE.UMTEMPOUOMO,RIGHECICLOORDINE.UMTEMPOTOTALE,RIGHECICLOORDINE.FOGLIOISTRUZIONI,RIGHECICLOORDINE.ATTREZZATURA,
RIGHECICLOORDINE.STRUMENTICONTROLLO,RIGHECICLOORDINE.PIANOCONTROLLO,RIGHECICLOORDINE.NOTERIGA,RIGHECICLOORDINE.TEMPOPREVSETUP,RIGHECICLOORDINE.TEMPOPREVMACCHINA,
RIGHECICLOORDINE.TEMPOPREVUOMO,RIGHECICLOORDINE.TEMPOPREVDURATA,RIGHECICLOORDINE.TEMPOPREVMOV,RIGHECICLOORDINE.TEMPOPREVCODA,RIGHECICLOORDINE.TEMPOPREVATTRAV,
RIGHECICLOORDINE.TEMPOEFFSETUP,RIGHECICLOORDINE.TEMPOEFFMACCHINA,RIGHECICLOORDINE.TEMPOEFFUOMO,RIGHECICLOORDINE.TEMPOEFFDURATA,RIGHECICLOORDINE.OREPREVSETUP,
RIGHECICLOORDINE.OREPREVMACCHINA,RIGHECICLOORDINE.OREPREVUOMO,RIGHECICLOORDINE.OREPREVDURATA,RIGHECICLOORDINE.OREPREVMOV,RIGHECICLOORDINE.OREPREVCODA,
RIGHECICLOORDINE.OREPREVATTRAV,RIGHECICLOORDINE.OREEFFSETUP,RIGHECICLOORDINE.OREEFFMACCHINA,RIGHECICLOORDINE.OREEFFUOMO,RIGHECICLOORDINE.OREEFFDURATA,
RIGHECICLOORDINE.CP_ATTREZZAGGIO,RIGHECICLOORDINE.CP_MACCHINA,RIGHECICLOORDINE.CP_UOMO,RIGHECICLOORDINE.CP_INDVARIABILE,RIGHECICLOORDINE.CP_INDFISSO,
RIGHECICLOORDINE.CP_TOTESTERNI,RIGHECICLOORDINE.CC_ATTREZZAGGIO,RIGHECICLOORDINE.CC_MACCHINA,RIGHECICLOORDINE.CC_UOMO,RIGHECICLOORDINE.CC_INDVARIABILE,
RIGHECICLOORDINE.CC_INDFISSO,RIGHECICLOORDINE.CC_TOTESTERNI,RIGHECICLOORDINE.CP_EU_ATTREZZAGGIO,RIGHECICLOORDINE.CP_EU_MACCHINA,RIGHECICLOORDINE.CP_EU_UOMO,
RIGHECICLOORDINE.CP_EU_INDVARIABILE,RIGHECICLOORDINE.CP_EU_INDFISSO,RIGHECICLOORDINE.CP_EU_TOTESTERNI,RIGHECICLOORDINE.CC_EU_ATTREZZAGGIO,RIGHECICLOORDINE.CC_EU_MACCHINA,
RIGHECICLOORDINE.CC_EU_UOMO,RIGHECICLOORDINE.CC_EU_INDVARIABILE,RIGHECICLOORDINE.CC_EU_INDFISSO,RIGHECICLOORDINE.CC_EU_TOTESTERNI,RIGHECICLOORDINE.UMGEST,
RIGHECICLOORDINE.QTAPREVISTA,RIGHECICLOORDINE.QTAVERSATA,RIGHECICLOORDINE.QTASCARTATA,RIGHECICLOORDINE.QTATERZISTA,RIGHECICLOORDINE.QTAPRONTA,
RIGHECICLOORDINE.QTATRASFERITA,RIGHECICLOORDINE.QTALAVORATA,(CASE WHEN(RIGHECICLOORDINE.QTAPREVISTA=0) then 0 else (RIGHECICLOORDINE.QTAPREVISTAFASE/RIGHECICLOORDINE.QTAPREVISTA) end) as FCUMGESTFASE,
(CASE WHEN(RIGHECICLOORDINE.QTAPREVISTAFASE=0) then 0 else (RIGHECICLOORDINE.QTAPREVISTA/RIGHECICLOORDINE.QTAPREVISTAFASE) end) as FCUMFASEGEST,
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else (RIGHECICLOORDINE.QTAPREVISTA-RIGHECICLOORDINE.QTATERZISTA) end) as QTADAORDINARE,
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else (CASE WHEN (RIGHECICLOORDINE.QTAPREVISTA - RIGHECICLOORDINE.QTAVERSATA - RIGHECICLOORDINE.QTASCARTATA) < 0 THEN 0 ELSE (RIGHECICLOORDINE.QTAPREVISTA - RIGHECICLOORDINE.QTAVERSATA - RIGHECICLOORDINE.QTASCARTATA) END) end) AS QTARES,
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else (CASE WHEN (RIGHECICLOORDINE.QTAPREVISTA - RIGHECICLOORDINE.QTAVERSATA - RIGHECICLOORDINE.QTASCARTATA) < 0 THEN 0 ELSE (RIGHECICLOORDINE.QTAPREVISTA - RIGHECICLOORDINE.QTAVERSATA - RIGHECICLOORDINE.QTASCARTATA)*(CASE WHEN(RIGHECICLOORDINE.QTAPREVISTA=0) then 0 else (RIGHECICLOORDINE.QTAPREVISTAFASE/RIGHECICLOORDINE.QTAPREVISTA) end) END) end) AS QTARESFASE,
RIGHECICLOORDINE.QTAPREVISTAFASE,RIGHECICLOORDINE.UMFASE,RIGHECICLOORDINE.DATAINIZIOOPSCHEDULATA,RIGHECICLOORDINE.ORAINIZIOOPSCHEDULATA,RIGHECICLOORDINE.DATAFINEOPSCHEDULATA,
RIGHECICLOORDINE.ORAFINEOPSCHEDULATA,RIGHECICLOORDINE.DATAINIZIOOPEFFETTIVA,RIGHECICLOORDINE.ORAINIZIOOPEFFETTIVA,RIGHECICLOORDINE.DATAFINEOPEFFETTIVA,RIGHECICLOORDINE.ORAFINEOPEFFETTIVA,
RIGHECICLOORDINE.VALORESOLOSE,RIGHECICLOORDINE.SEGMENTOSCHED,RIGHECICLOORDINE.SEGMENTOCONS,RIGHECICLOORDINE.FORNITOREASSEGNATO,RIGHECICLOORDINE.LISTINOTRASF,
(select DSCCONTO1 from ANAGRAFICACF where CODCONTO=RIGHECICLOORDINE.FORNITOREASSEGNATO) AS RAGSOCFORNITORE,TESTEORDINIPROD.ESERCIZIO,TESTEORDINIPROD.TIPOCOM,
TESTEORDINIPROD.NUMEROCOM,TESTEORDINIPROD.DATAEMISSIONE,RIGHEORDPROD.CODICEORD,RIGHEORDPROD.CODART,RIGHEORDPROD.DESCRIZIONEART,RIGHEORDPROD.UMGEST as UMGESTORD,
RIGHEORDPROD.QTAGESTIONE,RIGHEORDPROD.QTAGESTIONEVERS,RIGHEORDPROD.QTAGESTIONERES,RIGHEORDPROD.CODCLIDEST,RIGHEORDPROD.TIPOSCHEDULAZIONE,
RIGHEORDPROD.FASERILASCIO,RIGHEORDPROD.DATARILASCIO,RIGHEORDPROD.RIFCOMMCLI,RIGHEORDPROD.DEPOSITO,RIGHEORDPROD.UBICAZIONE,(SELECT TIPOORDINE FROM PARAMETRIORDPROD WHERE CODICEORD=CODICE) AS "TIPOORD",
RIGHEORDPROD.StatoLancio,(CASE WHEN RigheOrdProd.QtaGestioneRes = 0 THEN 100 else (CASE WHEN RigheOrdProd.QtaGestione <> 0 THEN RigheOrdProd.QtaGestioneVers/RigheOrdProd.QtaGestione * 100 ELSE 100 END) end) AS "AVANZQTAORD",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 100 else (CASE WHEN RigheOrdProd.QtaGestione <> 0 THEN RigheCicloOrdine.QtaVersata/RigheOrdProd.QtaGestione * 100 ELSE 100 END) end) AS "AVANZQTAFASE",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 100 else (CASE WHEN RigheCicloOrdine.OrePrevDurata <> 0 THEN RigheCicloOrdine.OreEffDurata/RigheCicloOrdine.OrePrevDurata*100 ELSE 100 END) end) AS "AVANZDURATAFASE",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 100 else (CASE WHEN (CP_ATTREZZAGGIO+CP_MACCHINA+CP_UOMO+CP_INDVARIABILE+CP_INDFISSO+CP_TOTESTERNI) <> 0 THEN ((CC_ATTREZZAGGIO+CC_MACCHINA+CC_UOMO+CC_INDVARIABILE+CC_INDFISSO+CC_TOTESTERNI)/(CP_ATTREZZAGGIO+CP_MACCHINA+CP_UOMO+CP_INDVARIABILE+CP_INDFISSO+CP_TOTESTERNI)*100) ELSE 100 END) end)AS "AVANZCOSTOTOT",
RIGHEORDPROD.DataInizioRich,RIGHEORDPROD.DataFineRich,(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 100 else (CASE WHEN (CP_ATTREZZAGGIO+CP_MACCHINA+CP_UOMO+CP_INDVARIABILE+CP_INDFISSO+CP_TOTESTERNI) <> 0 THEN (RigheCicloOrdine.CC_Attrezzaggio +RigheCicloOrdine.CC_Macchina + RigheCicloOrdine.CC_Uomo + RigheCicloOrdine.CC_IndVariabile + RigheCicloOrdine.CC_IndFisso + RigheCicloOrdine.CC_TotEsterni)/((CP_ATTREZZAGGIO+CP_MACCHINA+CP_UOMO+CP_INDVARIABILE+CP_INDFISSO+CP_TOTESTERNI) * 100)ELSE 0 END) END )AS "AVANZCOSTOFASE",
(CASE WHEN (CP_ATTREZZAGGIO+CP_MACCHINA+CP_UOMO+CP_INDVARIABILE+CP_INDFISSO+CP_TOTESTERNI) <> 0 THEN ((RigheCicloOrdine.CP_Attrezzaggio-RigheCicloOrdine.CC_Attrezzaggio)+(RigheCicloOrdine.CP_Macchina-RigheCicloOrdine.CC_Macchina)+(RigheCicloOrdine.CP_Uomo-RigheCicloOrdine.CC_Uomo)+(RigheCicloOrdine.CP_IndVariabile-RigheCicloOrdine.CC_IndVariabile)+(RigheCicloOrdine.CP_IndFisso-RigheCicloOrdine.CC_IndFisso)+(RigheCicloOrdine.CP_TotEsterni-RigheCicloOrdine.CC_TotEsterni))/(CP_ATTREZZAGGIO+CP_MACCHINA+CP_UOMO+CP_INDVARIABILE+CP_INDFISSO+CP_TOTESTERNI)* 100 ELSE 0 END) AS "SCARTOCOSTOTOT",
(CASE WHEN (CP_EU_ATTREZZAGGIO+CP_EU_MACCHINA+CP_EU_UOMO+CP_EU_INDVARIABILE+CP_EU_INDFISSO+CP_EU_TOTESTERNI) <> 0 THEN ((RigheCicloOrdine.CP_EU_Attrezzaggio-RigheCicloOrdine.CC_EU_Attrezzaggio)+(RigheCicloOrdine.CP_EU_Macchina-RigheCicloOrdine.CC_EU_Macchina)+(RigheCicloOrdine.CP_EU_Uomo-RigheCicloOrdine.CC_EU_Uomo)+(RigheCicloOrdine.CP_EU_IndVariabile-RigheCicloOrdine.CC_EU_IndVariabile)+(RigheCicloOrdine.CP_EU_IndFisso-RigheCicloOrdine.CC_EU_IndFisso)+(RigheCicloOrdine.CP_EU_TotEsterni-RigheCicloOrdine.CC_EU_TotEsterni))/(CP_EU_ATTREZZAGGIO+CP_EU_MACCHINA+CP_EU_UOMO+CP_EU_INDVARIABILE+CP_EU_INDFISSO+CP_EU_TOTESTERNI)* 100 ELSE 0 END) AS "SCARTOCOSTOTOT_EURO",
RigheCicloOrdine.CA_Attrezzaggio,RigheCicloOrdine.CA_Macchina,RigheCicloOrdine.CA_Uomo,RigheCicloOrdine.CA_IndVariabile,RigheCicloOrdine.OreEffMov,
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else(CASE WHEN (RigheCicloOrdine.CP_Attrezzaggio-RigheCicloOrdine.CC_Attrezzaggio) < 0 THEN 0 ELSE (RigheCicloOrdine.CP_Attrezzaggio-RigheCicloOrdine.CC_Attrezzaggio) END) END) AS "CR_ATTREZZAGGIO",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else(CASE WHEN (RigheCicloOrdine.CP_Macchina-RigheCicloOrdine.CC_Macchina) < 0 THEN 0 ELSE (RigheCicloOrdine.CP_Macchina-RigheCicloOrdine.CC_Macchina) END) END)  AS "CR_MACCHINA",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else(CASE WHEN (RigheCicloOrdine.CP_Uomo-RigheCicloOrdine.CC_Uomo) < 0 THEN 0 ELSE (RigheCicloOrdine.CP_Uomo-RigheCicloOrdine.CC_Uomo) END) END) AS "CR_UOMO",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else(CASE WHEN (RigheCicloOrdine.CP_IndVariabile-RigheCicloOrdine.CC_IndVariabile) < 0 THEN 0 ELSE (RigheCicloOrdine.CP_IndVariabile-RigheCicloOrdine.CC_IndVariabile) END) END) AS "CR_INDVARIABILE",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else (CASE WHEN (RigheCicloOrdine.CP_IndFisso-RigheCicloOrdine.CC_IndFisso) < 0 THEN 0 ELSE (RigheCicloOrdine.CP_IndFisso-RigheCicloOrdine.CC_IndFisso) END) END) AS "CR_INDFISSO",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else (CASE WHEN (RigheCicloOrdine.CP_TotEsterni-RigheCicloOrdine.CC_TotEsterni) < 0 THEN 0 ELSE (RigheCicloOrdine.CP_TotEsterni-RigheCicloOrdine.CC_TotEsterni) END) END)  AS "CR_TOTESTERNI",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else (CASE WHEN (RigheCicloOrdine.CP_EU_Attrezzaggio-RigheCicloOrdine.CC_EU_Attrezzaggio) < 0 THEN 0 ELSE (RigheCicloOrdine.CP_EU_Attrezzaggio-RigheCicloOrdine.CC_EU_Attrezzaggio) END) END) AS "CR_EU_ATTREZZAGGIO",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else (CASE WHEN (RigheCicloOrdine.CP_EU_Macchina-RigheCicloOrdine.CC_EU_Macchina) < 0 THEN 0 ELSE (RigheCicloOrdine.CP_EU_Macchina-RigheCicloOrdine.CC_EU_Macchina) END) END)  AS "CR_EU_MACCHINA",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else (CASE WHEN (RigheCicloOrdine.CP_EU_Uomo-RigheCicloOrdine.CC_EU_Uomo) < 0 THEN 0 ELSE (RigheCicloOrdine.CP_EU_Uomo-RigheCicloOrdine.CC_EU_Uomo) END) END) AS "CR_EU_UOMO",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else (CASE WHEN (RigheCicloOrdine.CP_EU_IndVariabile-RigheCicloOrdine.CC_EU_IndVariabile) < 0 THEN 0 ELSE (RigheCicloOrdine.CP_EU_IndVariabile-RigheCicloOrdine.CC_EU_IndVariabile) END) END) AS "CR_EU_INDVARIABILE",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else (CASE WHEN (RigheCicloOrdine.CP_EU_IndFisso-RigheCicloOrdine.CC_EU_IndFisso) < 0 THEN 0 ELSE (RigheCicloOrdine.CP_EU_IndFisso-RigheCicloOrdine.CC_EU_IndFisso) END) END)  AS "CR_EU_INDFISSO",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else (CASE WHEN (RigheCicloOrdine.CP_EU_TotEsterni-RigheCicloOrdine.CC_EU_TotEsterni) < 0 THEN 0 ELSE (RigheCicloOrdine.CP_EU_TotEsterni-RigheCicloOrdine.CC_EU_TotEsterni) END) END) AS "CR_EU_TOTESTERNI",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else (CASE WHEN (RigheCicloOrdine.OrePrevSetup-RigheCicloOrdine.OreEffSetup) < 0 THEN 0 ELSE (RigheCicloOrdine.OrePrevSetup-RigheCicloOrdine.OreEffSetup) END) END) AS "ORERESSETUP",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else (CASE WHEN (RigheCicloOrdine.OrePrevMacchina-RigheCicloOrdine.OreEffMacchina) < 0 THEN 0 ELSE (RigheCicloOrdine.OrePrevMacchina-RigheCicloOrdine.OreEffMacchina) END) END)  AS "ORERESMACCHINA",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else (CASE WHEN (RigheCicloOrdine.OrePrevUomo-RigheCicloOrdine.OreEffUomo) < 0 THEN 0 ELSE (RigheCicloOrdine.OrePrevUomo-RigheCicloOrdine.OreEffUomo) END) END)  AS "ORERESUOMO",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else (CASE WHEN (RigheCicloOrdine.OrePrevDurata-RigheCicloOrdine.OreEffDurata) < 0 THEN 0 ELSE (RigheCicloOrdine.OrePrevDurata-RigheCicloOrdine.OreEffDurata) END) END) AS "ORERESDURATA",
(CASE WHEN(RIGHECICLOORDINE.STATOOPERAZIONE=2) then 0 else (CASE WHEN (RigheCicloOrdine.OrePrevMov-RigheCicloOrdine.OreEffMov) < 0 THEN 0 ELSE (RigheCicloOrdine.OrePrevMov-RigheCicloOrdine.OreEffMov) END) END) AS "ORERESMOV",
(TesteOrdiniProd.TipoCom+'/'+CAST(TesteOrdiniProd.Esercizio AS VARCHAR)+'/'+RIGHT('0000000000'+CAST(TesteOrdiniProd.NumeroCom AS VARCHAR),10)+'/'+RIGHT('00000'+CAST(RigheOrdProd.IDRiga AS VARCHAR),5)) AS "RIFORDINE",
(CASE WHEN (RigheCicloOrdine.OrePrevDurata-RigheCicloOrdine.OreEffDurata) <> 0 THEN ((RigheCicloOrdine.OrePrevDurata-RigheCicloOrdine.OreEffDurata)-OrePrevDurata)/(RigheCicloOrdine.OrePrevDurata-RigheCicloOrdine.OreEffDurata)*100 ELSE 0 END) AS "AVANZDURATA",
(CASE WHEN RigheCicloOrdine.FornitoreAssegnato IS NULL THEN RigheOrdProd.CodForDest ELSE RigheCicloOrdine.FornitoreAssegnato END) AS FornitoreFase,
RigheCicloOrdine.FornitoreAssegnato AS CODFORFASE ,
RigheOrdProd.CodForDest,RIGHEORDPROD.PARTITAASSEGNATA,RIGHEORDPROD.PARTITAVINCOLATA

FROM
    TESTACICLOORDINE INNER JOIN RIGHECICLOORDINE ON TESTACICLOORDINE.PROGRESSIVO=RIGHECICLOORDINE.PROGRESSIVO
    INNER JOIN TESTEORDINIPROD ON TESTACICLOORDINE.IDTESTACOMM=TESTEORDINIPROD.PROGRESSIVO
    INNER JOIN RIGHEORDPROD ON TESTACICLOORDINE.IDTESTACOMM=RIGHEORDPROD.IDTESTA and TESTACICLOORDINE.IDRIGACOMM=RIGHEORDPROD.IDRIGA
    INNER JOIN ANAGRAFICAARTICOLI ON ANAGRAFICAARTICOLI.CODICE=RIGHEORDPROD.CODART

GO
GRANT SELECT
    ON OBJECT::[dbo].[VISTABOLLELAVORAZIONE] TO [Metodo98]
    AS [dbo];

