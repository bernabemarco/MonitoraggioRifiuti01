
CREATE PROCEDURE [dbo].[PROC_CALCOLAVALORILIFO]
AS

BEGIN

SET NOCOUNT ON

DECLARE @CODARTICOLO			AS nVARCHAR(50)
DECLARE @PREZZOMEDIO			AS DECIMAL(19,6)
DECLARE @TOTALEQUANTITACARICO	AS DECIMAL(19,6)
DECLARE @TOTALEVALORECARICO		AS DECIMAL(19,6)
DECLARE @TOTALEQUANTITASCARICO	AS DECIMAL(19,6)
DECLARE @TOTALEVALORESCARICO	AS DECIMAL(19,6)
DECLARE @QUANTITA				AS DECIMAL(19,6)
DECLARE @QUANTITALIFO			AS DECIMAL(19,6)

DECLARE @LIFOVALORETOTALE		AS DECIMAL(19,6)
DECLARE @LIFOVALOREUNITARIO		AS DECIMAL(19,6)
DECLARE @LIFOQUANTITA			AS DECIMAL(19,6)

	/*SELECT * FROM StoricoPrezziArticolo WHERE TIPOPREZZO = 'F' AND ULTIMO = 1 ORDER BY Data DESC*/

	/*SELECT * FROM LIFOArticoli WHERE Esercizio = (SELECT ESERCIZIOATTIVO FROM TABUTENTI WHERE USERDB = 'TRM1'/*USER_NAME()*/) ORDER BY Anno ASC
	  SELECT CODICEART,SUM(QUANTITA1) QUANTITATOTALE FROM LIFOArticoli GROUP BY CODICEART*/

	/*INIZIO CURSORE PER GIACENZE*/
	DECLARE LIFO_CURSOR CURSOR FAST_FORWARD FOR 
	SELECT
		CODART,
		(CASE 
			WHEN TotQtaCarico1Um > 0 
			THEN (TotCaricoNettoEuro / TotQtaCarico1Um) 
			ELSE 0
		END)AS PrezzoMedio,
		TotQtaCarico1Um,
		TotCaricoNettoEuro,
		TotQtaScarico1Um,
		TotScaricoNettoEuro,
		(TotQtaCarico1Um - TotQtaScarico1Um) Quantita,
		QuantitaTotaleLifo
	FROM
	(
		SELECT 
			CODART,
			ESERCIZIO,
			SUM(VG.QtaCarico) TotQtaCarico1Um, 
			SUM(VG.ValoreCaricoEuro) TotCaricoNettoEuro,
			SUM(VG.QtaScarico) TotQtaScarico1Um, 
			SUM(VG.ValoreScaricoEuro) TotScaricoNettoEuro
		FROM 
			VistaGiacenze VG 
		LEFT OUTER JOIN 
			TabCausaliMag 
		ON 
			VG.CodCausale=TabCausaliMag.Codice
		WHERE 
				Esercizio = (SELECT ESERCIZIOATTIVO FROM TABUTENTI WHERE USERDB = 'TRM1'/*USER_NAME()*/)
			AND TabCausaliMag.RipresaValore=0
		GROUP BY 
			CODART,ESERCIZIO
	) DATO_BASE
	LEFT JOIN
		(SELECT CODICEART,ESERCIZIO,SUM(QUANTITA1) QUANTITATOTALELIFO FROM LIFOArticoli GROUP BY CODICEART,ESERCIZIO) TABLIFO
	ON 
		TABLIFO.CODICEART = DATO_BASE.CODART AND
		TABLIFO.ESERCIZIO = DATO_BASE.ESERCIZIO
	ORDER BY CODART
	OPEN LIFO_CURSOR
	FETCH NEXT FROM LIFO_CURSOR 
	INTO @CODARTICOLO,@PREZZOMEDIO,@TOTALEQUANTITACARICO,@TOTALEVALORECARICO,@TOTALEQUANTITASCARICO,@TOTALEVALORESCARICO,@QUANTITA,@QUANTITALIFO

	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @LIFOVALORETOTALE = 0
			SET @LIFOQUANTITA = 0

			IF (@QUANTITALIFO IS NULL)
				BEGIN
					SET @LIFOVALORETOTALE = (@QUANTITA * @PREZZOMEDIO)
					SET @LIFOQUANTITA = (@QUANTITA)
				END
			ELSE
				BEGIN
					PRINT @CODARTICOLO + ' - LIFO EXISTS(' + CAST(@QUANTITALIFO AS nVARCHAR(25)) + ')'
				END
			
			IF (@LIFOQUANTITA <= 0)
				BEGIN
					SET @LIFOQUANTITA = 0
					SET @LIFOVALORETOTALE = 0
				END
			ELSE
				BEGIN
					SET @LIFOVALOREUNITARIO = @LIFOVALORETOTALE / @LIFOQUANTITA
				END
			
			PRINT @CODARTICOLO + ' - LIFO VALORE[' + CAST(@LIFOVALORETOTALE AS nVARCHAR(25)) + '] (VALORELIFO = QUANTITA * PREZZOMEDIO)'
			PRINT @CODARTICOLO + ' - LIFO QUANTITA[' + CAST(@LIFOQUANTITA AS nVARCHAR(25)) + '] (QUANTITALIFO = QUANTITA)'

			FETCH NEXT FROM LIFO_CURSOR 
			INTO @CODARTICOLO,@PREZZOMEDIO,@TOTALEQUANTITACARICO,@TOTALEVALORECARICO,@TOTALEQUANTITASCARICO,@TOTALEVALORESCARICO,@QUANTITA,@QUANTITALIFO
		END

	CLOSE LIFO_CURSOR
	DEALLOCATE LIFO_CURSOR
	/*FINE CURSORE*/


If @@ERROR <> 0 GoTo ErrorHandler
    Set NoCount OFF
    Return(0)
  
ErrorHandler:
    Return(@@ERROR)

END


GO
GRANT EXECUTE
    ON OBJECT::[dbo].[PROC_CALCOLAVALORILIFO] TO [Metodo98]
    AS [dbo];

