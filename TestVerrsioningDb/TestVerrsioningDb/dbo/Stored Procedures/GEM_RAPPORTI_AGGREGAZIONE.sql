


CREATE PROCEDURE [dbo].[GEM_RAPPORTI_AGGREGAZIONE]   
as
DECLARE @nErrNum		as int

DECLARE @idrapporto as varchar(14)
DECLARE @CODCLIENTE AS VARCHAR(7)
DECLARE @CODSEZIONIAGGREGATE DECIMAL (5,0)
DECLARE @CODDEST		DECIMAL (5,0)
DECLARE @TECNICO_EFF	AS VARCHAR(7)
DECLARE @DATA_PREV		AS DATETIME

declare @NUMREC			as int	
DECLARE @RC				AS INT
DECLARE @ESERCIZIO				AS INT
DECLARE @USERDB			AS VARCHAR(40)
DECLARE @PPROGRESSIVO	AS VARCHAR(14)
DECLARE @IDAGGREGAZIONE	AS VARCHAR(14)
DECLARE @IDCONTRATTO	AS VARCHAR(13)


	BEGIN TRANSACTION 


	--update iniziale di ripristino NULL sui rapporti non aggregati
	update dbo.GEM_SEZIONECONTRATTORAPPORTI
	set idrapportoaggregato=NULL
	where idrapportoaggregato ='0'	AND STATO IN ('G', 'T', 'X')


	--leggo la testa delle aggregazioni da fare
	DECLARE CURR_TESTE CURSOR  LOCAL  FAST_FORWARD FOR
	select S.CODCLIENTE, isnull(S.CODSEZIONIAGGREGATE,0), S.IDCONTRATTO,
		ISNULL(S.CODDEST,0) , ISNULL(R.TECNICO_EFF,0), 
		R.DATA_PREV,MAX(ISNULL(IDRAPPORTOAGGREGATO,'')),  COUNT(*) 
	from dbo.GEM_SEZIONECONTRATTORAPPORTI r inner join dbo.GEM_VistaContratti s on 
		r.IDCONTRATTO = S.IDCONTRATTO AND r.SEZIONECONTRATTO=s.SEZIONECONTRATTO
		INNER JOIN VISTACLIENTI V ON V.CODCONTO = S.CODCLIENTE

-- 13-09-2010 PC
-- aggiunto controllo anche su aggregabilità in base alla tipologia mezzo
		inner join dbo.GEM_Vista_TipologMezzo tm on s.idTipologMezzo = tm.idTipologMezzo and isnull(tm.SezioneAggregabile,0) <> 0

	WHERE  	TIPOLOGIARAPPORTO<> 'S' 
	AND STATO = 'T'

	--13-09-2010 tolto commento dopo mail di Francesca Scaramuzza
	AND ISNULL(S.CodSezioniAggregate,0) <> 0
	AND ( ( V.STATOALTRO <> 2 OR ( V.STATOALTRO= 2 AND R.InvioForzato = 'S') ) )
	GROUP BY 	S.CODCLIENTE , S.CODSEZIONIAGGREGATE, S.IDCONTRATTO, ISNULL(S.CODDEST,0) , ISNULL(R.TECNICO_EFF,0), R.DATA_PREV
	HAVING COUNT(*) > 1

		SELECT @ESERCIZIO = ISNULL(ESERCIZIOATTIVO,YEAR(GETDATE())), @USERDB=USERID FROM TABUTENTI WHERE USERDB=USER_NAME()

		OPEN CURR_TESTE
		FETCH NEXT FROM CURR_TESTE INTO  @CODCLIENTE,@CODSEZIONIAGGREGATE , @IDCONTRATTO, @CODDEST ,@TECNICO_EFF	,@DATA_PREV,@IDAGGREGAZIONE,  @NUMREC 

		WHILE @@FETCH_STATUS = 0
		BEGIN

			IF RTRIM(LTRIM(@IDAGGREGAZIONE)) = '' BEGIN
				--LEGGO IL PRIMO PROGR LIBERO
				EXECUTE @RC = [dbo].[NUOVORAPPORTO] @ESERCIZIO,  @USERDB , 1 , 'AG' ,@PPROGRESSIVO OUTPUT
			END
			ELSE BEGIN
				SET @PPROGRESSIVO = RTRIM(LTRIM(@IDAGGREGAZIONE)) 
			END 

---------------------
--PRINT @PPROGRESSIVO 
---------------------

			DECLARE CURR_righe CURSOR  LOCAL  FAST_FORWARD FOR

			select  DISTINCT R.IDRAPPORTO
			from dbo.GEM_SEZIONECONTRATTORAPPORTI r inner join dbo.GEM_VistaContratti s on 
				r.IDCONTRATTO = S.IDCONTRATTO AND r.SEZIONECONTRATTO=s.SEZIONECONTRATTO
				INNER JOIN VISTACLIENTI V ON V.CODCONTO = S.CODCLIENTE
			WHERE  S.IDCONTRATTO=@IDCONTRATTO
			AND S.CODCLIENTE= @CODCLIENTE 
			AND isnull(S.CODSEZIONIAGGREGATE,0) = @CODSEZIONIAGGREGATE 
			AND ISNULL(S.CODDEST,0) = @CODDEST 
			AND ISNULL(R.TECNICO_EFF,0) = @TECNICO_EFF
			AND R.DATA_PREV =@DATA_PREV

			OPEN CURR_RIGHE
			FETCH NEXT FROM CURR_RIGHE INTO  @IDRAPPORTO

			WHILE @@FETCH_STATUS = 0
			BEGIN
		
				UPDATE GEM_SEZIONECONTRATTORAPPORTI
				SET IDRAPPORTOAGGREGATO=@PPROGRESSIVO
				WHERE IDRAPPORTO = @IDRAPPORTO
				AND tipologiarapporto <> 'S' 

			--Gestione Errore 1 transazione
				SET @nErrNum=@@ERROR
				IF @nErrNum<>0
				BEGIN		
					GOTO ERRORE
				END

				FETCH NEXT FROM CURR_RIGHE INTO  @IDRAPPORTO
			END
		
			CLOSE CURR_righe
			DEALLOCATE CURR_righe
			
			FETCH NEXT FROM CURR_TESTE INTO  @CODCLIENTE ,@CodSezioniAggregate , @IDCONTRATTO, @CODDEST ,@TECNICO_EFF	,@DATA_PREV,@IDAGGREGAZIONE,@NUMREC
		END

		CLOSE CURR_TESTE
		DEALLOCATE CURR_TESTE
		
		--Chiudo Transazione Main
		COMMIT TRANSACTION 
		RETURN 0
			
ERRORE:
--Annullo Transazione Main
ROLLBACK TRANSACTION 
RETURN @nErrNum

GO
GRANT EXECUTE
    ON OBJECT::[dbo].[GEM_RAPPORTI_AGGREGAZIONE] TO [Metodo98]
    AS [dbo];

