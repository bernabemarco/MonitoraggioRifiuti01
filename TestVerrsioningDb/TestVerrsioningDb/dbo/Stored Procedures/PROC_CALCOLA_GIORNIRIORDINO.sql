
CREATE PROCEDURE [dbo].[PROC_CALCOLA_GIORNIRIORDINO]
AS

BEGIN


DECLARE	@USACALENDARIO		SMALLINT
DECLARE	@GIORNOCALENDARIO	DATETIME

/*VERIFICO SE BISOGNA USARE IL CALENDARIO*/
SELECT 
	@USACALENDARIO = OFNCAL 
FROM 
	TP_VINCOLIPIANIFICATORE 

/*VERIFICO SE NEL CALENDARIO CI SONO I GIORNI RELATIVI AI PROSSIMI 12 PERIODI*/

SELECT  
	@GIORNOCALENDARIO = MAX(DATACAL)
FROM 
	TP_CALENDARIOCOMMERCIALE 
WHERE 
	((
	ANNOCAL BETWEEN 2010 AND 2011 AND 
	MESECAL >= MONTH(GETDATE()) AND 
	GIORNOCAL >= DAY(GETDATE())
	))

/*
1 = SETTIMANALE

2 = NON DEFINITO
3 = MENSILE
4 = TRIMESTRALE
5 = SEMESTRALE
6 = ANNUALE
*/

--UPDATE TP_EXTRAMAG SET TP_PERIODODIOSSERVAZIONE = 3
DELETE FROM TP_GiorniRiordino

INSERT INTO TP_GiorniRiordino(
	CODART,
	DESCARTICOLO,	
	TP_CODDEP,
	DESCMAGAZZINO,
	CODFOR,
	DESCFORNITORE,
	ISFORNITOREPREFERENZIALE,
	GRUPPO,
	CATEGORIA,
	CODCATEGORIASTAT,
	GRUPPOPRZPART,
	CODFAMIGLIAPOS,
	CODREPARTOPOS,
	CODMARCHIO,
	ORDINATO_ARTICOLO_DEPOSITO,
	ORDINATO_DATA_PROSSIMA,
	DATARIORDINO,
	UTENTEMODIFICA,
	DATAMODIFICA)
SELECT	
	--ROW_NUMBER() OVER (PARTITION BY CODARTICOLO,CODFOR,CODDEPOSITO ORDER BY CODARTICOLO DESC) AS PARTIZIONE,
	GIORNIRIORDINO.CODARTICOLO,
	GIORNIRIORDINO.DESCARTICOLO,
	GIORNIRIORDINO.CODDEPOSITO,
	GIORNIRIORDINO.DESCMAGAZZINO,
	GIORNIRIORDINO.CODFORNPREF,
	GIORNIRIORDINO.DESCFORNITORE,
	GIORNIRIORDINO.ISFORNITOREPREFERENZIALE,
	GIORNIRIORDINO.GRUPPO,
	GIORNIRIORDINO.CATEGORIA,
	GIORNIRIORDINO.CODCATEGORIASTAT,
	GIORNIRIORDINO.GRUPPOPRZPART,
	GIORNIRIORDINO.CODFAMIGLIAPOS,
	GIORNIRIORDINO.CODREPARTOPOS,
	GIORNIRIORDINO.CODMARCHIO,
	GIORNIRIORDINO.ORDINATO,
	CONVERT(varchar(8),ULTIMADATAORDINATO.DATAMOV,112) /*CONVERT(varchar(8),GETDATE(),112)*/ AS ORDINATO_DATA_PROSSIMA,
	CONVERT(varchar(8),GIORNIRIORDINO.DATARIORDINO,112) AS DATARIORDINO,
	USER_NAME() AS UTENTEMODIFICA,
	GETDATE() AS DATAMODIFICA
FROM
(
	SELECT
		DATI_FINALE.CODARTICOLO,
		ANAGRAFICAARTICOLI.DESCRIZIONE AS DESCARTICOLO,
		DATI_FINALE.CODDEPOSITO,
		ANAGRAFICADEPOSITI.DESCRIZIONE AS DESCMAGAZZINO,
		CODFORNPREF,
		ANAGRAFICACF.DSCCONTO1 AS DESCFORNITORE,
		1 AS ISFORNITOREPREFERENZIALE,
		ANAGRAFICAARTICOLI.GRUPPO,
		ANAGRAFICAARTICOLI.CATEGORIA,
		ANAGRAFICAARTICOLI.CODCATEGORIASTAT,
		ANAGRAFICAARTICOLICOMM.GRUPPOPRZPART,
		CODFAMIGLIAPOS,
		CODREPARTOPOS,
		CODMARCHIO,
		TP_GIACENZE.ORDINATO,
		(CASE WHEN GIORNIAUTONOMIA BETWEEN MINDAYVALUE AND MAXDAYVALUE
			  THEN DATEADD(DD,(((CONSISTENZARILEVATA - SCORTAMINIMA) - LIVELLORIORDINO) / CONSUMOMEDIOGIORNALIEROPREVISTO),GETDATE())

			  ELSE 
					(CASE WHEN GIORNIAUTONOMIA < MINDAYVALUE THEN '1753-1-1'
						  ELSE '9999-12-31'
					 END)
		 END) AS DATARIORDINO
	FROM
		(
			SELECT
				CODARTICOLO,
				CODDEPOSITO,
				CODFORNPREF,
				CONSUMOMEDIOGIORNALIEROPREVISTO,
				SCORTAMINIMA,
				LIVELLORIORDINO,
				CONSISTENZARILEVATA,
				(CONSISTENZARILEVATA - SCORTAMINIMA) AS SCORTADISPONIBILE,
				((CONSISTENZARILEVATA - SCORTAMINIMA) - LIVELLORIORDINO) AS SCORTAAUTONOMIA,
				(((CONSISTENZARILEVATA - SCORTAMINIMA) - LIVELLORIORDINO) / CONSUMOMEDIOGIORNALIEROPREVISTO) AS GIORNIAUTONOMIA,
				CODFAMIGLIAPOS,
				CODREPARTOPOS,
				CODMARCHIO,
				MINDAYVALUE,
				MAXDAYVALUE
			FROM
			(
				SELECT
					TOTPREVISIONI.CODARTICOLO,
					TOTPREVISIONI.CODDEPOSITO,
					TP_APPROVV_DEPOSITI.CODFORNPREF,
					(TOTPREVISIONI.TOTPREVISIONE / TOTGIORNI.GIORNI) AS CONSUMOMEDIOGIORNALIEROPREVISTO,
					(CASE WHEN TP_APPROVV_DEPOSITI.SCORTAMINIMAFORZATO = 0 
						 THEN TP_APPROVV_DEPOSITI.SCORTAMINIMACALCOLATA
						 ELSE TP_APPROVV_DEPOSITI.SCORTAMINIMAFORZATO 
					END) AS SCORTAMINIMA,
					(CASE WHEN TP_APPROVV_DEPOSITI.LIVELLORIORDINOFORZATO = 0 
						 THEN TP_APPROVV_DEPOSITI.LIVELLORIORDINOCALCOLATO
						 ELSE TP_APPROVV_DEPOSITI.LIVELLORIORDINOFORZATO 
					END) AS LIVELLORIORDINO,
					TP_GIACENZE.GIACENZA AS CONSISTENZARILEVATA,
					TOTGIORNI.CODFAMIGLIAPOS,
					TOTGIORNI.CODREPARTOPOS,
					TOTGIORNI.CODMARCHIO,
					DATEDIFF(DD,GETDATE(),'1753-1-1') AS MINDAYVALUE,
					DATEDIFF(DD,GETDATE(),'9999-12-31') AS MAXDAYVALUE
				FROM
				(
					SELECT 
						B.CODART,
						@USACALENDARIO AS USACALENDARIO,
						(
						CASE
							WHEN B.TP_PERIODODIOSSERVAZIONE = 1 THEN A.GIORNI * 54
							--WHEN B.TP_PERIODODIOSSERVAZIONE = 2 THEN
							WHEN B.TP_PERIODODIOSSERVAZIONE = 3 THEN A.GIORNI * 12
							WHEN B.TP_PERIODODIOSSERVAZIONE = 4 THEN A.GIORNI * 4
							WHEN B.TP_PERIODODIOSSERVAZIONE = 5 THEN A.GIORNI * 2
							WHEN B.TP_PERIODODIOSSERVAZIONE = 6 THEN A.GIORNI
						END
						) AS GIORNI,
						B.TP_TSICUR,
						B.CODFAMIGLIAPOS,
						B.CODREPARTOPOS,
						B.CODMARCHIO
					FROM 
						TP_PERIODO_OSSERVAZIONE A,
						TP_EXTRAMAG B
					WHERE 
						B.TP_PERIODODIOSSERVAZIONE = A.PROGRESSIVO 
				) TOTGIORNI,
				(
					SELECT
						CODARTICOLO,
						CODDEPOSITO,
						(CASE WHEN TEM.QTAPREVISIONIFORZATE = 0 THEN ([1] + [2] + [3] + [4] + [5] + [6] + [7] + [8] + [9] + [10] + [11] + [12]) 
							 ELSE (TEM.QTAPREVISIONIFORZATE * 12) 
							 END 
						)TOTPREVISIONE
					FROM
					(
						SELECT 
							CODART,
							(
							CASE GESTSTAG 
								WHEN 0 THEN	(
											CASE OFSMOOTHINGSTAGIONALE
												WHEN 0 THEN 'MQ'
												WHEN 1 THEN 'WT'
											END
											)
								WHEN 1 THEN	(
											CASE OFTIPOPREVISIONALE
												WHEN 0 THEN 'SE'
												WHEN 1 THEN 'MM'
											END
											)
								WHEN 2 THEN	'SM'
								WHEN 3 THEN 'PR'
							END
							) AS TIPO,
							QTAPREVISIONIFORZATE
						FROM 
							TP_EXTRAMAG
					) TEM,
					  TP_STAGIONALE_PREVISIONI TPP
					WHERE
						TPP.CODARTICOLO = TEM.CODART AND
						TPP.TIPO = TEM.TIPO
				) TOTPREVISIONI,
				TP_APPROVV_DEPOSITI,
				TP_EXTRAFORNITORI,
				TP_GIACENZE
				WHERE
					TOTPREVISIONI.CODARTICOLO = TOTGIORNI.CODART AND
					TP_APPROVV_DEPOSITI.CODARTICOLO = TOTPREVISIONI.CODARTICOLO AND
					TP_APPROVV_DEPOSITI.CODDEPOSITO = TOTPREVISIONI.CODDEPOSITO AND 					
					TP_EXTRAFORNITORI.CODCONTO = TP_APPROVV_DEPOSITI.CODFORNPREF AND
					TP_GIACENZE.CODARTICOLO = TOTPREVISIONI.CODARTICOLO AND
					TP_GIACENZE.CODDEPOSITO = TOTPREVISIONI.CODDEPOSITO AND
					TOTPREVISIONI.TOTPREVISIONE > 0
			) AS DATI_BASE
		) AS DATI_FINALE,
		ANAGRAFICAARTICOLI,
		ANAGRAFICAARTICOLICOMM,
		ANAGRAFICADEPOSITI,
		ANAGRAFICACF,
		TP_GIACENZE
	WHERE
		ANAGRAFICAARTICOLI.CODICE = DATI_FINALE.CODARTICOLO AND
		ANAGRAFICAARTICOLICOMM.CODICEART = DATI_FINALE.CODARTICOLO AND
		ANAGRAFICAARTICOLICOMM.ESERCIZIO = 2011 /*(SELECT ESERCIZIOATTIVO FROM TABUTENTI WHERE USERDB = USER_NAME())*/ AND
		ANAGRAFICADEPOSITI.CODICE = DATI_FINALE.CODDEPOSITO AND
		ANAGRAFICACF.CODCONTO = DATI_FINALE.CODFORNPREF AND
		TP_GIACENZE.CODARTICOLO = DATI_FINALE.CODARTICOLO AND
		TP_GIACENZE.CODDEPOSITO = DATI_FINALE.CODDEPOSITO 
) GIORNIRIORDINO
LEFT JOIN
	(
		SELECT

			CODART,
			CODCLIFOR,
			CODDEPOSITO,
			DATAMOV
		FROM
		(
			SELECT
				ROW_NUMBER() OVER (PARTITION BY CODART,CODCLIFOR,CODDEPOSITO ORDER BY DIFFERENZADATE DESC) AS PARTIZIONE,
				CODART,
				CODCLIFOR,
				CODDEPOSITO,
				DATAMOV
			FROM
			(
				SELECT
					CODART,
					CODCLIFOR,
					CODDEPOSITO,
					DATAMOV,
					ABS(DATEDIFF(DD,DATAMOV,GETDATE())) AS DIFFERENZADATE
				FROM 
					STORICOMAG 
				WHERE 
					ORDINATO = 1
			) DATEORDINATE
		) DATAPIUVICINA
		WHERE
			PARTIZIONE = 1
	) ULTIMADATAORDINATO
ON
	ULTIMADATAORDINATO.CODART = GIORNIRIORDINO.CODARTICOLO AND
	ULTIMADATAORDINATO.CODDEPOSITO = GIORNIRIORDINO.CODDEPOSITO AND
	ULTIMADATAORDINATO.CODCLIFOR = GIORNIRIORDINO.CODFORNPREF

RETURN

END


GO
GRANT EXECUTE
    ON OBJECT::[dbo].[PROC_CALCOLA_GIORNIRIORDINO] TO [Metodo98]
    AS [dbo];

