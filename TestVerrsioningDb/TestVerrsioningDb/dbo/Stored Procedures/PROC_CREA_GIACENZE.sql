

CREATE PROCEDURE [dbo].[PROC_CREA_GIACENZE](@Esercizio DECIMAL(5,0))
AS
BEGIN
SET NOCOUNT ON
DECLARE @PROGRESSIVO DECIMAL(18,0)
    
    SET @PROGRESSIVO = 0
    SELECT @PROGRESSIVO = MAX(PROGRESSIVO) FROM STORICOMAG;

    /*CANCELLO TP_GIACENZE*/
    DELETE FROM TP_GIACENZE;

    /*CALCOLO DELLA GIACENZA*/
    INSERT INTO TP_GIACENZE(CodDeposito,CodArticolo,Esercizio,Giacenza,Ordinato,Impegnato,Carico,
                            Scarico,ResoDaCarico,ResoDaScarico,InOrdine,UM,IndRot,
                            PrezzoMedio,PrezzoUltimo,ValoreLifo,
                            ProgressivoSTMAG,UtenteModifica,DataModifica)
    SELECT
        GIACENZAMETODO.CODDEPOSITO,
        GIACENZAMETODO.CODART,
        @Esercizio,
        ISNULL((GIACENZAMETODO.CARICO - GIACENZAMETODO.SCARICO - GIACENZAMETODO.RESODACARICO + GIACENZAMETODO.RESODASCARICO),0) AS GIACENZA_F,
        ISNULL(GIACENZAMETODO.ORDINATO,0) AS ORDINATO_F,
        ISNULL(GIACENZAMETODO.IMPEGNATO,0) AS IMPEGNATO_F,
        ISNULL(GIACENZAMETODO.CARICO,0) AS CARICO_F,
        ISNULL(GIACENZAMETODO.SCARICO,0) AS SCARICO_F,
        ISNULL(GIACENZAMETODO.RESODACARICO,0) AS RESODACARICO_F,
        ISNULL(GIACENZAMETODO.RESODASCARICO,0) AS RESODASCARICO_F,
        0 AS InOrdine,
        AUM.UM AS UM,
        0 As IndRot,
        0 AS PrezzoMedio,       
        ISNULL(
                (
                    CASE MODALITACALCOLO
                        WHEN 0 THEN (SELECT TOP 1 PREZZOEURO FROM StoricoPrezziArticolo WHERE TIPOPREZZO = 'F' AND ULTIMO = 1 AND CODCLIFOR = EOQ.CodFornPref ORDER BY DATA DESC)
                        WHEN 1 THEN (SELECT TOP 1 PREZZOEURO FROM StoricoPrezziArticolo WHERE TIPOPREZZO = 'F' AND ULTIMO = 1 AND CODCLIFOR = PFR.CodFornPref ORDER BY DATA DESC)
                        WHEN 2 THEN (SELECT TOP 1 PREZZOEURO FROM StoricoPrezziArticolo WHERE TIPOPREZZO = 'F' AND ULTIMO = 1 AND CODCLIFOR = SCRT.CodFornPref ORDER BY DATA DESC)
                        WHEN 3 THEN (SELECT TOP 1 PREZZOEURO FROM StoricoPrezziArticolo WHERE TIPOPREZZO = 'F' AND ULTIMO = 1 AND CODCLIFOR = PERS.CodFornPref ORDER BY DATA DESC)
                    END
                )
            ,0) AS PrezzoUltimo,
        0 AS ValoreLifo,
        @PROGRESSIVO AS PROGSTMAG,
        USER_NAME(),
        GETDATE()
    FROM
    (
        SELECT
            TEM.CODART,
            TTM.CodDeposito,
            0 AS ORDINATO,
            0 AS IMPEGNATO,
            0 AS CARICO,
            0 AS SCARICO,
            0 AS RESODACARICO,
            0 AS RESODASCARICO,
            0 AS MODALITACALCOLO
        FROM
            TP_EXTRAMAG TEM
        CROSS JOIN
            TP_TABMagazzini TTM
        LEFT JOIN 
            STORICOMAG AS STMAG
        ON
            STMAG.CODART = TEM.CodArt AND
            STMAG.CODDEPOSITO = TTM.CodDeposito
        WHERE
            TEM.ConsidAcq = 1 AND
            STMAG.CODART IS NULL
        UNION
        SELECT
            STMAG.CODART,
            STMAG.CODDEPOSITO,
            SUM((STMAG.QTA1UM*STMAG.ORDINATO)) AS ORDINATO,
            SUM((STMAG.QTA1UM*STMAG.IMPEGNATO)) AS IMPEGNATO,
            SUM((CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END)) AS CARICO,
            SUM((CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END)) AS SCARICO,
            SUM((CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END)) AS RESODACARICO,
            SUM((CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END)) AS RESODASCARICO,
            STMAG.MODALITACALCOLO
        FROM 
            (
                SELECT DISTINCT
                    STMAG.PROGRESSIVO,
                    STMAG.CODART,
                    STMAG.CODDEPOSITO,
                    STMAG.QTA1UM,
                    STMAG.ORDINATO,
                    STMAG.IMPEGNATO,
                    STMAG.GIACENZA,
                    STMAG.RESO,
                    0 AS MODALITACALCOLO
                FROM
                    STORICOMAG AS STMAG
                INNER JOIN 
                    TP_EXTRAMAG TEM
                ON
                    (TEM.CodArt = STMAG.CODART OR TEM.OFCODARTRIF = STMAG.CODART) AND TEM.ConsidAcq = 1
            ) STMAG
        GROUP BY 
            STMAG.CODART,
            STMAG.CODDEPOSITO,
            STMAG.MODALITACALCOLO
        HAVING  
            SUM(STMAG.QTA1UM*STMAG.ORDINATO) <>0 OR 
            SUM(STMAG.QTA1UM*STMAG.IMPEGNATO) <>0 OR 
            SUM(CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
            SUM(CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
            SUM(CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
            SUM(CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END) <>0 
    ) AS GIACENZAMETODO
    INNER JOIN ARTICOLIUMPREFERITE AUM 
        ON AUM.CODART=GIACENZAMETODO.CODART AND AUM.TIPOUM=1
    LEFT JOIN
        (SELECT CodArticolo,CodDeposito,CodFornPref FROM TP_APPROVV_DEPOSITI) EOQ
        ON
            EOQ.CODARTICOLO = GIACENZAMETODO.CODART AND
            EOQ.CODDEPOSITO = GIACENZAMETODO.CODDEPOSITO
    LEFT JOIN
        (SELECT CodArticolo,CodDeposito,CodFornPref FROM TP_PUNTOFISSORIORDINO) PFR
    ON
        PFR.CODARTICOLO = GIACENZAMETODO.CODART AND
        PFR.CODDEPOSITO = GIACENZAMETODO.CODDEPOSITO
    LEFT JOIN
        (SELECT CodArticolo,CodDeposito,CodFornPref FROM TP_SCORTA) SCRT
    ON
        SCRT.CODARTICOLO = GIACENZAMETODO.CODART AND
        SCRT.CODDEPOSITO = GIACENZAMETODO.CODDEPOSITO
    LEFT JOIN
        (SELECT CodArticolo,CodDeposito,CodFornPref FROM TP_PERSONALIZZATOLIBERO) PERS
    ON
        PERS.CODARTICOLO = GIACENZAMETODO.CODART AND
        PERS.CODDEPOSITO = GIACENZAMETODO.CODDEPOSITO;
    
    --/*Articolo di riferimento*/
    --UPDATE TP_GIACENZE
    --SET 
    --  TP_GIACENZE.Giacenza = (CASE WHEN GIACENZAMETODO.SOMMAQTASTAT = 0 THEN ISNULL((GIACENZAMETODO.CARICO - GIACENZAMETODO.SCARICO - GIACENZAMETODO.RESODACARICO + GIACENZAMETODO.RESODASCARICO),0) ELSE (TP_GIACENZE.Giacenza + ISNULL((GIACENZAMETODO.CARICO - GIACENZAMETODO.SCARICO - GIACENZAMETODO.RESODACARICO + GIACENZAMETODO.RESODASCARICO),0)) END),
    --  TP_GIACENZE.Ordinato = (CASE WHEN GIACENZAMETODO.SOMMAQTASTAT = 0 THEN ISNULL(GIACENZAMETODO.ORDINATO,0) ELSE (TP_GIACENZE.Ordinato + ISNULL(GIACENZAMETODO.ORDINATO,0)) END),
    --  TP_GIACENZE.Impegnato = (CASE WHEN GIACENZAMETODO.SOMMAQTASTAT = 0 THEN ISNULL(GIACENZAMETODO.IMPEGNATO,0) ELSE (TP_GIACENZE.Impegnato + ISNULL(GIACENZAMETODO.IMPEGNATO,0)) END),
    --  TP_GIACENZE.Carico = (CASE WHEN GIACENZAMETODO.SOMMAQTASTAT = 0 THEN ISNULL(GIACENZAMETODO.CARICO,0) ELSE (TP_GIACENZE.Carico + ISNULL(GIACENZAMETODO.CARICO,0)) END),
    --  TP_GIACENZE.Scarico = (CASE WHEN GIACENZAMETODO.SOMMAQTASTAT = 0 THEN ISNULL(GIACENZAMETODO.SCARICO,0) ELSE (TP_GIACENZE.Scarico + ISNULL(GIACENZAMETODO.SCARICO,0)) END),
    --  TP_GIACENZE.ResoDaCarico = (CASE WHEN GIACENZAMETODO.SOMMAQTASTAT = 0 THEN ISNULL(GIACENZAMETODO.RESODACARICO,0) ELSE (TP_GIACENZE.ResoDaCarico + ISNULL(GIACENZAMETODO.RESODACARICO,0)) END),
    --  TP_GIACENZE.ResoDaScarico = (CASE WHEN GIACENZAMETODO.SOMMAQTASTAT = 0 THEN ISNULL(GIACENZAMETODO.RESODASCARICO,0) ELSE (TP_GIACENZE.ResoDaScarico + ISNULL(GIACENZAMETODO.RESODASCARICO,0)) END)   
    --FROM
    --  TP_GIACENZE
    --INNER JOIN
    --(
    --  SELECT
    --      STMAG.CODART,
    --      STMAG.CODDEPOSITO,
    --      STMAG.SOMMAQTASTAT,
    --      SUM((STMAG.QTA1UM*STMAG.ORDINATO)) AS ORDINATO,
    --      SUM((STMAG.QTA1UM*STMAG.IMPEGNATO)) AS IMPEGNATO,
    --      SUM((CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END)) AS CARICO,
    --      SUM((CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END)) AS SCARICO,
    --      SUM((CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END)) AS RESODACARICO,
    --      SUM((CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END)) AS RESODASCARICO
    --  FROM 
    --      (
    --          SELECT
    --              TEM.CODART,
    --              (CASE WHEN ((TEM.OFCODARTRIF = '''') OR (TEM.OFCODARTRIF IS NULL)) THEN TEM.CODART ELSE TEM.OFCODARTRIF END) AS CODARTRIF,
    --              ISNULL(TEM.SOMMAQTASTAT,0) AS SOMMAQTASTAT,
    --              STMAG.CODDEPOSITO,
    --              STMAG.QTA1UM,
    --              STMAG.ORDINATO,
    --              STMAG.IMPEGNATO,
    --              STMAG.GIACENZA,
    --              STMAG.RESO
    --          FROM
    --              STORICOMAG AS STMAG
    --          INNER JOIN 
    --              TP_EXTRAMAG TEM
    --          ON
    --              TEM.OFCODARTRIF <> '' AND
    --              TEM.OFCODARTRIF = STMAG.CODART AND TEM.ConsidAcq = 1
    --      ) STMAG
    --  GROUP BY 
    --      STMAG.CODART,
    --      STMAG.CODDEPOSITO,
    --      STMAG.SOMMAQTASTAT
    --  HAVING  
    --      SUM(STMAG.QTA1UM*STMAG.ORDINATO) <>0 OR 
    --      SUM(STMAG.QTA1UM*STMAG.IMPEGNATO) <>0 OR 
    --      SUM(CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
    --      SUM(CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
    --      SUM(CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
    --      SUM(CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END) <>0
    --) AS GIACENZAMETODO
    --ON
    --  GIACENZAMETODO.CODART = TP_GIACENZE.CodArticolo And
    --  GIACENZAMETODO.CODDEPOSITO = TP_GIACENZE.CodDeposito;
    
    /*STORICO GIACENZE*/
    DELETE FROM TP_GIACENZESTORICO WHERE Esercizio = (@Esercizio-1);
    
    INSERT INTO TP_GIACENZESTORICO(CodDeposito,CodArticolo,Giacenza,Ordinato,Impegnato,Esercizio,UtenteModifica,DataModifica)
    SELECT
        GIACENZAMETODO.CODDEPOSITO,
        GIACENZAMETODO.CODART,
        ISNULL((GIACENZAMETODO.CARICO - GIACENZAMETODO.SCARICO - GIACENZAMETODO.RESODACARICO + GIACENZAMETODO.RESODASCARICO),0) AS GIACENZA_F,
        ISNULL(GIACENZAMETODO.ORDINATO,0) AS ORDINATO_F,
        ISNULL(GIACENZAMETODO.IMPEGNATO,0) AS IMPEGNATO_F,
        (@Esercizio-1) AS Esercizio,
        USER_NAME(),
        GETDATE()
    FROM
    (
        SELECT
            STMAG.CODART,
            STMAG.CODDEPOSITO,
            SUM((STMAG.QTA1UM*STMAG.ORDINATO)) AS ORDINATO,
            SUM((STMAG.QTA1UM*STMAG.IMPEGNATO)) AS IMPEGNATO,
            SUM((CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END)) AS CARICO,
            SUM((CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END)) AS SCARICO,
            SUM((CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END)) AS RESODACARICO,
            SUM((CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END)) AS RESODASCARICO
        FROM 
            (
                SELECT DISTINCT
                    STMAG.PROGRESSIVO,
                    STMAG.CODART,
                    STMAG.CODDEPOSITO,
                    STMAG.QTA1UM,
                    STMAG.ORDINATO,
                    STMAG.IMPEGNATO,
                    STMAG.GIACENZA,
                    STMAG.RESO
                FROM
                    STORICOMAG AS STMAG
                INNER JOIN 
                    TP_EXTRAMAG TEM
                ON
                    (TEM.CodArt = STMAG.CODART OR TEM.OFCODARTRIF = STMAG.CODART) AND TEM.ConsidAcq = 1
                WHERE
                    STMAG.ESERCIZIO < @Esercizio
            ) STMAG
        GROUP BY 
            STMAG.CODART,
            STMAG.CODDEPOSITO
        HAVING  
            SUM(STMAG.QTA1UM*STMAG.ORDINATO) <>0 OR 
            SUM(STMAG.QTA1UM*STMAG.IMPEGNATO) <>0 OR 
            SUM(CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
            SUM(CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
            SUM(CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
            SUM(CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END) <>0 
    ) AS GIACENZAMETODO;
    
    --/*Articolo di riferimento*/
    --UPDATE TP_GIACENZESTORICO
    --SET 
    --  TP_GIACENZESTORICO.Giacenza = (CASE WHEN GIACENZAMETODO.SOMMAQTASTAT = 0 THEN ISNULL((GIACENZAMETODO.CARICO - GIACENZAMETODO.SCARICO - GIACENZAMETODO.RESODACARICO + GIACENZAMETODO.RESODASCARICO),0) ELSE (TP_GIACENZESTORICO.Giacenza + ISNULL((GIACENZAMETODO.CARICO - GIACENZAMETODO.SCARICO - GIACENZAMETODO.RESODACARICO + GIACENZAMETODO.RESODASCARICO),0)) END),
    --  TP_GIACENZESTORICO.Ordinato = (CASE WHEN GIACENZAMETODO.SOMMAQTASTAT = 0 THEN ISNULL(GIACENZAMETODO.ORDINATO,0) ELSE (TP_GIACENZESTORICO.Ordinato + ISNULL(GIACENZAMETODO.ORDINATO,0)) END),
    --  TP_GIACENZESTORICO.Impegnato = (CASE WHEN GIACENZAMETODO.SOMMAQTASTAT = 0 THEN ISNULL(GIACENZAMETODO.IMPEGNATO,0) ELSE (TP_GIACENZESTORICO.Impegnato + ISNULL(GIACENZAMETODO.IMPEGNATO,0)) END)
    --FROM
    --  TP_GIACENZESTORICO
    --INNER JOIN
    --(
    --  SELECT
    --      STMAG.CODART,
    --      STMAG.CODDEPOSITO,
    --      STMAG.SOMMAQTASTAT,
    --      SUM((STMAG.QTA1UM*STMAG.ORDINATO)) AS ORDINATO,
    --      SUM((STMAG.QTA1UM*STMAG.IMPEGNATO)) AS IMPEGNATO,
    --      SUM((CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END)) AS CARICO,
    --      SUM((CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END)) AS SCARICO,
    --      SUM((CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END)) AS RESODACARICO,
    --      SUM((CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END)) AS RESODASCARICO
    --  FROM 
    --      (
    --          SELECT
    --              TEM.CODART,
    --              (CASE WHEN ((TEM.OFCODARTRIF = '''') OR (TEM.OFCODARTRIF IS NULL)) THEN TEM.CODART ELSE TEM.OFCODARTRIF END) AS CODARTRIF,
    --              ISNULL(TEM.SOMMAQTASTAT,0) AS SOMMAQTASTAT,
    --              STMAG.CODDEPOSITO,
    --              STMAG.QTA1UM,
    --              STMAG.ORDINATO,
    --              STMAG.IMPEGNATO,
    --              STMAG.GIACENZA,
    --              STMAG.RESO
    --          FROM
    --              STORICOMAG AS STMAG
    --          INNER JOIN 
    --              TP_EXTRAMAG TEM
    --          ON
    --              TEM.OFCODARTRIF <> '' AND
    --              TEM.OFCODARTRIF = STMAG.CODART AND TEM.ConsidAcq = 1
    --          WHERE
    --              STMAG.ESERCIZIO < @Esercizio
    --      ) STMAG
    --  GROUP BY 
    --      STMAG.CODART,
    --      STMAG.CODDEPOSITO,
    --      STMAG.SOMMAQTASTAT
    --  HAVING  
    --      SUM(STMAG.QTA1UM*STMAG.ORDINATO) <>0 OR 
    --      SUM(STMAG.QTA1UM*STMAG.IMPEGNATO) <>0 OR 
    --      SUM(CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
    --      SUM(CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
    --      SUM(CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END) <>0 OR 
    --      SUM(CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END) <>0 
    --) AS GIACENZAMETODO
    --ON
    --  GIACENZAMETODO.CODART = TP_GIACENZESTORICO.CodArticolo And
    --  GIACENZAMETODO.CODDEPOSITO = TP_GIACENZESTORICO.CodDeposito
    --WHERE
    --  TP_GIACENZESTORICO.Esercizio = (@Esercizio-1);

    /*CALCOLO DEI DOCUMENTI IN ORDINE*/
    UPDATE TP_GIACENZE 
        SET TP_GIACENZE.InOrdine = INORDINE.RIGHEINORDINE
    FROM TP_GIACENZE
    INNER JOIN
    (
        SELECT DISTINCT
            RD.CODART,
            RD.CODDEPOSITO,
            COUNT(DISTINCT RD.IDTESTA) AS RIGHEINORDINE
        FROM 
            RIGHEDOCUMENTI RD
        INNER JOIN
            TP_GIACENZE TG
        ON
            TG.CodArticolo = RD.CODART AND
            TG.CodDeposito = RD.CODDEPOSITO
        INNER JOIN
            TABCAUSALIMAG TCM
        ON
            RD.CAUSALEMAG = TCM.CODICE AND TCM.ORDINATO = 1
        WHERE   
            RD.ESERCIZIO = @Esercizio
        GROUP BY
            RD.CODART,
            RD.CODDEPOSITO
    ) INORDINE
    ON
        INORDINE.CODART = TP_GIACENZE.CodArticolo AND
        INORDINE.CODDEPOSITO = TP_GIACENZE.CodDeposito;
    
RETURN
END


GO
GRANT EXECUTE
    ON OBJECT::[dbo].[PROC_CREA_GIACENZE] TO [Metodo98]
    AS [dbo];

