CREATE TABLE [dbo].[RIGHERICLASSIFICAZIONE] (
    [NOME]           VARCHAR (20) NOT NULL,
    [TIPORIC]        SMALLINT     DEFAULT (0) NOT NULL,
    [TIPO]           SMALLINT     DEFAULT (0) NOT NULL,
    [NRRIGA]         INT          NOT NULL,
    [LIVELLO1]       VARCHAR (20) NULL,
    [LIVELLO2]       VARCHAR (20) NULL,
    [LIVELLO3]       VARCHAR (20) NULL,
    [LIVELLO4]       VARCHAR (20) NULL,
    [LIV5CONTO]      VARCHAR (10) NULL,
    [DESCRIZIONE]    VARCHAR (80) NULL,
    [TIPOOPERAZIONE] SMALLINT     NULL,
    [COLONNASTP]     SMALLINT     NULL,
    [UTILEPERDITA]   SMALLINT     DEFAULT (0) NULL,
    [COSTORICAVO]    SMALLINT     NULL,
    [STAMPATOT]      SMALLINT     NULL,
    [GENERICOCDC]    VARCHAR (7)  NULL,
    [UTENTEMODIFICA] VARCHAR (25) NOT NULL,
    [DATAMODIFICA]   DATETIME     NOT NULL,
    [PERDITAPATR]    SMALLINT     CONSTRAINT [DF_RIGHERICLASSIFICAZIONE_PERDITAPATR] DEFAULT (0) NULL,
    CONSTRAINT [PK_RIGHERICLASSIFICAZIONE] PRIMARY KEY CLUSTERED ([NOME] ASC, [TIPORIC] ASC, [TIPO] ASC, [NRRIGA] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [CHK_RIGHERICLASSIFICAZIONE_PERDITAPATR] CHECK ([PERDITAPATR] = 1 or [PERDITAPATR] = 0),
    CONSTRAINT [CKC_UTILEPERDITA_RIGHERIC] CHECK ([UTILEPERDITA] = 0 or [UTILEPERDITA] = 1)
);


GO

/*  INSERT TRIGGER "TI_RIGHERICLASSIFICAZIONE" FOR TABLE "RIGHERICLASSIFICAZIONE"  */
CREATE TRIGGER TI_RIGHERICLASSIFICAZIONE ON RIGHERICLASSIFICAZIONE FOR INSERT AS
BEGIN
    DECLARE
       @MAXCARD  INT,
       @NUMROWS  INT,
       @NUMNULL  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  PARENT "TABRICLASSIF" MUST EXIST WHEN INSERTING A CHILD IN "RIGHERICLASSIFICAZIONE"  */
    IF UPDATE(NOME) OR
       UPDATE(TIPORIC)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   TABRICLASSIF T1, INSERTED T2
           WHERE  T1.NOME = T2.NOME
            AND   T1.TIPO = T2.TIPORIC) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "TABRICLASSIF". Cannot create child in "RIGHERICLASSIFICAZIONE".'
             GOTO ERROR
          END
    END

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

/*  UPDATE TRIGGER "TU_RIGHERICLASSIFICAZIONE" FOR TABLE "RIGHERICLASSIFICAZIONE"  */
CREATE TRIGGER TU_RIGHERICLASSIFICAZIONE ON RIGHERICLASSIFICAZIONE FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN

      
      /*  PARENT "TABRICLASSIF" MUST EXIST WHEN UPDATING A CHILD IN "RIGHERICLASSIFICAZIONE"  */
      IF UPDATE(NOME) OR
         UPDATE(TIPORIC)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   TABRICLASSIF T1, INSERTED T2
             WHERE  T1.NOME = T2.NOME
              AND   T1.TIPO = T2.TIPORIC) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"TABRICLASSIF" does not exist. Cannot modify child in "RIGHERICLASSIFICAZIONE".'
               GOTO ERROR
            END
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
GRANT DELETE
    ON OBJECT::[dbo].[RIGHERICLASSIFICAZIONE] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[RIGHERICLASSIFICAZIONE] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[RIGHERICLASSIFICAZIONE] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[RIGHERICLASSIFICAZIONE] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[RIGHERICLASSIFICAZIONE] TO [Metodo98]
    AS [dbo];

