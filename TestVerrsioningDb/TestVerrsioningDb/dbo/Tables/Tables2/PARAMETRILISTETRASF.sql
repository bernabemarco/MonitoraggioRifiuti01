CREATE TABLE [dbo].[PARAMETRILISTETRASF] (
    [CODICE]                 VARCHAR (3)   NOT NULL,
    [DESCRIZIONE]            VARCHAR (80)  NULL,
    [NOTE]                   VARCHAR (100) NULL,
    [CONTATORELISTA]         DECIMAL (5)   NULL,
    [TIPORIGA]               VARCHAR (3)   NULL,
    [TIPOUM]                 DECIMAL (5)   NULL,
    [CODDEPOSITOTRASF]       VARCHAR (10)  NULL,
    [SEQDEPTRASF]            VARCHAR (5)   NULL,
    [CODDEPTRASFCOLL]        VARCHAR (10)  NULL,
    [SEQDEPTRASFCOLL]        VARCHAR (5)   NULL,
    [FLGANALISIDISP]         SMALLINT      DEFAULT (0) NULL,
    [FLGRIPORTAIMPEGNINS]    SMALLINT      DEFAULT (0) NULL,
    [TIPODOCTRASF]           VARCHAR (3)   NULL,
    [DATAMODIFICA]           DATETIME      NOT NULL,
    [UTENTEMODIFICA]         VARCHAR (25)  NOT NULL,
    [FLGNETTIFICAPREN]       SMALLINT      DEFAULT (0) NULL,
    [FLGANALISIPROV]         SMALLINT      NULL,
    [FLGRAGGRUPPAIMPEGNI]    SMALLINT      NULL,
    [FLGTIPOTRASFERIMENTI]   SMALLINT      CONSTRAINT [DF_PARAMETRILISTETRASF_FLGTIPOTRASFERIMENTI] DEFAULT (0) NULL,
    [FLGCONSIDERAUBICAZIONI] SMALLINT      NULL,
    CONSTRAINT [PK_PARAMETRILISTETRASF] PRIMARY KEY CLUSTERED ([CODICE] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [CKC_FLGANALISIDISP_PARAMETR] CHECK ([FLGANALISIDISP] = 0 or [FLGANALISIDISP] = 1 or [FLGANALISIDISP] = 2),
    CONSTRAINT [CKC_FLGRIPORTAIMPEGNI_PARAMETR] CHECK ([FLGRIPORTAIMPEGNINS] = 0 or [FLGRIPORTAIMPEGNINS] = 1)
);


GO

/*  UPDATE TRIGGER "TU_PARAMETRILISTETRASF" FOR TABLE "PARAMETRILISTETRASF"  */
CREATE TRIGGER TU_PARAMETRILISTETRASF ON PARAMETRILISTETRASF FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN

      
      /*  CANNOT ALTER COLUMN PARENT CODE IN "PARAMETRILISTETRASF" IF CHILDREN STILL EXIST IN "TESTELISTATRASF"  */
      IF UPDATE(CODICE)
      BEGIN
         IF EXISTS (SELECT 1
                    FROM   TESTELISTATRASF T2, INSERTED I1, DELETED D1
                    WHERE  T2.CODICELISTA = D1.CODICE
                     AND  (I1.CODICE != D1.CODICE))
            BEGIN
               SELECT @ERRNO  = 30005,
                      @ERRMSG = 'Children still exist in "TESTELISTATRASF". Cannot ALTER COLUMN parent code in "PARAMETRILISTETRASF".'
               GOTO ERROR
            END
      END
      
      /*  ALTER COLUMN PARENT CODE OF "PARAMETRILISTETRASF" FOR ALL CHILDREN IN "ACCESSILISTETRASF"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE ACCESSILISTETRASF
          SET   CODLISTA = I1.CODICE
         FROM   ACCESSILISTETRASF T2, INSERTED I1, DELETED D1
         WHERE  T2.CODLISTA = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

/*  DELETE TRIGGER "TD_PARAMETRILISTETRASF" FOR TABLE "PARAMETRILISTETRASF"  */
CREATE TRIGGER TD_PARAMETRILISTETRASF ON PARAMETRILISTETRASF FOR DELETE AS
BEGIN
    DECLARE
       @NUMROWS  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  CANNOT DELETE PARENT "PARAMETRILISTETRASF" IF CHILDREN STILL EXIST IN "TESTELISTATRASF"  */
    IF EXISTS (SELECT 1
               FROM   TESTELISTATRASF T2, DELETED T1
               WHERE  T2.CODICELISTA = T1.CODICE)
       BEGIN
          SELECT @ERRNO  = 30006,
                 @ERRMSG = 'Children still exist in "TESTELISTATRASF". Cannot delete parent "PARAMETRILISTETRASF".'
          GOTO ERROR
       END
    
    /*  DELETE ALL CHILDREN IN "ACCESSILISTETRASF"  */
    DELETE ACCESSILISTETRASF
    FROM   ACCESSILISTETRASF T2, DELETED T1
    WHERE  T2.CODLISTA = T1.CODICE

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
GRANT DELETE
    ON OBJECT::[dbo].[PARAMETRILISTETRASF] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[PARAMETRILISTETRASF] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[PARAMETRILISTETRASF] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[PARAMETRILISTETRASF] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[PARAMETRILISTETRASF] TO [Metodo98]
    AS [dbo];

