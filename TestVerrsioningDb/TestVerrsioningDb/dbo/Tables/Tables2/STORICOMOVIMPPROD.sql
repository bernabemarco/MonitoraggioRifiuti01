CREATE TABLE [dbo].[STORICOMOVIMPPROD] (
    [RIFPROGRESSIVO]       DECIMAL (10)    NOT NULL,
    [RIGAMOVORD]           INT             NOT NULL,
    [RIGAMOVIMP]           INT             NOT NULL,
    [POSIZIONE]            INT             NULL,
    [RIFTESTA]             DECIMAL (10)    NULL,
    [RIFRIGA]              INT             NOT NULL,
    [RIFIMPEGNO]           INT             NOT NULL,
    [RIFMOVSM]             DECIMAL (10)    NULL,
    [RIFMOVCOLLSM]         DECIMAL (10)    NULL,
    [CODART]               VARCHAR (50)    NULL,
    [QTAMOVGESTIONE]       DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [UMGEST]               VARCHAR (3)     NOT NULL,
    [QTAMOVPREZZO]         DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [UMPREZZO]             VARCHAR (3)     NOT NULL,
    [QTAMOV1MAG]           DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [QTAMOV2MAG]           DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [UMSCARTO]             VARCHAR (3)     NOT NULL,
    [QTAMOVSCARTO]         DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [SALDORIGA]            SMALLINT        DEFAULT (0) NULL,
    [PARTITAASSEGNATA]     VARCHAR (15)    NULL,
    [CODFORPREL]           VARCHAR (7)     NULL,
    [CAUSALEMOV]           DECIMAL (5)     NULL,
    [DEPOSITO]             VARCHAR (10)    NULL,
    [UBICAZIONE]           VARCHAR (10)    NULL,
    [CONTOCDC]             VARCHAR (10)    NULL,
    [CAUSALEMOVCOLL]       DECIMAL (5)     NULL,
    [DEPOSITOCOLL]         VARCHAR (10)    NULL,
    [UBICAZIONECOLL]       VARCHAR (10)    NULL,
    [CONTOCDCCOLL]         VARCHAR (10)    NULL,
    [CAUSALESCARTO]        DECIMAL (5)     NULL,
    [DEPOSITOSCARTO]       VARCHAR (10)    NULL,
    [UBICAZIONESCARTO]     VARCHAR (10)    NULL,
    [CONTOCDCSCARTO]       VARCHAR (10)    NULL,
    [COSTOUNITMOV]         DECIMAL (19, 6) DEFAULT (0) NULL,
    [COSTOTOTMOV]          DECIMAL (19, 6) DEFAULT (0) NULL,
    [COSTOUNITMOVEURO]     DECIMAL (19, 6) DEFAULT (0) NULL,
    [COSTOTOTMOVEURO]      DECIMAL (19, 6) DEFAULT (0) NULL,
    [NOTE]                 VARCHAR (100)   NULL,
    [DATAMODIFICA]         DATETIME        NOT NULL,
    [UTENTEMODIFICA]       VARCHAR (25)    NOT NULL,
    [QTAPREZZOMAN]         SMALLINT        DEFAULT (0) NULL,
    [QTA1MAGMAN]           SMALLINT        DEFAULT (0) NULL,
    [QTA2MAGMAN]           SMALLINT        DEFAULT (0) NULL,
    [SALDARIGA]            SMALLINT        DEFAULT (0) NULL,
    [RifCommCli]           VARCHAR (30)    NULL,
    [RICALCOLAQTAGESTIONE] SMALLINT        DEFAULT (1) NULL,
    [UM1MAG]               VARCHAR (3)     NULL,
    [UM2MAG]               VARCHAR (3)     NULL,
    [CAUSALESCARTOCOLL]    NUMERIC (5)     NULL,
    [DEPOSITOSCARTOCOLL]   VARCHAR (10)    NULL,
    [UBICAZIONESCARTOCOLL] VARCHAR (10)    NULL,
    [CONTOCDCSCARTOCOLL]   VARCHAR (10)    NULL,
    [QTARIBALTAMENTOCOSTI] DECIMAL (16, 6) DEFAULT ((1)) NULL,
    CONSTRAINT [PK_STORICOMOVIMPPROD] PRIMARY KEY CLUSTERED ([RIFPROGRESSIVO] ASC, [RIGAMOVORD] ASC, [RIGAMOVIMP] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [CKC_SALDORIGA_STORICOMPROD] CHECK ([SALDORIGA] = 0 or [SALDORIGA] = 1),
    CONSTRAINT [flagimp_qta1magman] CHECK ([QTA1MAGMAN] = 1 or [QTA1MAGMAN] = 0),
    CONSTRAINT [flagimp_qta2magman] CHECK ([QTA2MAGMAN] = 1 or [QTA2MAGMAN] = 0),
    CONSTRAINT [flagimp_qtaprezzoman] CHECK ([QTAPREZZOMAN] = 1 or [QTAPREZZOMAN] = 0)
);


GO
CREATE NONCLUSTERED INDEX [STORICOMOVIMPPROD_RIFCOMM]
    ON [dbo].[STORICOMOVIMPPROD]([RIFTESTA] ASC, [RIFRIGA] ASC, [RIFIMPEGNO] ASC) WITH (FILLFACTOR = 90);


GO
CREATE TRIGGER TD_STORICOMOVIMPPROD ON STORICOMOVIMPPROD FOR DELETE AS
BEGIN
    DECLARE
       @NUMROWS  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  DELETE ALL CHILDREN IN "STORICOMOVPARTITEIMP"  */
    DELETE STORICOMOVPARTITEIMP
    FROM   STORICOMOVPARTITEIMP T2, DELETED T1
    WHERE  T2.RIFPROGRESSIVO = T1.RIFPROGRESSIVO
     AND   T2.RIFRIGAMOVORD = T1.RIGAMOVORD
     AND   T2.RIFRIGAMOVIMP = T1.RIGAMOVIMP

    /*  DELETE ALL CHILDREN IN "STORICOMOVIMPPRODMATRICOLE"  */
    DELETE STORICOMOVIMPPRODMATRICOLE
    FROM   STORICOMOVIMPPRODMATRICOLE T2, DELETED T1
    WHERE  T2.RIFPROGRESSIVO = T1.RIFPROGRESSIVO
     AND   T2.RIFRIGAMOVORD = T1.RIGAMOVORD
     AND   T2.RIFRIGAMOVIMP = T1.RIGAMOVIMP

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
CREATE TRIGGER TU_STORICOMOVIMPPROD ON STORICOMOVIMPPROD FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN

      
      /*  PARENT "STORICOMOVORDPROD" MUST EXIST WHEN UPDATING A CHILD IN "STORICOMOVIMPPROD"  */
      IF UPDATE(RIFPROGRESSIVO) OR
         UPDATE(RIGAMOVORD)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   STORICOMOVORDPROD T1, INSERTED T2
             WHERE  T1.RIFPROGRESSIVO = T2.RIFPROGRESSIVO
              AND   T1.RIGAMOVORD = T2.RIGAMOVORD) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"STORICOMOVORDPROD" does not exist. Cannot modify child in "STORICOMOVIMPPROD".'
               GOTO ERROR
            END
      END
      
      /*  MODIFY PARENT CODE OF "STORICOMOVIMPPROD" FOR ALL CHILDREN IN "STORICOMOVPARTITEIMP"  */
      IF UPDATE(RIFPROGRESSIVO) OR
         UPDATE(RIGAMOVORD) OR
         UPDATE(RIGAMOVIMP)
      BEGIN
         UPDATE STORICOMOVPARTITEIMP
          SET   RIFPROGRESSIVO = I1.RIFPROGRESSIVO,
                RIFRIGAMOVORD = I1.RIGAMOVORD,
                RIFRIGAMOVIMP = I1.RIGAMOVIMP
         FROM   STORICOMOVPARTITEIMP T2, INSERTED I1, DELETED D1
         WHERE  T2.RIFPROGRESSIVO = D1.RIFPROGRESSIVO
          AND   T2.RIFRIGAMOVORD = D1.RIGAMOVORD
          AND   T2.RIFRIGAMOVIMP = D1.RIGAMOVIMP
          AND  (I1.RIFPROGRESSIVO != D1.RIFPROGRESSIVO OR
                I1.RIGAMOVORD != D1.RIGAMOVORD OR
                I1.RIGAMOVIMP != D1.RIGAMOVIMP)
      END

      /*  MODIFY PARENT CODE OF "STORICOMOVIMPPROD" FOR ALL CHILDREN IN "STORICOMOVIMPPRODMATRICOLE"  */
      IF UPDATE(RIFPROGRESSIVO) OR
         UPDATE(RIGAMOVORD) OR
         UPDATE(RIGAMOVIMP)
      BEGIN
         UPDATE STORICOMOVIMPPRODMATRICOLE
          SET   RIFPROGRESSIVO = I1.RIFPROGRESSIVO,
                RIFRIGAMOVORD = I1.RIGAMOVORD,
                RIFRIGAMOVIMP = I1.RIGAMOVIMP
         FROM   STORICOMOVIMPPRODMATRICOLE T2, INSERTED I1, DELETED D1
         WHERE  T2.RIFPROGRESSIVO = D1.RIFPROGRESSIVO
          AND   T2.RIFRIGAMOVORD = D1.RIGAMOVORD
          AND   T2.RIFRIGAMOVIMP = D1.RIGAMOVIMP
          AND  (I1.RIFPROGRESSIVO != D1.RIFPROGRESSIVO OR
                I1.RIGAMOVORD != D1.RIGAMOVORD OR
                I1.RIGAMOVIMP != D1.RIGAMOVIMP)
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

/*  INSERT TRIGGER "TI_STORICOMOVIMPPROD" FOR TABLE "STORICOMOVIMPPROD"  */
CREATE TRIGGER TI_STORICOMOVIMPPROD ON STORICOMOVIMPPROD FOR INSERT AS
BEGIN
    DECLARE
       @MAXCARD  INT,
       @NUMROWS  INT,
       @NUMNULL  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  PARENT "STORICOMOVORDPROD" MUST EXIST WHEN INSERTING A CHILD IN "STORICOMOVIMPPROD"  */
    IF UPDATE(RIFPROGRESSIVO) OR
       UPDATE(RIGAMOVORD)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   STORICOMOVORDPROD T1, INSERTED T2
           WHERE  T1.RIFPROGRESSIVO = T2.RIFPROGRESSIVO
            AND   T1.RIGAMOVORD = T2.RIGAMOVORD) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "STORICOMOVORDPROD". Cannot create child in "STORICOMOVIMPPROD".'
             GOTO ERROR
          END
    END

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
GRANT DELETE
    ON OBJECT::[dbo].[STORICOMOVIMPPROD] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[STORICOMOVIMPPROD] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[STORICOMOVIMPPROD] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[STORICOMOVIMPPROD] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[STORICOMOVIMPPROD] TO [Metodo98]
    AS [dbo];

