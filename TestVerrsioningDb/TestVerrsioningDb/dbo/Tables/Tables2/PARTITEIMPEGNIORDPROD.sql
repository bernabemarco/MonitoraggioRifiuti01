CREATE TABLE [dbo].[PARTITEIMPEGNIORDPROD] (
    [IDTESTA]          DECIMAL (10)    NOT NULL,
    [IDRIGA]           INT             NOT NULL,
    [IDIMPEGNO]        INT             NOT NULL,
    [PRIORITA]         INT             NOT NULL,
    [PARTITA]          VARCHAR (15)    NOT NULL,
    [QTAGESTIONE]      DECIMAL (16, 6) DEFAULT (0) NULL,
    [QTAGESTIONEPREL]  DECIMAL (16, 6) DEFAULT (0) NULL,
    [QTAGESTIONERES]   DECIMAL (16, 6) DEFAULT (0) NULL,
    [QTA1MAG]          DECIMAL (16, 6) DEFAULT (0) NULL,
    [QTA1MAGRES]       DECIMAL (16, 6) DEFAULT (0) NULL,
    [QTA2MAG]          DECIMAL (16, 6) DEFAULT (0) NULL,
    [QTA2MAGRES]       DECIMAL (16, 6) DEFAULT (0) NULL,
    [TIPORIGA]         SMALLINT        DEFAULT (0) NULL,
    [POSIZIONE]        INT             NULL,
    [FLAGRIGA]         SMALLINT        NULL,
    [UTENTEMODIFICA]   VARCHAR (25)    NOT NULL,
    [DATAMODIFICA]     DATETIME        NOT NULL,
    [IDTESTADOC]       DECIMAL (10)    DEFAULT (0) NULL,
    [IDRIGADOC]        INT             DEFAULT (0) NULL,
    [QTASCARTO]        DECIMAL (16, 6) NULL,
    [QTAGESTIONETRASF] DECIMAL (16, 6) NULL,
    CONSTRAINT [PK_PARTITEIMPEGNIORDPROD] PRIMARY KEY CLUSTERED ([IDTESTA] ASC, [IDRIGA] ASC, [IDIMPEGNO] ASC, [PRIORITA] ASC) WITH (FILLFACTOR = 90)
);


GO
CREATE TRIGGER TI_PARTITEIMPEGNIORDPROD ON PARTITEIMPEGNIORDPROD FOR INSERT AS
BEGIN
    DECLARE
       @MAXCARD  INT,
       @NUMROWS  INT,
       @NUMNULL  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  PARENT "IMPEGNIORDPROD" MUST EXIST WHEN INSERTING A CHILD IN "PARTITEIMPEGNIORDPROD"  */
    IF UPDATE(IDTESTA) OR
       UPDATE(IDRIGA) OR
       UPDATE(IDIMPEGNO)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   IMPEGNIORDPROD T1, INSERTED T2
           WHERE  T1.IDTESTA = T2.IDTESTA
            AND   T1.IDRIGA = T2.IDRIGA
            AND   T1.IDIMPEGNO = T2.IDIMPEGNO) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "IMPEGNIORDPROD". Cannot create child in "PARTITEIMPEGNIORDPROD".'
             GOTO ERROR
          END
    END

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
CREATE TRIGGER TU_PARTITEIMPEGNIORDPROD ON PARTITEIMPEGNIORDPROD FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN

      
      /*  PARENT "IMPEGNIORDPROD" MUST EXIST WHEN UPDATING A CHILD IN "PARTITEIMPEGNIORDPROD"  */
      IF UPDATE(IDTESTA) OR
         UPDATE(IDRIGA) OR
         UPDATE(IDIMPEGNO)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   IMPEGNIORDPROD T1, INSERTED T2
             WHERE  T1.IDTESTA = T2.IDTESTA
              AND   T1.IDRIGA = T2.IDRIGA
              AND   T1.IDIMPEGNO = T2.IDIMPEGNO) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"IMPEGNIORDPROD" does not exist. Cannot modify child in "PARTITEIMPEGNIORDPROD".'
               GOTO ERROR
            END
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
GRANT DELETE
    ON OBJECT::[dbo].[PARTITEIMPEGNIORDPROD] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[PARTITEIMPEGNIORDPROD] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[PARTITEIMPEGNIORDPROD] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[PARTITEIMPEGNIORDPROD] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[PARTITEIMPEGNIORDPROD] TO [Metodo98]
    AS [dbo];

