CREATE TABLE [dbo].[STORICOMAG] (
    [PROGRESSIVO]         DECIMAL (10)    NOT NULL,
    [CODART]              VARCHAR (50)    NOT NULL,
    [CODCLIFOR]           VARCHAR (7)     NULL,
    [CODCAUSALE]          DECIMAL (5)     NOT NULL,
    [DATAMOV]             DATETIME        NULL,
    [QUANTITACARICO]      SMALLINT        NULL,
    [VALORECARICO]        SMALLINT        NULL,
    [QUANTITASCARICO]     SMALLINT        NULL,
    [VALORESCARICO]       SMALLINT        NULL,
    [GIACENZA]            SMALLINT        NULL,
    [ORDINATO]            SMALLINT        NULL,
    [IMPEGNATO]           SMALLINT        NULL,
    [GIACENZA2UM]         SMALLINT        NULL,
    [ORDINATO2UM]         SMALLINT        NULL,
    [IMPEGNATO2UM]        SMALLINT        NULL,
    [QTA1UM]              DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [QTA2UM]              DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [LISTINO]             INT             NULL,
    [IMPORTOTOTLORDO]     DECIMAL (19, 4) DEFAULT (0) NOT NULL,
    [IMPORTOTOTLORDOVAL]  DECIMAL (19, 4) DEFAULT (0) NOT NULL,
    [IMPORTOTOTLORDOEURO] DECIMAL (19, 4) DEFAULT (0) NOT NULL,
    [SCONTO]              VARCHAR (20)    NULL,
    [IMPORTOTOTNETTO]     DECIMAL (19, 4) DEFAULT (0) NOT NULL,
    [IMPORTOTOTNETTOVAL]  DECIMAL (19, 4) DEFAULT (0) NOT NULL,
    [IMPORTOTOTNETTOEURO] DECIMAL (19, 4) DEFAULT (0) NOT NULL,
    [CODCAMBIO]           DECIMAL (5)     NULL,
    [VALCAMBIO]           DECIMAL (13, 6) DEFAULT (1) NOT NULL,
    [GENVENACQ]           VARCHAR (7)     NULL,
    [IDDISTINTABASE]      VARCHAR (6)     NULL,
    [NRIFDOC]             VARCHAR (15)    NULL,
    [DATARIFDOC]          DATETIME        NULL,
    [RIFERIMENTI]         VARCHAR (80)    NULL,
    [DESTDIV]             DECIMAL (5)     NULL,
    [NRIFPARTITA]         VARCHAR (15)    NULL,
    [CODPAG]              VARCHAR (4)     NULL,
    [PROGRCOLLEGATO]      DECIMAL (10)    NULL,
    [CONTOCDCMOV]         VARCHAR (10)    NULL,
    [CODDEPOSITO]         VARCHAR (10)    NOT NULL,
    [CODUBICAZIONE]       VARCHAR (10)    NULL,
    [TIPODOC]             VARCHAR (3)     NULL,
    [NUMERODOC]           INT             DEFAULT (0) NULL,
    [BIS]                 CHAR (1)        NULL,
    [RIGADOC]             INT             NULL,
    [IDTESTA]             DECIMAL (10)    NULL,
    [VARIANTE]            VARCHAR (100)   NULL,
    [TIPOMOV]             SMALLINT        DEFAULT (0) NULL,
    [RIGACOMP]            SMALLINT        DEFAULT (0) NULL,
    [ESERCIZIO]           DECIMAL (5)     NOT NULL,
    [CODCOMMESSA]         VARCHAR (30)    NULL,
    [UTENTEMODIFICA]      VARCHAR (25)    NOT NULL,
    [DATAMODIFICA]        DATETIME        NOT NULL,
    [ProgMovVBanco]       DECIMAL (10)    DEFAULT (0) NULL,
    [DATADISP]            DATETIME        NULL,
    [Reso]                SMALLINT        DEFAULT (0) NOT NULL,
    [RigaCauz]            INT             DEFAULT (0) NOT NULL,
    [SPESERIPMAG]         DECIMAL (19, 4) CONSTRAINT [DF_STORICOMAG_SPESERIPMAG] DEFAULT (0) NULL,
    [SPESERIPMAGVAL]      DECIMAL (19, 4) CONSTRAINT [DF_STORICOMAG_SPESERIPMAGVAL] DEFAULT (0) NULL,
    [SPESERIPMAGEURO]     DECIMAL (19, 4) CONSTRAINT [DF_STORICOMAG_SPESERIPMAGEURO] DEFAULT (0) NULL,
    [NPromozione]         VARCHAR (4)     NULL,
    [RIPVALGIAC0]         SMALLINT        CONSTRAINT [DF_STORICOMAG_RIPVALGIAC0] DEFAULT ((0)) NULL,
    CONSTRAINT [PK_STORICOMAG] PRIMARY KEY CLUSTERED ([PROGRESSIVO] ASC) WITH (FILLFACTOR = 90),
    CHECK ([Reso] = 1 or [Reso] = 0)
);


GO
CREATE NONCLUSTERED INDEX [STM_CODART]
    ON [dbo].[STORICOMAG]([CODART] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [STM_CODCAUSALE]
    ON [dbo].[STORICOMAG]([CODCAUSALE] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [STM_RIFORDPROD]
    ON [dbo].[STORICOMAG]([TIPOMOV] ASC, [IDTESTA] ASC, [RIGADOC] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [IX_ORDINEFORNITORE_STORICOMAG_1]
    ON [dbo].[STORICOMAG]([CODCAUSALE] ASC, [TIPODOC] ASC)
    INCLUDE([CODART], [DATAMOV], [QTA1UM], [IMPORTOTOTNETTOEURO], [CODDEPOSITO]);


GO
CREATE NONCLUSTERED INDEX [IX_ORDINEFORNITORE_STORICOMAG_2]
    ON [dbo].[STORICOMAG]([ORDINATO] ASC)
    INCLUDE([CODART], [DATAMOV], [QTA1UM], [CODDEPOSITO]);


GO
CREATE NONCLUSTERED INDEX [IX_ORDINEFORNITORE_STORICOMAG_3]
    ON [dbo].[STORICOMAG]([CODCAUSALE] ASC, [TIPODOC] ASC)
    INCLUDE([CODART], [DATAMOV], [QTA1UM], [IMPORTOTOTNETTOEURO], [CODDEPOSITO], [ESERCIZIO]);


GO
CREATE NONCLUSTERED INDEX [IDX_ORF_STORICOMAG_CMP_1]
    ON [dbo].[STORICOMAG]([ESERCIZIO] ASC)
    INCLUDE([CODART], [GIACENZA], [ORDINATO], [IMPEGNATO], [QTA1UM], [CODDEPOSITO], [Reso]);


GO
CREATE NONCLUSTERED INDEX [IDX_ORF_STORICOMAG_CMP_2]
    ON [dbo].[STORICOMAG]([DATAMOV] ASC)
    INCLUDE([CODART], [GIACENZA], [ORDINATO], [IMPEGNATO], [QTA1UM], [CODDEPOSITO], [ESERCIZIO], [Reso]);


GO
CREATE NONCLUSTERED INDEX [STM_PROGMOVVBANCO]
    ON [dbo].[STORICOMAG]([ProgMovVBanco] ASC);


GO

/*  INSERT TRIGGER "TI_STORICOMAG" FOR TABLE "STORICOMAG"  */
CREATE TRIGGER TI_STORICOMAG ON STORICOMAG FOR INSERT AS
BEGIN
    DECLARE
       @MAXCARD  INT,
       @NUMROWS  INT,
       @NUMNULL  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  PARENT "TABCAUSALIMAG" MUST EXIST WHEN INSERTING A CHILD IN "STORICOMAG"  */
    IF UPDATE(CODCAUSALE)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   TABCAUSALIMAG T1, INSERTED T2
           WHERE  T1.CODICE = T2.CODCAUSALE) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "TABCAUSALIMAG". Cannot create child in "STORICOMAG".'
             GOTO ERROR
          END
    END
    
    /*  PARENT "ANAGRAFICAARTICOLI" MUST EXIST WHEN INSERTING A CHILD IN "STORICOMAG"  */
    IF UPDATE(CODART)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   ANAGRAFICAARTICOLI T1, INSERTED T2
           WHERE  T1.CODICE = T2.CODART) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "ANAGRAFICAARTICOLI". Cannot create child in "STORICOMAG".'
             GOTO ERROR
          END
    END
    
    /*  PARENT "ANAGRAFICADEPOSITI" MUST EXIST WHEN INSERTING A CHILD IN "STORICOMAG"  */
    IF UPDATE(CODDEPOSITO)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   ANAGRAFICADEPOSITI T1, INSERTED T2
           WHERE  T1.CODICE = T2.CODDEPOSITO) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "ANAGRAFICADEPOSITI". Cannot create child in "STORICOMAG".'
             GOTO ERROR
          END
    END

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

/*  UPDATE TRIGGER "TU_STORICOMAG" FOR TABLE "STORICOMAG"  */
CREATE TRIGGER TU_STORICOMAG ON STORICOMAG FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN

      
      /*  PARENT "TABCAUSALIMAG" MUST EXIST WHEN UPDATING A CHILD IN "STORICOMAG"  */
      IF UPDATE(CODCAUSALE)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   TABCAUSALIMAG T1, INSERTED T2
             WHERE  T1.CODICE = T2.CODCAUSALE) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"TABCAUSALIMAG" does not exist. Cannot ALTER COLUMN child in "STORICOMAG".'
               GOTO ERROR
            END
      END
      
      /*  PARENT "ANAGRAFICAARTICOLI" MUST EXIST WHEN UPDATING A CHILD IN "STORICOMAG"  */
      IF UPDATE(CODART)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   ANAGRAFICAARTICOLI T1, INSERTED T2
             WHERE  T1.CODICE = T2.CODART) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"ANAGRAFICAARTICOLI" does not exist. Cannot ALTER COLUMN child in "STORICOMAG".'
               GOTO ERROR
            END
      END
      
      /*  PARENT "ANAGRAFICADEPOSITI" MUST EXIST WHEN UPDATING A CHILD IN "STORICOMAG"  */
      IF UPDATE(CODDEPOSITO)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   ANAGRAFICADEPOSITI T1, INSERTED T2
             WHERE  T1.CODICE = T2.CODDEPOSITO) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"ANAGRAFICADEPOSITI" does not exist. Cannot ALTER COLUMN child in "STORICOMAG".'
               GOTO ERROR
            END
      END
      
      /*  ALTER COLUMN PARENT CODE OF "STORICOMAG" FOR ALL CHILDREN IN "STORICOMAGMATRICOLE"  */
      IF UPDATE(PROGRESSIVO)
      BEGIN
         UPDATE STORICOMAGMATRICOLE
          SET   PROGRESSIVO = I1.PROGRESSIVO
         FROM   STORICOMAGMATRICOLE T2, INSERTED I1, DELETED D1
         WHERE  T2.PROGRESSIVO = D1.PROGRESSIVO
          AND  (I1.PROGRESSIVO != D1.PROGRESSIVO)
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

/*  DELETE TRIGGER "TD_STORICOMAG" FOR TABLE "STORICOMAG"  */
CREATE TRIGGER TD_STORICOMAG ON STORICOMAG FOR DELETE AS
BEGIN
    DECLARE
       @NUMROWS  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  DELETE ALL CHILDREN IN "STORICOMAGMATRICOLE"  */
    DELETE STORICOMAGMATRICOLE
    FROM   STORICOMAGMATRICOLE T2, DELETED T1
    WHERE  T2.PROGRESSIVO = T1.PROGRESSIVO

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
GRANT DELETE
    ON OBJECT::[dbo].[STORICOMAG] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[STORICOMAG] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[STORICOMAG] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[STORICOMAG] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[STORICOMAG] TO [Metodo98]
    AS [dbo];

