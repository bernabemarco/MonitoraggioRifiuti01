CREATE TABLE [dbo].[TESTACICLOPIANORISORSE] (
    [NOMEPIANORIS]     VARCHAR (10)    NOT NULL,
    [PROGRESSIVO]      DECIMAL (10)    NOT NULL,
    [CODCICLO]         VARCHAR (25)    NULL,
    [VERSIONECICLO]    VARCHAR (10)    NULL,
    [DSCVERSIONE]      VARCHAR (80)    NULL,
    [STATOVERSIONE]    DECIMAL (5)     NULL,
    [VALIDITACICLO]    DATETIME        NOT NULL,
    [VERSIONEDBA]      VARCHAR (10)    NULL,
    [CICLOSTANDARD]    SMALLINT        DEFAULT (0) NULL,
    [NOTECICLO]        VARCHAR (100)   NULL,
    [UM]               VARCHAR (3)     NOT NULL,
    [QUANTITARIF]      DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [TIPOCICLO]        SMALLINT        DEFAULT (0) NULL,
    [IDTESTACOMM]      DECIMAL (10)    NULL,
    [IDRIGACOMM]       INT             NULL,
    [LOTTOASSEGNATO]   VARCHAR (15)    NULL,
    [DATAINIZIOLAV]    DATETIME        NULL,
    [TIPOVALUTAZIONE]  SMALLINT        DEFAULT (1) NULL,
    [FLGRIVALUTACICLO] SMALLINT        DEFAULT (0) NULL,
    [UTENTEMODIFICA]   VARCHAR (25)    NOT NULL,
    [DATAMODIFICA]     DATETIME        NOT NULL,
    CONSTRAINT [PK_TESTACICLOPIANORISORSE] PRIMARY KEY CLUSTERED ([NOMEPIANORIS] ASC, [PROGRESSIVO] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [CKC_CICLOSTANDARD_TESTACIC] CHECK ([CICLOSTANDARD] = 0 or [CICLOSTANDARD] = 1)
);


GO

/*  INSERT TRIGGER "TI_TESTACICLOPIANORISORSE" FOR TABLE "TESTACICLOPIANORISORSE"  */
CREATE TRIGGER TI_TESTACICLOPIANORISORSE ON TESTACICLOPIANORISORSE FOR INSERT AS
BEGIN
    DECLARE
       @MAXCARD  INT,
       @NUMROWS  INT,
       @NUMNULL  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  PARENT "TESTAPIANORISORSE" MUST EXIST WHEN INSERTING A CHILD IN "TESTACICLOPIANORISORSE"  */
    IF UPDATE(NOMEPIANORIS)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   TESTAPIANORISORSE T1, INSERTED T2
           WHERE  T1.CODICE = T2.NOMEPIANORIS) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "TESTAPIANORISORSE". Cannot create child in "TESTACICLOPIANORISORSE".'
             GOTO ERROR
          END
    END

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

/*  UPDATE TRIGGER "TU_TESTACICLOPIANORISORSE" FOR TABLE "TESTACICLOPIANORISORSE"  */
CREATE TRIGGER TU_TESTACICLOPIANORISORSE ON TESTACICLOPIANORISORSE FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN

      
      /*  PARENT "TESTAPIANORISORSE" MUST EXIST WHEN UPDATING A CHILD IN "TESTACICLOPIANORISORSE"  */
      IF UPDATE(NOMEPIANORIS)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   TESTAPIANORISORSE T1, INSERTED T2
             WHERE  T1.CODICE = T2.NOMEPIANORIS) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"TESTAPIANORISORSE" does not exist. Cannot modify child in "TESTACICLOPIANORISORSE".'
               GOTO ERROR
            END
      END
      
      /*  MODIFY PARENT CODE OF "TESTACICLOPIANORISORSE" FOR ALL CHILDREN IN "RIGHECICLOPIANORISORSE"  */
      IF UPDATE(NOMEPIANORIS) OR
         UPDATE(PROGRESSIVO)
      BEGIN
         UPDATE RIGHECICLOPIANORISORSE
          SET   NOMEPIANORIS = I1.NOMEPIANORIS,
                PROGRESSIVO = I1.PROGRESSIVO
         FROM   RIGHECICLOPIANORISORSE T2, INSERTED I1, DELETED D1
         WHERE  T2.NOMEPIANORIS = D1.NOMEPIANORIS
          AND   T2.PROGRESSIVO = D1.PROGRESSIVO
          AND  (I1.NOMEPIANORIS != D1.NOMEPIANORIS OR
                I1.PROGRESSIVO != D1.PROGRESSIVO)
      END
      
      /*  MODIFY PARENT CODE OF "TESTACICLOPIANORISORSE" FOR ALL CHILDREN IN "EXTRACICLOPIANORISORSE"  */
      IF UPDATE(NOMEPIANORIS) OR
         UPDATE(PROGRESSIVO)
      BEGIN
         UPDATE EXTRACICLOPIANORISORSE
          SET   NOMEPIANORIS = I1.NOMEPIANORIS,
                PROGRESSIVO = I1.PROGRESSIVO
         FROM   EXTRACICLOPIANORISORSE T2, INSERTED I1, DELETED D1
         WHERE  T2.NOMEPIANORIS = D1.NOMEPIANORIS
          AND   T2.PROGRESSIVO = D1.PROGRESSIVO
          AND  (I1.NOMEPIANORIS != D1.NOMEPIANORIS OR
                I1.PROGRESSIVO != D1.PROGRESSIVO)
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

/*  DELETE TRIGGER "TD_TESTACICLOPIANORISORSE" FOR TABLE "TESTACICLOPIANORISORSE"  */
CREATE TRIGGER TD_TESTACICLOPIANORISORSE ON TESTACICLOPIANORISORSE FOR DELETE AS
BEGIN
    DECLARE
       @NUMROWS  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  DELETE ALL CHILDREN IN "RIGHECICLOPIANORISORSE"  */
    DELETE RIGHECICLOPIANORISORSE
    FROM   RIGHECICLOPIANORISORSE T2, DELETED T1
    WHERE  T2.NOMEPIANORIS = T1.NOMEPIANORIS
     AND   T2.PROGRESSIVO = T1.PROGRESSIVO
    
    /*  DELETE ALL CHILDREN IN "EXTRACICLOPIANORISORSE"  */
    DELETE EXTRACICLOPIANORISORSE
    FROM   EXTRACICLOPIANORISORSE T2, DELETED T1
    WHERE  T2.NOMEPIANORIS = T1.NOMEPIANORIS
     AND   T2.PROGRESSIVO = T1.PROGRESSIVO

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
GRANT DELETE
    ON OBJECT::[dbo].[TESTACICLOPIANORISORSE] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[TESTACICLOPIANORISORSE] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[TESTACICLOPIANORISORSE] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[TESTACICLOPIANORISORSE] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[TESTACICLOPIANORISORSE] TO [Metodo98]
    AS [dbo];

