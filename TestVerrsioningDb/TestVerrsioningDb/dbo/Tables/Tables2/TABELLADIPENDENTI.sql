CREATE TABLE [dbo].[TABELLADIPENDENTI] (
    [CODICE]         VARCHAR (5)   NOT NULL,
    [COGNOME]        VARCHAR (80)  NULL,
    [NOME]           VARCHAR (80)  NULL,
    [INDIRIZZO]      VARCHAR (80)  NULL,
    [CAP]            VARCHAR (8)   NULL,
    [LOCALITA]       VARCHAR (80)  NULL,
    [PROVINCIA]      VARCHAR (4)   NULL,
    [TELEFONO]       VARCHAR (25)  NULL,
    [SESSO]          VARCHAR (1)   DEFAULT ('M') NULL,
    [DATANASCITA]    DATETIME      NULL,
    [DATAASSUNZ]     DATETIME      NULL,
    [DATALICENZ]     DATETIME      NULL,
    [CODREPARTO]     DECIMAL (5)   NULL,
    [QUALIFICA]      DECIMAL (5)   NOT NULL,
    [MANSIONE]       DECIMAL (5)   NOT NULL,
    [CATSTIPENDIO]   DECIMAL (5)   NOT NULL,
    [NOTE]           VARCHAR (100) NULL,
    [NUMEROBADGE]    VARCHAR (25)  NOT NULL,
    [UTENTEMODIFICA] VARCHAR (25)  NOT NULL,
    [DATAMODIFICA]   DATETIME      NOT NULL,
    CONSTRAINT [PK_TABELLADIPENDENTI] PRIMARY KEY CLUSTERED ([CODICE] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [CKC_SESSO_TABELLAD] CHECK ([SESSO] = 'F' or [SESSO] = 'M')
);


GO

/*  UPDATE TRIGGER "TU_TABELLADIPENDENTI" FOR TABLE "TABELLADIPENDENTI"  */
CREATE TRIGGER TU_TABELLADIPENDENTI ON TABELLADIPENDENTI FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN

      
      /*  PARENT "TABCATSTIPENDI" MUST EXIST WHEN UPDATING A CHILD IN "TABELLADIPENDENTI"  */
      IF UPDATE(CATSTIPENDIO)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   TABCATSTIPENDI T1, INSERTED T2
             WHERE  T1.CODICE = T2.CATSTIPENDIO) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"TABCATSTIPENDI" does not exist. Cannot ALTER COLUMN child in "TABELLADIPENDENTI".'
               GOTO ERROR
            END
      END
      
      /*  PARENT "TABQUALIFICHE" MUST EXIST WHEN UPDATING A CHILD IN "TABELLADIPENDENTI"  */
      IF UPDATE(QUALIFICA)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   TABQUALIFICHE T1, INSERTED T2
             WHERE  T1.CODICE = T2.QUALIFICA) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"TABQUALIFICHE" does not exist. Cannot ALTER COLUMN child in "TABELLADIPENDENTI".'
               GOTO ERROR
            END
      END
      
      /*  PARENT "TABMANSIONI" MUST EXIST WHEN UPDATING A CHILD IN "TABELLADIPENDENTI"  */
      IF UPDATE(MANSIONE)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   TABMANSIONI T1, INSERTED T2
             WHERE  T1.CODICE = T2.MANSIONE) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"TABMANSIONI" does not exist. Cannot ALTER COLUMN child in "TABELLADIPENDENTI".'
               GOTO ERROR
            END
      END
      
      /*  ALTER COLUMN PARENT CODE OF "TABELLADIPENDENTI" FOR ALL CHILDREN IN "EXTRADIPENDENTI"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE EXTRADIPENDENTI
          SET   CODDIP = I1.CODICE
         FROM   EXTRADIPENDENTI T2, INSERTED I1, DELETED D1
         WHERE  T2.CODDIP = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

/*  DELETE TRIGGER "TD_TABELLADIPENDENTI" FOR TABLE "TABELLADIPENDENTI"  */
CREATE TRIGGER TD_TABELLADIPENDENTI ON TABELLADIPENDENTI FOR DELETE AS
BEGIN
    DECLARE
       @NUMROWS  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  DELETE ALL CHILDREN IN "EXTRADIPENDENTI"  */
    DELETE EXTRADIPENDENTI
    FROM   EXTRADIPENDENTI T2, DELETED T1
    WHERE  T2.CODDIP = T1.CODICE

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

/*  INSERT TRIGGER "TI_TABELLADIPENDENTI" FOR TABLE "TABELLADIPENDENTI"  */
CREATE TRIGGER TI_TABELLADIPENDENTI ON TABELLADIPENDENTI FOR INSERT AS
BEGIN
    DECLARE
       @MAXCARD  INT,
       @NUMROWS  INT,
       @NUMNULL  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  PARENT "TABCATSTIPENDI" MUST EXIST WHEN INSERTING A CHILD IN "TABELLADIPENDENTI"  */
    IF UPDATE(CATSTIPENDIO)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   TABCATSTIPENDI T1, INSERTED T2
           WHERE  T1.CODICE = T2.CATSTIPENDIO) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "TABCATSTIPENDI". Cannot create child in "TABELLADIPENDENTI".'
             GOTO ERROR
          END
    END
    
    /*  PARENT "TABQUALIFICHE" MUST EXIST WHEN INSERTING A CHILD IN "TABELLADIPENDENTI"  */
    IF UPDATE(QUALIFICA)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   TABQUALIFICHE T1, INSERTED T2
           WHERE  T1.CODICE = T2.QUALIFICA) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "TABQUALIFICHE". Cannot create child in "TABELLADIPENDENTI".'
             GOTO ERROR
          END
    END
    
    /*  PARENT "TABMANSIONI" MUST EXIST WHEN INSERTING A CHILD IN "TABELLADIPENDENTI"  */
    IF UPDATE(MANSIONE)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   TABMANSIONI T1, INSERTED T2
           WHERE  T1.CODICE = T2.MANSIONE) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "TABMANSIONI". Cannot create child in "TABELLADIPENDENTI".'
             GOTO ERROR
          END
    END

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
GRANT DELETE
    ON OBJECT::[dbo].[TABELLADIPENDENTI] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[TABELLADIPENDENTI] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[TABELLADIPENDENTI] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[TABELLADIPENDENTI] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[TABELLADIPENDENTI] TO [Metodo98]
    AS [dbo];

