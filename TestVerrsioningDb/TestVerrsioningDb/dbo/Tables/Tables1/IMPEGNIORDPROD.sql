CREATE TABLE [dbo].[IMPEGNIORDPROD] (
    [IDTESTA]                 DECIMAL (10)    NOT NULL,
    [IDRIGA]                  INT             NOT NULL,
    [IDIMPEGNO]               INT             NOT NULL,
    [POSIZIONE]               INT             NULL,
    [CODART]                  VARCHAR (50)    NULL,
    [DESCRIZIONEART]          VARCHAR (255)   NULL,
    [UMGEST]                  VARCHAR (3)     NOT NULL,
    [QTAUNITARIA]             DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [QTAGESTIONE]             DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [QTAGESTIONEVERS]         DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [QTAGESTIONERES]          DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [UMPREZZO]                VARCHAR (3)     NOT NULL,
    [QTAPREZZOMAN]            SMALLINT        DEFAULT (0) NULL,
    [QTAPREZZO]               DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [QTAPREZZORES]            DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [QTA1MAGMAN]              SMALLINT        DEFAULT (0) NULL,
    [QTA1MAG]                 DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [QTA1MAGRES]              DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [QTA2MAGMAN]              SMALLINT        DEFAULT (0) NULL,
    [QTA2MAG]                 DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [QTA2MAGRES]              DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [FORMULAQTA1]             VARCHAR (255)   NULL,
    [OPERATORE]               VARCHAR (1)     DEFAULT ('*') NULL,
    [FORMULAQTA2]             VARCHAR (255)   NULL,
    [FORMULAFINALE]           VARCHAR (255)   NULL,
    [CODFORIMP]               VARCHAR (7)     NULL,
    [CAUSALEMAG]              DECIMAL (5)     NULL,
    [DEPOSITO]                VARCHAR (10)    NULL,
    [UBICAZIONE]              VARCHAR (10)    NULL,
    [CONTOCDC]                VARCHAR (10)    NULL,
    [CAUSALEMAGCOLL]          DECIMAL (5)     NULL,
    [DEPOSITOCOLL]            VARCHAR (10)    NULL,
    [UBICAZIONECOLL]          VARCHAR (10)    NULL,
    [CONTOCDCCOLL]            VARCHAR (10)    NULL,
    [PARTITAASSEGNATA]        VARCHAR (15)    NULL,
    [PARTITAVINCOLATA]        SMALLINT        DEFAULT (0) NULL,
    [CODCLIIMP]               VARCHAR (7)     NULL,
    [DATAEMISSIONE]           DATETIME        NULL,
    [DATAIMPEGNORICH]         DATETIME        NULL,
    [DATAIMPEGNOSCH]          DATETIME        NULL,
    [DATAULTATTIVITA]         DATETIME        NULL,
    [STATOIMPEGNO]            SMALLINT        DEFAULT (0) NULL,
    [TIPOIMPEGNO]             SMALLINT        DEFAULT (0) NULL,
    [COSTOPREV]               DECIMAL (19, 6) DEFAULT (0) NULL,
    [COSTOUNITIMPPREV]        DECIMAL (19, 6) DEFAULT (0) NULL,
    [COSTOTOTIMPPREV]         DECIMAL (19, 6) DEFAULT (0) NULL,
    [COSTOPREVEURO]           DECIMAL (19, 6) DEFAULT (0) NULL,
    [COSTOUNITIMPPREVEURO]    DECIMAL (19, 6) DEFAULT (0) NULL,
    [COSTOTOTIMPPREVEURO]     DECIMAL (19, 6) DEFAULT (0) NULL,
    [DATACALCCSTPREV]         DATETIME        NULL,
    [COSTOEFF]                DECIMAL (19, 6) DEFAULT (0) NULL,
    [COSTOUNITIMPEFF]         DECIMAL (19, 6) DEFAULT (0) NULL,
    [COSTOTOTIMPEFF]          DECIMAL (19, 6) DEFAULT (0) NULL,
    [COSTOEFFEURO]            DECIMAL (19, 6) DEFAULT (0) NULL,
    [COSTOUNITIMPEFFEURO]     DECIMAL (19, 6) DEFAULT (0) NULL,
    [COSTOTOTIMPEFFEURO]      DECIMAL (19, 6) DEFAULT (0) NULL,
    [DATACALCCSTEFF]          DATETIME        NULL,
    [DISEGNOALLEGATO]         VARCHAR (25)    NULL,
    [NUMCOMPONENTE]           VARCHAR (25)    NULL,
    [SEQASSEMBLAGGIO]         VARCHAR (25)    NULL,
    [NOTE]                    VARCHAR (255)   NULL,
    [DATAMODIFICA]            DATETIME        NOT NULL,
    [UTENTEMODIFICA]          VARCHAR (25)    NOT NULL,
    [QTARIBALTACOSTI]         VARCHAR (255)   DEFAULT ('1') NULL,
    [FLAGRIGA]                SMALLINT        DEFAULT (0) NULL,
    [QTAGESTIONETRASF]        NUMERIC (16, 6) DEFAULT (0) NULL,
    [RifCommCli]              VARCHAR (30)    NULL,
    [FLAGGESTIONEPARTITE]     SMALLINT        DEFAULT (0) NULL,
    [UM1MAG]                  VARCHAR (3)     NULL,
    [UM2MAG]                  VARCHAR (3)     NULL,
    [VERSIONEDBA]             VARCHAR (10)    NULL,
    [FLAGGESTIONEPARTITEPREC] SMALLINT        NULL,
    [QTASCARTO]               DECIMAL (16, 6) NULL,
    [UMSCARTO]                VARCHAR (3)     NULL,
    [RIFDISTINTA]             DECIMAL (10)    NULL,
    [RIFCOMPONENTE]           DECIMAL (10)    NULL,
    [FLGRICALCOLADATICLF]     SMALLINT        CONSTRAINT [DF_IMPEGNIORDPROD_FLGRICALCOLADATICLF] DEFAULT (0) NULL,
    [QTACALCRIBALTACOSTI]     DECIMAL (16, 6) DEFAULT ((1)) NULL,
    [flagPreparataMatMag]     SMALLINT        DEFAULT ((0)) NULL,
    [qtaPreparata]            DECIMAL (16, 6) DEFAULT ((0)) NULL,
    CONSTRAINT [PK_IMPEGNIORDPROD] PRIMARY KEY CLUSTERED ([IDTESTA] ASC, [IDRIGA] ASC, [IDIMPEGNO] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [CKC_OPERATORE_IMPEGNIO] CHECK ([OPERATORE] = '' or [OPERATORE] = '%' or [OPERATORE] = '/' or [OPERATORE] = '*' or [OPERATORE] = '-' or [OPERATORE] = '+'),
    CONSTRAINT [CKC_PARTITAVINCOLATA_IMPEGNIO] CHECK ([PARTITAVINCOLATA] = 0 or [PARTITAVINCOLATA] = 1),
    CONSTRAINT [CKC_QTA1MAGMAN_IMPEGNIO] CHECK ([QTA1MAGMAN] = 0 or [QTA1MAGMAN] = 1),
    CONSTRAINT [CKC_QTA2MAGMAN_IMPEGNIO] CHECK ([QTA2MAGMAN] = 0 or [QTA2MAGMAN] = 1),
    CONSTRAINT [CKC_QTAPREZZOMAN_IMPEGNIO] CHECK ([QTAPREZZOMAN] = 0 or [QTAPREZZOMAN] = 1),
    CONSTRAINT [CKC_STATOIMPEGNO_IMPEGNIO] CHECK ([STATOIMPEGNO] >= 0 and [STATOIMPEGNO] <= 2 and ([STATOIMPEGNO] = 2 or [STATOIMPEGNO] = 1 or [STATOIMPEGNO] = 0)),
    CONSTRAINT [CKC_TIPOIMPEGNO_IMPEGNIO] CHECK ([TIPOIMPEGNO] >= 0 and [TIPOIMPEGNO] <= 1 and ([TIPOIMPEGNO] = 1 or [TIPOIMPEGNO] = 0))
);


GO
CREATE TRIGGER TD_IMPEGNIORDPROD ON IMPEGNIORDPROD FOR DELETE AS
BEGIN
    DECLARE
       @NUMROWS  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    /*  DELETE ALL CHILDREN IN "PARTITEIMPEGNIORDPROD"  */
        DELETE PARTITEIMPEGNIORDPROD
        FROM   PARTITEIMPEGNIORDPROD T2, DELETED T1
        WHERE  T2.IDTESTA = T1.IDTESTA
         AND   T2.IDRIGA = T1.IDRIGA
         AND   T2.IDIMPEGNO = T1.IDIMPEGNO
    
    /*  DELETE ALL CHILDREN IN "RIGHEIMPPRODMATRICOLE"  */
    DELETE RIGHEIMPPRODMATRICOLE
    FROM   RIGHEIMPPRODMATRICOLE T2, DELETED T1
    WHERE  T2.IDTESTA = T1.IDTESTA
     AND   T2.IDRIGA = T1.IDRIGA
     AND   T2.IDIMPEGNO = T1.IDIMPEGNO

    /*  DELETE ALL CHILDREN IN "STORICOMAG"  */
    DELETE STORICOMAG
    FROM   STORICOMAG T2, DELETED T1
    WHERE  T2.IDTESTA = T1.IDTESTA
	 AND   T2.RIGADOC = T1.IDRIGA
     AND   T2.RIGACOMP = T1.IDIMPEGNO
	 AND   T2.TIPOMOV BETWEEN 7 AND 8

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

/*  INSERT TRIGGER "TI_IMPEGNIORDPROD" FOR TABLE "IMPEGNIORDPROD"  */
CREATE TRIGGER TI_IMPEGNIORDPROD ON IMPEGNIORDPROD FOR INSERT AS
BEGIN
    DECLARE
       @MAXCARD  INT,
       @NUMROWS  INT,
       @NUMNULL  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  PARENT "RIGHEORDPROD" MUST EXIST WHEN INSERTING A CHILD IN "IMPEGNIORDPROD"  */
    IF UPDATE(IDTESTA) OR
       UPDATE(IDRIGA)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   RIGHEORDPROD T1, INSERTED T2
           WHERE  T1.IDTESTA = T2.IDTESTA
            AND   T1.IDRIGA = T2.IDRIGA) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "RIGHEORDPROD". Cannot create child in "IMPEGNIORDPROD".'
             GOTO ERROR
          END
    END

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
CREATE TRIGGER TU_IMPEGNIORDPROD ON IMPEGNIORDPROD FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN

      
      /*  PARENT "RIGHEORDPROD" MUST EXIST WHEN UPDATING A CHILD IN "IMPEGNIORDPROD"  */
      IF UPDATE(IDTESTA) OR
         UPDATE(IDRIGA)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   RIGHEORDPROD T1, INSERTED T2
             WHERE  T1.IDTESTA = T2.IDTESTA
              AND   T1.IDRIGA = T2.IDRIGA) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"RIGHEORDPROD" does not exist. Cannot modify child in "IMPEGNIORDPROD".'
               GOTO ERROR
            END
      END
      
      /*  MODIFY PARENT CODE OF "IMPEGNIORDPROD" FOR ALL CHILDREN IN "PARTITEIMPEGNIORDPROD"  */
      IF UPDATE(IDTESTA) OR
         UPDATE(IDRIGA) OR
         UPDATE(IDIMPEGNO)
      BEGIN
         UPDATE PARTITEIMPEGNIORDPROD
          SET   IDTESTA = I1.IDTESTA,
                IDRIGA = I1.IDRIGA,
                IDIMPEGNO = I1.IDIMPEGNO
         FROM   PARTITEIMPEGNIORDPROD T2, INSERTED I1, DELETED D1
         WHERE  T2.IDTESTA = D1.IDTESTA
          AND   T2.IDRIGA = D1.IDRIGA
          AND   T2.IDIMPEGNO = D1.IDIMPEGNO
          AND  (I1.IDTESTA != D1.IDTESTA OR
                I1.IDRIGA != D1.IDRIGA OR
                I1.IDIMPEGNO != D1.IDIMPEGNO)
      END

      /*  MODIFY PARENT CODE OF "IMPEGNIORDPROD" FOR ALL CHILDREN IN "RIGHEIMPPRODMATRICOLE"  */
      IF UPDATE(IDTESTA) OR
         UPDATE(IDRIGA) OR
         UPDATE(IDIMPEGNO)
      BEGIN
         UPDATE RIGHEIMPPRODMATRICOLE
          SET   IDTESTA = I1.IDTESTA,
                IDRIGA = I1.IDRIGA,
                IDIMPEGNO = I1.IDIMPEGNO
         FROM   RIGHEIMPPRODMATRICOLE T2, INSERTED I1, DELETED D1
         WHERE  T2.IDTESTA = D1.IDTESTA
          AND   T2.IDRIGA = D1.IDRIGA
          AND   T2.IDIMPEGNO = D1.IDIMPEGNO
          AND  (I1.IDTESTA != D1.IDTESTA OR
                I1.IDRIGA != D1.IDRIGA OR
                I1.IDIMPEGNO != D1.IDIMPEGNO)
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
GRANT DELETE
    ON OBJECT::[dbo].[IMPEGNIORDPROD] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[IMPEGNIORDPROD] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[IMPEGNIORDPROD] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[IMPEGNIORDPROD] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[IMPEGNIORDPROD] TO [Metodo98]
    AS [dbo];

