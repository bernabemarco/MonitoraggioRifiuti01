CREATE TABLE [dbo].[FETS_TESTEIMPORTAZIONE] (
    [PROGRESSIVO]       DECIMAL (10)    NOT NULL,
    [IDTRASMITTENTE]    VARCHAR (50)    NOT NULL,
    [PROGRESSIVOINVIO]  VARCHAR (50)    NOT NULL,
    [IDPRESTATORE]      VARCHAR (50)    NOT NULL,
    [NOMEFILE]          VARCHAR (200)   NOT NULL,
    [TIPODOC]           VARCHAR (10)    NULL,
    [NUMERODOC]         VARCHAR (15)    NULL,
    [DATA]              DATETIME        NULL,
    [DIVISA]            VARCHAR (4)     NULL,
    [TIPOSCMAGG]        VARCHAR (100)   DEFAULT ('') NULL,
    [PERCSCMAGG]        VARCHAR (100)   DEFAULT ('') NULL,
    [IMPSCMAGG]         DECIMAL (19, 6) DEFAULT ((0)) NULL,
    [CODPAG]            VARCHAR (4)     DEFAULT ('') NULL,
    [METPROGRESSDOC]    DECIMAL (10)    DEFAULT ((0)) NULL,
    [STATO]             SMALLINT        DEFAULT ((0)) NULL,
    [PROGRESSELENCODOC] VARCHAR (50)    DEFAULT ('') NULL,
    [UTENTEMODIFICA]    VARCHAR (25)    NOT NULL,
    [DATAMODIFICA]      DATETIME        NOT NULL,
    [TOTIMPORTO]        DECIMAL (19, 6) NULL,
    PRIMARY KEY CLUSTERED ([PROGRESSIVO] ASC),
    CONSTRAINT [FK_FETS_TESTEIMPORTAZIONE_METPROGRESSDOC] FOREIGN KEY ([METPROGRESSDOC]) REFERENCES [dbo].[TESTEDOCUMENTI] ([PROGRESSIVO]) ON DELETE CASCADE ON UPDATE CASCADE
);


GO


CREATE TRIGGER TU_FETS_TESTEIMPORTAZIONE ON FETS_TESTEIMPORTAZIONE   FOR UPDATE AS
BEGIN

    DECLARE @NUMROWS  INT
        
    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN
        
       	UPDATE FETS_ELENCODOCUMENTI
		SET    FETS_ELENCODOCUMENTI.PROGRESSIVODOC   = I1.METPROGRESSDOC,
                       FETS_ELENCODOCUMENTI.STATO = (CASE WHEN I1.METPROGRESSDOC > 0 THEN 1 ELSE T1.STATO END) 
		FROM    INSERTED I1, FETS_ELENCODOCUMENTI T1
		WHERE  I1.PROGRESSELENCODOC  =T1.Progressivo 

    RETURN


END


GO


CREATE TRIGGER TI_FETS_TESTEIMPORTAZIONE ON FETS_TESTEIMPORTAZIONE FOR INSERT AS
BEGIN

    DECLARE @NUMROWS  INT
        
    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN
        
       	UPDATE FETS_ELENCODOCUMENTI
		SET    FETS_ELENCODOCUMENTI.PROGRESSIVODOC   = I1.METPROGRESSDOC, 
                       FETS_ELENCODOCUMENTI.STATO = (CASE WHEN I1.METPROGRESSDOC > 0 THEN 1 ELSE T1.STATO END)    
		FROM    INSERTED I1, FETS_ELENCODOCUMENTI T1
		WHERE  I1.PROGRESSELENCODOC  =T1.Progressivo 

    RETURN


END


GO


CREATE TRIGGER TD_FETS_TESTEIMPORTAZIONE ON FETS_TESTEIMPORTAZIONE FOR DELETE AS
BEGIN

    DECLARE @NUMROWS  INT
        
    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN
        
       	UPDATE FETS_ELENCODOCUMENTI
		SET    FETS_ELENCODOCUMENTI.PROGRESSIVODOC  = 0,
                       FETS_ELENCODOCUMENTI.STATO = 0
		FROM    DELETED  D1, FETS_ELENCODOCUMENTI T1
		WHERE  D1.PROGRESSELENCODOC  =T1.Progressivo 

    RETURN


END


GO
GRANT DELETE
    ON OBJECT::[dbo].[FETS_TESTEIMPORTAZIONE] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[FETS_TESTEIMPORTAZIONE] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[FETS_TESTEIMPORTAZIONE] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[FETS_TESTEIMPORTAZIONE] TO [Metodo98]
    AS [dbo];

