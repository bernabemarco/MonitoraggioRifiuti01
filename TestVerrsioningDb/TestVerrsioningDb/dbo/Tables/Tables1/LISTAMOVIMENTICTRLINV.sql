CREATE TABLE [dbo].[LISTAMOVIMENTICTRLINV] (
    [NOMEIMPOSTAZIONE] VARCHAR (80)    NOT NULL,
    [ARTICOLO]         VARCHAR (50)    NOT NULL,
    [NRRIFPARTITA]     VARCHAR (15)    NOT NULL,
    [UM]               VARCHAR (3)     NULL,
    [QUANTITA]         DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [GENERAMOVIMENTO]  SMALLINT        DEFAULT (0) NULL,
    [CODUBICAZIONE]    VARCHAR (10)    NOT NULL,
    [UTENTEMODIFICA]   VARCHAR (25)    NOT NULL,
    [DATAMODIFICA]     DATETIME        NOT NULL,
    CONSTRAINT [PK_LISTAMOVIMENTICTRLINV] PRIMARY KEY CLUSTERED ([NOMEIMPOSTAZIONE] ASC, [ARTICOLO] ASC, [NRRIFPARTITA] ASC, [CODUBICAZIONE] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [CKC_GENERAMOVIMENTO_LISTAMOV] CHECK ([GENERAMOVIMENTO] = 0 or [GENERAMOVIMENTO] = 1)
);


GO
CREATE NONCLUSTERED INDEX [MOVCTRLINV_CODARTICOLO]
    ON [dbo].[LISTAMOVIMENTICTRLINV]([ARTICOLO] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [MOVCTRLINV_NRRIFPARTITA]
    ON [dbo].[LISTAMOVIMENTICTRLINV]([NRRIFPARTITA] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [MOVCTRLINV_CODUBICAZIONE]
    ON [dbo].[LISTAMOVIMENTICTRLINV]([CODUBICAZIONE] ASC) WITH (FILLFACTOR = 90);


GO

/*  INSERT TRIGGER "TI_LISTAMOVIMENTICTRLINV" FOR TABLE "LISTAMOVIMENTICTRLINV"  */
CREATE TRIGGER TI_LISTAMOVIMENTICTRLINV ON LISTAMOVIMENTICTRLINV FOR INSERT AS
BEGIN
    DECLARE
       @MAXCARD  INT,
       @NUMROWS  INT,
       @NUMNULL  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  PARENT "IMPOSTAZIONICTRLINV" MUST EXIST WHEN INSERTING A CHILD IN "LISTAMOVIMENTICTRLINV"  */
    IF UPDATE(NOMEIMPOSTAZIONE)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   IMPOSTAZIONICTRLINV T1, INSERTED T2
           WHERE  T1.NOMEIMPOSTAZIONE = T2.NOMEIMPOSTAZIONE) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "IMPOSTAZIONICTRLINV". Cannot create child in "LISTAMOVIMENTICTRLINV".'
             GOTO ERROR
          END
    END

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

/*  UPDATE TRIGGER "TU_LISTAMOVIMENTICTRLINV" FOR TABLE "LISTAMOVIMENTICTRLINV"  */
CREATE TRIGGER TU_LISTAMOVIMENTICTRLINV ON LISTAMOVIMENTICTRLINV FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN

      
      /*  PARENT "IMPOSTAZIONICTRLINV" MUST EXIST WHEN UPDATING A CHILD IN "LISTAMOVIMENTICTRLINV"  */
      IF UPDATE(NOMEIMPOSTAZIONE)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   IMPOSTAZIONICTRLINV T1, INSERTED T2
             WHERE  T1.NOMEIMPOSTAZIONE = T2.NOMEIMPOSTAZIONE) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"IMPOSTAZIONICTRLINV" does not exist. Cannot modify child in "LISTAMOVIMENTICTRLINV".'
               GOTO ERROR
            END
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
GRANT DELETE
    ON OBJECT::[dbo].[LISTAMOVIMENTICTRLINV] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[LISTAMOVIMENTICTRLINV] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[LISTAMOVIMENTICTRLINV] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[LISTAMOVIMENTICTRLINV] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[LISTAMOVIMENTICTRLINV] TO [Metodo98]
    AS [dbo];

