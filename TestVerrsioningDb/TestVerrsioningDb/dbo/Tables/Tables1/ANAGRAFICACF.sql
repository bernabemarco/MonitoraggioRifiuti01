CREATE TABLE [dbo].[ANAGRAFICACF] (
    [TIPOCONTO]            CHAR (1)      DEFAULT ('C') NULL,
    [CODCONTO]             VARCHAR (7)   NOT NULL,
    [DSCCONTO1]            VARCHAR (80)  NULL,
    [DSCCONTO2]            VARCHAR (80)  NULL,
    [CODMASTRO]            DECIMAL (5)   NOT NULL,
    [INDIRIZZO]            VARCHAR (80)  NULL,
    [CAP]                  VARCHAR (8)   NULL,
    [LOCALITA]             VARCHAR (80)  NULL,
    [PROVINCIA]            VARCHAR (4)   NULL,
    [TELEFONO]             VARCHAR (25)  NULL,
    [FAX]                  VARCHAR (25)  NULL,
    [TELEX]                VARCHAR (255) NULL,
    [CODFISCALE]           VARCHAR (16)  NULL,
    [PARTITAIVA]           VARCHAR (12)  NULL,
    [CODNAZIONE]           DECIMAL (5)   NULL,
    [CODICEISO]            VARCHAR (3)   NULL,
    [CODLINGUA]            DECIMAL (5)   NULL,
    [TIPOPROFESSIONISTA]   DECIMAL (5)   NULL,
    [LUOGONASCITA]         VARCHAR (80)  NULL,
    [DATANASCITA]          DATETIME      NULL,
    [TIPODOCRTACC]         SMALLINT      NULL,
    [VERSPRESSO]           VARCHAR (80)  NULL,
    [NOTE]                 VARCHAR (255) NULL,
    [UTENTEMODIFICA]       VARCHAR (25)  NOT NULL,
    [DATAMODIFICA]         DATETIME      NOT NULL,
    [INDIRIZZOINTERNET]    VARCHAR (255) NULL,
    [INDIRIZZORITACC]      VARCHAR (80)  NULL,
    [LOCALITARITACC]       VARCHAR (80)  NULL,
    [PROVINCIARITACC]      VARCHAR (4)   NULL,
    [CAPRITACC]            VARCHAR (8)   NULL,
    [PARTITAIVARITACC]     VARCHAR (12)  NULL,
    [CODFISCALERITACC]     VARCHAR (16)  NULL,
    [ZonaSped]             VARCHAR (10)  NULL,
    [TipoClienteBudget]    VARCHAR (5)   CONSTRAINT [DF_ANAGRAFICACF_TIPOCLIENTEBUDGET] DEFAULT ('') NULL,
    [ConsideraBudget]      SMALLINT      CONSTRAINT [DF_ANAGRAFICACF_CONSIDERABUDGET] DEFAULT (0) NULL,
    [CODREGIONE]           VARCHAR (4)   NULL,
    [PERCORSODOCUMENTI]    VARCHAR (500) DEFAULT ('') NOT NULL,
    [FLGBLACKLIST]         SMALLINT      NULL,
    [FLGPERSFISICA]        SMALLINT      NULL,
    [DATANASCITAPERSFIS]   DATETIME      NULL,
    [COMNASCITAPERSFIS]    VARCHAR (80)  NULL,
    [PROVNASCITAPERSFIS]   VARCHAR (2)   NULL,
    [CODSTATOESTERO]       SMALLINT      NULL,
    [STATOPROVCONTEA]      VARCHAR (80)  NULL,
    [INDIRIZZOESTERO]      VARCHAR (80)  NULL,
    [COGNOMEPERSFIS]       VARCHAR (80)  NULL,
    [NOMEPERSFIS]          VARCHAR (80)  NULL,
    [FLGELENCOCF]          SMALLINT      NULL,
    [FLGSISTRI]            SMALLINT      CONSTRAINT [DF_ANAGRAFICACF_FLGSISTRI] DEFAULT ((0)) NOT NULL,
    [CODDEST_EDI]          VARCHAR (10)  CONSTRAINT [DF_ANAGRAFICACF_CODDEST_EDI] DEFAULT ('') NOT NULL,
    [FLGDOGANA]            SMALLINT      DEFAULT ((0)) NULL,
    [FLGQUALITY]           SMALLINT      CONSTRAINT [DF_ANAGRAFICACF_FLGQUALITY] DEFAULT ((0)) NOT NULL,
    [StatoIndicatore]      VARCHAR (1)   CONSTRAINT [DF_ANAGRAFICACF_StatoIndicatore] DEFAULT ('B') NOT NULL,
    [CODDESTINATARIOPA]    VARCHAR (7)   NULL,
    [CAUSALEPAGAMENTOPA]   VARCHAR (2)   NULL,
    [TIPOCASSAPA]          VARCHAR (4)   NULL,
    [RIFAMMINISTRAZIONEPA] VARCHAR (20)  NULL,
    [SESSOPERSFIS]         VARCHAR (1)   NULL,
    [CODIDENTIVAESTERO]    VARCHAR (25)  NULL,
    [FLGPUBBLICAAMM]       SMALLINT      DEFAULT ((0)) NULL,
    [INDIRIZZOSTABORG]     VARCHAR (60)  DEFAULT ('') NULL,
    [CAPSTABORG]           VARCHAR (5)   DEFAULT ('') NULL,
    [COMUNESTABORG]        VARCHAR (60)  DEFAULT ('') NULL,
    [PROVSTABORG]          VARCHAR (2)   NULL,
    [CODISOSTABORG]        VARCHAR (2)   DEFAULT ('') NULL,
    [CODISORAPPFISC]       VARCHAR (2)   NULL,
    [IDFISCALERAPPFISC]    VARCHAR (28)  DEFAULT ('') NULL,
    [FLGPERSFISRAPPFISC]   SMALLINT      DEFAULT ((0)) NULL,
    [RAGSOCRAPPFISC]       VARCHAR (80)  NULL,
    [NOMERAPPFISC]         VARCHAR (60)  NULL,
    [COGNOMERAPPFISC]      VARCHAR (60)  NULL,
    [PEC]                  VARCHAR (255) DEFAULT ('') NULL,
    CONSTRAINT [PK_ANAGRAFICACF] PRIMARY KEY CLUSTERED ([CODCONTO] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [CHK_ANAGRAFICACF_FLGBLACKLIST] CHECK ([FLGBLACKLIST]=(1) OR [FLGBLACKLIST]=(0)),
    CONSTRAINT [CHK_ANAGRAFICACF_FLGDOGANA] CHECK ([FLGDOGANA]=(1) OR [FLGDOGANA]=(0)),
    CONSTRAINT [CHK_ANAGRAFICACF_FLGELENCOCF] CHECK ([FLGELENCOCF]=(1) OR [FLGELENCOCF]=(0)),
    CONSTRAINT [CHK_ANAGRAFICACF_FLGPERSFISICA] CHECK ([FLGPERSFISICA]=(1) OR [FLGPERSFISICA]=(0)),
    CONSTRAINT [CHK_ANAGRAFICACF_FLGPUBBLICAAMM] CHECK ([FLGPUBBLICAAMM]=(1) OR [FLGPUBBLICAAMM]=(0)),
    CONSTRAINT [CKC_TIPOCONTO_ANAGRAFI] CHECK ([TIPOCONTO] = 'A' or [TIPOCONTO] = 'F' or [TIPOCONTO] = 'C'),
    CONSTRAINT [FK_ANAGRAFICACF_CODMASTRO] FOREIGN KEY ([CODMASTRO]) REFERENCES [dbo].[TABMASTRI] ([CODICE])
);


GO
CREATE NONCLUSTERED INDEX [DSCCONTO3]
    ON [dbo].[ANAGRAFICACF]([DSCCONTO1] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [CODMASTRO3]
    ON [dbo].[ANAGRAFICACF]([CODMASTRO] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [TIPOCONTO]
    ON [dbo].[ANAGRAFICACF]([TIPOCONTO] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [CODLINGUA]
    ON [dbo].[ANAGRAFICACF]([CODLINGUA] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [CODNAZIONECF]
    ON [dbo].[ANAGRAFICACF]([CODNAZIONE] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [PROVINCIACF]
    ON [dbo].[ANAGRAFICACF]([PROVINCIA] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [ALD_ANAGRAFICACF_RagCLIENTE]
    ON [dbo].[ANAGRAFICACF]([DSCCONTO1] ASC);


GO
CREATE NONCLUSTERED INDEX [ALD_ANAGRAFICACF_PIva]
    ON [dbo].[ANAGRAFICACF]([PARTITAIVA] ASC);


GO



/*  INSERT TRIGGER "ALD_TU_ANAGRCFMASTRO" FOR TABLE "ANAGRAFICACF"  */
CREATE TRIGGER [dbo].[ALD_TU_ANAGRCF_B2B] ON [dbo].[ANAGRAFICACF] FOR	UPDATE AS

BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN
      
    IF UPDATE(CODDESTINATARIOPA)--UPDATE(CODDESTINATARIOPA)
    BEGIN
	DELETE FROM  [dbo].[ALD_B2B_CLIENTI]  FROM [dbo].[ALD_B2B_CLIENTI] inner join INSERTED on ALD_B2B_CLIENTI.CODCONTO = INSERTED.CODCONTO and ALD_B2B_CLIENTI.[DESTINAZIONEDIVERSA]=0

      INSERT INTO [dbo].[ALD_B2B_CLIENTI]
           ([CODCONTO]
           ,[DESTINAZIONEDIVERSA]
           ,[TipoInstradamento]
           ,[PROGRESSIVOUFFICIO]
           ,[MAIL]
           ,[Utentemodifica]
           ,[Datamodifica],
		   ID)
		   SELECT  INSERTED.CODCONTO, 0, 3, 
		   (CASE WHEN isnull(CODDESTINATARIOPA,'')=''  OR (CODDESTINATARIOPA)='000000' THEN '0000000' ELSE CODDESTINATARIOPA END) as CODDESTINATARIOPA,Isnull(XC.MAILPEC,'') as Mail, INSERTED.UTENTEMODIFICA, INSERTED.DATAMODIFICA,
		   (select max(id) +1 from ALD_B2B_CLIENTI) as ID
		   FROM INSERTED 
		   left join EXTRACLIENTI XC on INSERTED.CODCONTO = XC.CODCONTO
		WHERE TIPOCONTO ='c'
    END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END


GO


/*  INSERT TRIGGER "ALD_TU_ANAGRCFMASTRO" FOR TABLE "ANAGRAFICACF"  */
CREATE TRIGGER [dbo].[ALD_TI_ANAGRCF_B2B] ON [dbo].[ANAGRAFICACF] FOR	INSERT AS

BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN
      
    IF UPDATE(CODCONTO)--UPDATE(CODDESTINATARIOPA)
    BEGIN
	--DELETE FROM  [dbo].[ALD_B2B_CLIENTI]  FROM [dbo].[ALD_B2B_CLIENTI] inner join INSERTED on ALD_B2B_CLIENTI.CODCONTO = INSERTED.CODCONTO and ALD_B2B_CLIENTI.[DESTINAZIONEDIVERSA]=0

      INSERT INTO [dbo].[ALD_B2B_CLIENTI]
           ([CODCONTO]
           ,[DESTINAZIONEDIVERSA]
           ,[TipoInstradamento]
           ,[PROGRESSIVOUFFICIO]
           ,[MAIL]
           ,[Utentemodifica]
           ,[Datamodifica],
		   ID)
		   SELECT  INSERTED.CODCONTO, 0, 3, 
		   (CASE WHEN isnull(CODDESTINATARIOPA,'')='' OR (CODDESTINATARIOPA)='000000'  THEN '0000000' ELSE CODDESTINATARIOPA END) as CODDESTINATARIOPA,''/*Isnull(XC.MAILPEC,'')*/ as Mail, INSERTED.UTENTEMODIFICA, INSERTED.DATAMODIFICA,
		   (select max(id) +1 from ALD_B2B_CLIENTI) as ID
		   FROM INSERTED 
		  -- left join EXTRACLIENTI XC on INSERTED.CODCONTO = XC.CODCONTO
		WHERE TIPOCONTO ='c'
    END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END


GO


/*  INSERT TRIGGER "ALD_TI_ANAGRCFMASTRO" FOR TABLE "ANAGRAFICACF"  */
CREATE TRIGGER [dbo].[ALD_TI_ANAGRCFMASTRO] ON [dbo].[ANAGRAFICACF] FOR INSERT AS
BEGIN
    DECLARE
       @MAXCARD  INT,
       @NUMROWS  INT,
       @NUMNULL  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)
    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN
    
    /* Controllo del codice mastro inserito che deve esistere nella lista mastri destinata per i clienti/fornitori */
    IF UPDATE(CODMASTRO)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   Ald_VistaMAstriCliFor T1, INSERTED T2
           WHERE  T1.CODICE = T2.CODMASTRO AND T1.TIPOCONTO = T2.TIPOCONTO) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 0,
                    @ERRMSG = ' ** OPERAZIONE ANNULLATA. MASTRO NON CONFORME AI MASTRI RIFERITI A CLIENTI/FORNITORI. CORREGGERE PER SALVARE L''ANAGRAFICA. ** '
		     GOTO ERROR
          END
    END

	  -- SARA 19/06/18
	  -- se il mastro ha è di tipo flgSplitPay =1 allora attivo lo SPLITPAYMENT
	  -- altrimenti lo tolgo
	  IF UPDATE(CODMASTRO)
      BEGIN
		 IF (SELECT top 1 flgSplitPay
             FROM   TABMASTRI T1, INSERTED T2
             WHERE  T1.CODICE = T2.CODMASTRO ) = 1
            BEGIN
               UPDATE ANAGRAFICARISERVATICF SET SPLITPAYMENT = 1  from ANAGRAFICARISERVATICF inner join INSERTED on  ANAGRAFICARISERVATICF.CODCONTO = INSERTED.[CODCONTO] where SPLITPAYMENT = 0
			END 
		ELSE 
		 BEGIN
               UPDATE ANAGRAFICARISERVATICF SET SPLITPAYMENT = 0  from ANAGRAFICARISERVATICF inner join INSERTED on  ANAGRAFICARISERVATICF.CODCONTO = INSERTED.[CODCONTO] where SPLITPAYMENT = 1 
		END
      END
       -- FINE SARA 19/06/18

    RETURN
/*  ERRORS HANDLING  */
ERROR:
    RAISERROR(@ERRMSG,1, 1)
    ROLLBACK  TRANSACTION
END
GO

/*  INSERT TRIGGER "ALD_TU_ANAGRCFMASTRO" FOR TABLE "ANAGRAFICACF"  */
CREATE TRIGGER [dbo].[ALD_TU_ANAGRCFMASTRO] ON [dbo].[ANAGRAFICACF] FOR	UPDATE AS

BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN
      
      /* Controllo del codice mastro inserito che deve esistere nella lista mastri destinata per i clienti/fornitori */
      IF UPDATE(CODMASTRO)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   Ald_VistaMAstriCliFor T1, INSERTED T2
             WHERE  T1.CODICE = T2.CODMASTRO AND T1.TIPOCONTO = T2.TIPOCONTO) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = ' ** CODICE MASTRO NON CONFORME. MODIFICA IMPOSSIBILE ** '
               GOTO ERROR
            END
      END
      
	  IF UPDATE(CODMASTRO)
      BEGIN
	  	INSERT INTO ALD_TEMP_ANAGRAFICACF(DATAAZIONE,CODCONTO,CODMASTROOLD,CODMASTRONEW,UTENTEMODIFICA,DATAMODIFICA)
		SELECT CONVERT (date, GETDATE()),I1.CODCONTO,D1.CODMASTRO,I1.CODMASTRO,I1.UTENTEMODIFICA,I1.DATAMODIFICA FROM INSERTED I1, DELETED D1
      END
      
	  -- SARA 19/06/18
	  -- se il mastro ha è di tipo flgSplitPay =1 allora attivo lo SPLITPAYMENT
	  -- altrimenti lo tolgo
	  -- SARA 28/08/18 : aggiunto anche il cambio CodIVA 
	  IF UPDATE(CODMASTRO)
      BEGIN
		 IF (SELECT flgSplitPay
             FROM   TABMASTRI T1, INSERTED T2
             WHERE  T1.CODICE = T2.CODMASTRO ) = 1
            BEGIN
               UPDATE ANAGRAFICARISERVATICF SET SPLITPAYMENT = 1, CODIVA=500  from ANAGRAFICARISERVATICF inner join INSERTED on  ANAGRAFICARISERVATICF.CODCONTO = INSERTED.[CODCONTO] where SPLITPAYMENT = 0
			END 
		ELSE 
		 BEGIN
               UPDATE ANAGRAFICARISERVATICF SET SPLITPAYMENT = 0, CODIVA=0  from ANAGRAFICARISERVATICF inner join INSERTED on  ANAGRAFICARISERVATICF.CODCONTO = INSERTED.[CODCONTO] where SPLITPAYMENT = 1 
		END
      END
       -- FINE SARA 19/06/18

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO





CREATE TRIGGER [dbo].[TD_ANAGRAFICACF_GemmaEvolus] ON [dbo].[ANAGRAFICACF] FOR DELETE AS

BEGIN

    DECLARE

       @NUMROWS  INT,

       @ERRNO    INT,

       @ERRMSG   VARCHAR(255)



    SELECT  @NUMROWS = @@ROWCOUNT

    IF @NUMROWS = 0

       RETURN



   

    /*  CANNOT DELETE PARENT "ANAGRAFICACF" IF CHILDREN STILL EXIST IN "ListiniContratti"  */

    IF EXISTS (SELECT 1

               FROM   GEM_ListiniContratti T2, DELETED T1

               WHERE  T2.CodCliente = T1.CODCONTO)

       BEGIN

          SELECT @ERRNO  = 30006,

                 @ERRMSG = ' Esistono record nella tabella "ListiniContratti GemmaEvolus". Non è possibile cancellare il codice dalla tabella "ANAGRAFICACF".'

          GOTO ERROR

       END

    

      /*  CANNOT DELETE PARENT "ANAGRAFICACF" IF CHILDREN STILL EXIST IN "GEM_TESTACONTRATTO"  */

    IF EXISTS (SELECT 1

               FROM   GEM_TESTACONTRATTO T2, DELETED T1

               WHERE  T2.CodCliente = T1.CODCONTO)

       BEGIN

          SELECT @ERRNO  = 30006,

                 @ERRMSG = 'Esistono record nella tabella "TESTA CONTRATTO GemmaEvolus". Non è possibile cancellare il codice dalla tabella "ANAGRAFICACF".'

          GOTO ERROR

       END    



    RETURN



/*  ERRORS HANDLING  */

ERROR:

    RAISERROR (@ERRMSG, 1, 1)

    ROLLBACK  TRANSACTION

END


GO

 

/*  DELETE TRIGGER "ALD_TD_TestCancAnagraficaCF" FOR TABLE "ANAGRAFICACF"  */

CREATE TRIGGER [dbo].[ALD_TD_TestCancAnagraficaCF] ON [dbo].[ANAGRAFICACF] FOR DELETE AS

BEGIN

    DECLARE

       @NUMROWS  INT,

       @ERRNO    INT,

       @ERRMSG   VARCHAR(255)

 

    SELECT  @NUMROWS = @@ROWCOUNT

    IF @NUMROWS = 0

       RETURN

    

    /*  Accoda record testa cancellata su tbl temporanea ALD_TestCancTesteDoc*/

    insert into ALD_TestCancAnagraficaCF (CODCONTO, DescrAzione, UTENTEMODIFICA, DATAMODIFICA)

   select CODCONTO, 'cancellazione Anagrafica', user, GETDATE()

    FROM   DELETED T1  

 

    RETURN

 

/*  ERRORS HANDLING  */

ERROR:

    RAISERROR (@ERRMSG, 1, 1)

    ROLLBACK  TRANSACTION

END


GO

/*  INSERT TRIGGER "ALD_TU_ANAGRCFMASTRO" FOR TABLE "ANAGRAFICACF"  */
CREATE TRIGGER [dbo].[ALD_TD_ANAGRCF_B2B] ON [dbo].[ANAGRAFICACF] FOR	DELETE AS

BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN
      
   
	DELETE FROM  [dbo].[ALD_B2B_CLIENTI]  FROM [dbo].[ALD_B2B_CLIENTI] inner join deleted on ALD_B2B_CLIENTI.CODCONTO = deleted.CODCONTO 

    

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END


GO
GRANT DELETE
    ON OBJECT::[dbo].[ANAGRAFICACF] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[ANAGRAFICACF] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[ANAGRAFICACF] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[ANAGRAFICACF] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[ANAGRAFICACF] TO [Metodo98]
    AS [dbo];

