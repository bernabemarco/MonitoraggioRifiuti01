CREATE TABLE [dbo].[ANAGRAFICAARTICOLI] (
    [CODICE]                  VARCHAR (50)    NOT NULL,
    [DESCRIZIONE]             VARCHAR (255)   NULL,
    [GRUPPO]                  DECIMAL (5)     NULL,
    [CATEGORIA]               DECIMAL (5)     NULL,
    [CODCATEGORIASTAT]        DECIMAL (5)     NULL,
    [PESONETTO]               DECIMAL (16, 6) DEFAULT (0) NULL,
    [SUPERFICIE]              DECIMAL (16, 6) DEFAULT (0) NULL,
    [CUBATURA]                DECIMAL (16, 6) DEFAULT (0) NULL,
    [NOMENCLCOMBINATA1]       VARCHAR (8)     NULL,
    [NOMENCLCOMBINATA2]       VARCHAR (8)     NULL,
    [ORIGINEINTRA]            VARCHAR (3)     NULL,
    [CODICEARTIMBALLO]        VARCHAR (50)    NULL,
    [NRPEZZIIMBALLO]          DECIMAL (16, 6) DEFAULT (0) NULL,
    [RIFERIMIMBALLO]          VARCHAR (10)    NULL,
    [AGGIORNAMAG]             SMALLINT        DEFAULT (0) NULL,
    [MOVIMENTAPARTITE]        SMALLINT        DEFAULT (0) NULL,
    [MOVIMENTAMATRICOLE]      SMALLINT        DEFAULT (0) NULL,
    [CODDEPOSITO]             VARCHAR (10)    NOT NULL,
    [NRTIPRAGGRUPPATE]        SMALLINT        DEFAULT (0) NULL,
    [VARESPLICITE]            VARCHAR (255)   CONSTRAINT [DF_AnagraficaArticoli_VARESPLICITE] DEFAULT ('') NULL,
    [CODICEPRIMARIO]          VARCHAR (50)    NULL,
    [ARTTIPOLOGIA]            SMALLINT        DEFAULT (0) NULL,
    [UTENTEMODIFICA]          VARCHAR (25)    NOT NULL,
    [DATAMODIFICA]            DATETIME        NOT NULL,
    [ARTCONFIGURATO]          SMALLINT        CONSTRAINT [DF_AnagraficaArticoli_ARTCONFIGURATO] DEFAULT (0) NULL,
    [DESCRESTESA]             VARCHAR (3000)  NULL,
    [SERIE]                   VARCHAR (20)    NULL,
    [MODELLO]                 VARCHAR (20)    NULL,
    [ModelloBudget]           VARCHAR (5)     CONSTRAINT [DF_ANAGRART_MODELLOBUDGET] DEFAULT ('') NULL,
    [TipologiaProdotto]       VARCHAR (5)     CONSTRAINT [DF_ANAGRART_TIPOLOGIAPRODOTTO] DEFAULT ('') NULL,
    [APPLICAMAGGIORAZIONI]    SMALLINT        CONSTRAINT [DF_ANAGRART_APPLICAMAGG] DEFAULT (0) NULL,
    [PRODIGIOUSAPREZZIMETODO] SMALLINT        CONSTRAINT [DF_ANAGRAFICAARTICOLI_PRODIGIOUSAPREZZIMETODO] DEFAULT (0) NULL,
    [PRODIGIORAGGRCODICE]     SMALLINT        CONSTRAINT [DF_ANAGRAFICAARTICOLI_PRODIGIORAGGRCODICE] DEFAULT (0) NULL,
    [PRODIGIOUSADESCRMETODO]  SMALLINT        CONSTRAINT [DF_ANAGRAFICAARTICOLI_PRODIGIOUSADESCRMETODO] DEFAULT (0) NULL,
    [PRODIGIOESCLUDIBOX]      SMALLINT        CONSTRAINT [DF_ANAGRAFICAARTICOLI_PRODIGIOESCLUDIBOX] DEFAULT (0) NULL,
    [TIPOINTRA]               SMALLINT        NULL,
    [CODSERVIZIOINTRA]        VARCHAR (6)     NULL,
    [MODEROGAZINTRA]          VARCHAR (1)     NULL,
    [FLGSISTRI]               SMALLINT        CONSTRAINT [DF_ANAGRAFICAARTICOLI_FLGSISTRI] DEFAULT ((0)) NOT NULL,
    [TIPART62]                SMALLINT        DEFAULT ((0)) NULL,
    [UMSUPPLNOMCOMB1]         VARCHAR (3)     NULL,
    [FLGQUALITY]              SMALLINT        CONSTRAINT [DF_ANAGRAFICAARTICOLI_FLGQUALITY] DEFAULT ((0)) NOT NULL,
    [FAMIGLIAQUALITY]         VARCHAR (50)    NULL,
    [TIP_RAGGR1]              VARCHAR (3)     DEFAULT ('') NULL,
    [TIP_RAGGR2]              VARCHAR (3)     DEFAULT ('') NULL,
    [TIP_CONTATORE]           VARCHAR (3)     DEFAULT ('') NULL,
    [CODFEATURE]              INT             DEFAULT ((0)) NULL,
    CONSTRAINT [PK_ANAGRAFICAARTICOLI] PRIMARY KEY CLUSTERED ([CODICE] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [CHK_ANAART_TIPOINTRA] CHECK ([TIPOINTRA]=(2) OR [TIPOINTRA]=(1) OR [TIPOINTRA]=(0)),
    CONSTRAINT [CHK_ARTCONFIGURATO] CHECK ([ARTCONFIGURATO] = 1 or [ARTCONFIGURATO] = 0),
    CONSTRAINT [CKC_AGGIORNAMAG_ANAGRAFI] CHECK ([AGGIORNAMAG] = 0 or [AGGIORNAMAG] = 1),
    CONSTRAINT [CKC_ARTTIPOLOGIA_ANAGRAFI] CHECK ([ARTTIPOLOGIA] = 0 or [ARTTIPOLOGIA] = 1),
    CONSTRAINT [CKC_MOVIMENTAMATRICOL_ANAGRAFI] CHECK ([MOVIMENTAMATRICOLE] = 0 or [MOVIMENTAMATRICOLE] = 1),
    CONSTRAINT [CKC_MOVIMENTAPARTITE_ANAGRAFI] CHECK ([MOVIMENTAPARTITE] = 0 or [MOVIMENTAPARTITE] = 1)
);


GO
CREATE NONCLUSTERED INDEX [ANAGARFCIADEP_FK]
    ON [dbo].[ANAGRAFICAARTICOLI]([CODDEPOSITO] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [DSCARTICOLO]
    ON [dbo].[ANAGRAFICAARTICOLI]([DESCRIZIONE] ASC);


GO
CREATE NONCLUSTERED INDEX [GRUPPO]
    ON [dbo].[ANAGRAFICAARTICOLI]([GRUPPO] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [CATEGORIA]
    ON [dbo].[ANAGRAFICAARTICOLI]([CATEGORIA] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [CATEGORIASTAT]
    ON [dbo].[ANAGRAFICAARTICOLI]([CODCATEGORIASTAT] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [NOMENCLATURA1]
    ON [dbo].[ANAGRAFICAARTICOLI]([NOMENCLCOMBINATA1] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [NOMENCLATURA2]
    ON [dbo].[ANAGRAFICAARTICOLI]([NOMENCLCOMBINATA2] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [CODPRIMARIO]
    ON [dbo].[ANAGRAFICAARTICOLI]([CODICEPRIMARIO] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [CODARTIMBALLO]
    ON [dbo].[ANAGRAFICAARTICOLI]([CODICEARTIMBALLO] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [CODIMBALLO]
    ON [dbo].[ANAGRAFICAARTICOLI]([RIFERIMIMBALLO] ASC) WITH (FILLFACTOR = 90);


GO

CREATE TRIGGER TD_CancellaLogisticaArticoli ON ANAGRAFICAARTICOLI FOR DELETE AS
BEGIN
       

    DELETE GstMag_LogisticaArticoliTeste
    FROM   GstMag_LogisticaArticoliTeste T2, DELETED T1
    WHERE  T2.CODART = T1.CODICE
    
    DELETE GstMag_LogisticaArticoli
    FROM   GstMag_LogisticaArticoli T2, DELETED T1
    WHERE  T2.CODART = T1.CODICE 


END


GO

/*  INSERT TRIGGER "TI_ANAGRAFICAARTICOLI" FOR TABLE "ANAGRAFICAARTICOLI"  */
CREATE TRIGGER TI_ANAGRAFICAARTICOLI ON ANAGRAFICAARTICOLI FOR INSERT AS
BEGIN
    DECLARE
       @MAXCARD  INT,
       @NUMROWS  INT,
       @NUMNULL  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  PARENT "ANAGRAFICADEPOSITI" MUST EXIST WHEN INSERTING A CHILD IN "ANAGRAFICAARTICOLI"  */
    IF UPDATE(CODDEPOSITO)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   ANAGRAFICADEPOSITI T1, INSERTED T2
           WHERE  T1.CODICE = T2.CODDEPOSITO) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "ANAGRAFICADEPOSITI". Cannot create child in "ANAGRAFICAARTICOLI".'
             GOTO ERROR
          END
    END

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
CREATE TRIGGER EliminaArtTP_Extramag ON ANAGRAFICAARTICOLI 
FOR DELETE 
AS

   begin	
    DELETE TP_EXTRAMAG
    FROM   TP_EXTRAMAG T2, DELETED T1
    WHERE  T2.CODART = T1.CODICE
    end


GO
/*  Cancella i sinonimi al cancellare di un Articolo  */
CREATE TRIGGER TP_CancellaSinonimi 
ON ANAGRAFICAARTICOLI FOR DELETE 
AS
BEGIN

    DELETE TP_SINONIMI
    FROM   TP_SINONIMI T2, DELETED T1
    WHERE  T2.CODICE = T1.CODICE
    
END

GO

CREATE TRIGGER TD_ANAGRAFICAARTICOLI ON ANAGRAFICAARTICOLI FOR DELETE AS
BEGIN
    DECLARE
       @NUMROWS  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN
    
    /*  CANNOT DELETE PARENT "ANAGRAFICAARTICOLI" IF CHILDREN STILL EXIST IN "STORICOMAG"  */
    IF EXISTS (SELECT 1
               FROM   STORICOMAG T2, DELETED T1
               WHERE  T2.CODART = T1.CODICE)
       BEGIN
          SELECT @ERRNO  = 30006,
                 @ERRMSG = 'Children still exist in "STORICOMAG". Cannot delete parent "ANAGRAFICAARTICOLI".'
          GOTO ERROR
       END
    
    /*  DELETE ALL CHILDREN IN "ANAGRAFICAARTICOLICOMM"  */
    DELETE ANAGRAFICAARTICOLICOMM
    FROM   ANAGRAFICAARTICOLICOMM T2, DELETED T1
    WHERE  T2.CODICEART = T1.CODICE
    
    /*  DELETE ALL CHILDREN IN "ANAGRAFICAARTICOLIPROD"  */
    DELETE ANAGRAFICAARTICOLIPROD
    FROM   ANAGRAFICAARTICOLIPROD T2, DELETED T1
    WHERE  T2.CODICEART = T1.CODICE
    
    /*  DELETE ALL CHILDREN IN "TABLOTTIRIORDINO"  */
    DELETE TABLOTTIRIORDINO
    FROM   TABLOTTIRIORDINO T2, DELETED T1
    WHERE  T2.CODART = T1.CODICE
    
    /*  DELETE ALL CHILDREN IN "EXTRAMAG"  */
    DELETE EXTRAMAG
    FROM   EXTRAMAG T2, DELETED T1
    WHERE  T2.CODART = T1.CODICE
    
    /*  DELETE ALL CHILDREN IN "DESCRARTICOLI"  */
    DELETE DESCRARTICOLI
    FROM   DESCRARTICOLI T2, DELETED T1
    WHERE  T2.CODICEART = T1.CODICE
    
    /*  DELETE ALL CHILDREN IN "LIFOARTICOLI"  */
    DELETE LIFOARTICOLI
    FROM   LIFOARTICOLI T2, DELETED T1
    WHERE  T2.CODICEART = T1.CODICE
    
    /*  DELETE ALL CHILDREN IN "LISTINIARTICOLI"  */
    DELETE LISTINIARTICOLI
    FROM   LISTINIARTICOLI T2, DELETED T1
    WHERE  T2.CODART = T1.CODICE
    
    /*  DELETE ALL CHILDREN IN "LISTINIARTICOLITRASF"  */
    DELETE LISTINIARTICOLITRASF
    FROM   LISTINIARTICOLITRASF T2, DELETED T1
    WHERE  T2.CODART = T1.CODICE
    
    /*  DELETE ALL CHILDREN IN "TIPOLOGIEARTICOLI"  */
    DELETE TIPOLOGIEARTICOLI
    FROM   TIPOLOGIEARTICOLI T2, DELETED T1
    WHERE  T2.CODICEART = T1.CODICE
    
    /*  DELETE ALL CHILDREN IN "VARIANTIARTICOLI"  */
    DELETE VARIANTIARTICOLI
    FROM   VARIANTIARTICOLI T2, DELETED T1
    WHERE  T2.CODICEART = T1.CODICE
    
    /*  DELETE ALL CHILDREN IN "ANAGRAFICALOTTI"  */
    DELETE ANAGRAFICALOTTI
    FROM   ANAGRAFICALOTTI T2, DELETED T1
    WHERE  T2.CODARTICOLO = T1.CODICE
    
    /*  DELETE ALL CHILDREN IN "UBICAZIONIARTICOLI"  */
    DELETE UBICAZIONIARTICOLI
    FROM   UBICAZIONIARTICOLI T2, DELETED T1
    WHERE  T2.CODICEART = T1.CODICE
    
    /*  DELETE ALL CHILDREN IN "ARTICOLIUNITAMISURA"  */
    DELETE ARTICOLIUNITAMISURA
    FROM   ARTICOLIUNITAMISURA T2, DELETED T1
    WHERE  T2.CODART = T1.CODICE
    
    /*  DELETE ALL CHILDREN IN "CODICIEQUIVALENTI"  */
    DELETE CODICIEQUIVALENTI
    FROM   CODICIEQUIVALENTI T2, DELETED T1
    WHERE  T2.CODICEART = T1.CODICE

    /*  DELETE ALL CHILDREN IN "TABMAGGIORAZVAR"  */
    DELETE TABMAGGIORAZVAR
    FROM   TABMAGGIORAZVAR T2, DELETED T1
    WHERE  T2.ARTICOLO = T1.CODICE

    /*  DELETE ALL CHILDREN IN "TP_GIAC_COLOR"*/
    DELETE TP_GIAC_COLOR
    FROM   TP_GIAC_COLOR T2, DELETED T1
    WHERE  T2.CODART = T1.CODICE 

	/*  DELETE ALL CHILDREN IN "Tp_LivelliArticoli"*/
    DELETE Tp_LivelliArticoli
    FROM   Tp_LivelliArticoli T2, DELETED T1
    WHERE  T2.Codice = T1.CODICE 

	/*  DELETE ALL CHILDREN IN "BarcodePOS"*/
    DELETE BarcodePOS
    FROM   BarcodePOS T2, DELETED T1
    WHERE  T2.CodArt = T1.CODICE 

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

CREATE TRIGGER TU_ANAGRAFICAARTICOLI ON ANAGRAFICAARTICOLI FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN
      
      /*  PARENT "ANAGRAFICADEPOSITI" MUST EXIST WHEN UPDATING A CHILD IN "ANAGRAFICAARTICOLI"  */
      IF UPDATE(CODDEPOSITO)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   ANAGRAFICADEPOSITI T1, INSERTED T2
             WHERE  T1.CODICE = T2.CODDEPOSITO) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"ANAGRAFICADEPOSITI" does not exist. Cannot modify child in "ANAGRAFICAARTICOLI".'
               GOTO ERROR
            END
      END
      
      /*  CANNOT MODIFY PARENT CODE IN "ANAGRAFICAARTICOLI" IF CHILDREN STILL EXIST IN "STORICOMAG"  */
      IF UPDATE(CODICE)
      BEGIN
         IF EXISTS (SELECT 1
                    FROM   STORICOMAG T2, INSERTED I1, DELETED D1
                    WHERE  T2.CODART = D1.CODICE
                     AND  (I1.CODICE != D1.CODICE))
            BEGIN
               SELECT @ERRNO  = 30005,
                      @ERRMSG = 'Children still exist in "STORICOMAG". Cannot modify parent code in "ANAGRAFICAARTICOLI".'
               GOTO ERROR
            END
      END
      
      /*  MODIFY PARENT CODE OF "ANAGRAFICAARTICOLI" FOR ALL CHILDREN IN "ANAGRAFICAARTICOLICOMM"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE ANAGRAFICAARTICOLICOMM
          SET   CODICEART = I1.CODICE
         FROM   ANAGRAFICAARTICOLICOMM T2, INSERTED I1, DELETED D1
         WHERE  T2.CODICEART = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END
      
      /*  MODIFY PARENT CODE OF "ANAGRAFICAARTICOLI" FOR ALL CHILDREN IN "ANAGRAFICAARTICOLIPROD"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE ANAGRAFICAARTICOLIPROD
          SET   CODICEART = I1.CODICE
         FROM   ANAGRAFICAARTICOLIPROD T2, INSERTED I1, DELETED D1
         WHERE  T2.CODICEART = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END
      
      /*  MODIFY PARENT CODE OF "ANAGRAFICAARTICOLI" FOR ALL CHILDREN IN "TABLOTTIRIORDINO"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE TABLOTTIRIORDINO
          SET   CODART = I1.CODICE
         FROM   TABLOTTIRIORDINO T2, INSERTED I1, DELETED D1
         WHERE  T2.CODART = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END
      
      /*  MODIFY PARENT CODE OF "ANAGRAFICAARTICOLI" FOR ALL CHILDREN IN "EXTRAMAG"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE EXTRAMAG
          SET   CODART = I1.CODICE
         FROM   EXTRAMAG T2, INSERTED I1, DELETED D1
         WHERE  T2.CODART = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END
      
      /*  MODIFY PARENT CODE OF "ANAGRAFICAARTICOLI" FOR ALL CHILDREN IN "DESCRARTICOLI"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE DESCRARTICOLI
          SET   CODICEART = I1.CODICE
         FROM   DESCRARTICOLI T2, INSERTED I1, DELETED D1
         WHERE  T2.CODICEART = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END
      
      /*  MODIFY PARENT CODE OF "ANAGRAFICAARTICOLI" FOR ALL CHILDREN IN "LIFOARTICOLI"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE LIFOARTICOLI
          SET   CODICEART = I1.CODICE
         FROM   LIFOARTICOLI T2, INSERTED I1, DELETED D1
         WHERE  T2.CODICEART = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END
      
      /*  MODIFY PARENT CODE OF "ANAGRAFICAARTICOLI" FOR ALL CHILDREN IN "LISTINIARTICOLI"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE LISTINIARTICOLI
          SET   CODART = I1.CODICE
         FROM   LISTINIARTICOLI T2, INSERTED I1, DELETED D1
         WHERE  T2.CODART = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END

	  /*  MODIFY PARENT CODE OF "ANAGRAFICAARTICOLI" FOR ALL CHILDREN IN "LISTINIARTICOLITRASF"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE LISTINIARTICOLITRASF
          SET   CODART = I1.CODICE
         FROM   LISTINIARTICOLITRASF T2, INSERTED I1, DELETED D1
         WHERE  T2.CODART = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END
      
      /*  MODIFY PARENT CODE OF "ANAGRAFICAARTICOLI" FOR ALL CHILDREN IN "TIPOLOGIEARTICOLI"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE TIPOLOGIEARTICOLI
          SET   CODICEART = I1.CODICE
         FROM   TIPOLOGIEARTICOLI T2, INSERTED I1, DELETED D1
         WHERE  T2.CODICEART = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END
      
      /*  MODIFY PARENT CODE OF "ANAGRAFICAARTICOLI" FOR ALL CHILDREN IN "VARIANTIARTICOLI"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE VARIANTIARTICOLI
          SET   CODICEART = I1.CODICE
         FROM   VARIANTIARTICOLI T2, INSERTED I1, DELETED D1
         WHERE  T2.CODICEART = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END
      
      /*  MODIFY PARENT CODE OF "ANAGRAFICAARTICOLI" FOR ALL CHILDREN IN "ANAGRAFICALOTTI"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE ANAGRAFICALOTTI
          SET   CODARTICOLO = I1.CODICE
         FROM   ANAGRAFICALOTTI T2, INSERTED I1, DELETED D1
         WHERE  T2.CODARTICOLO = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END
      
      /*  MODIFY PARENT CODE OF "ANAGRAFICAARTICOLI" FOR ALL CHILDREN IN "UBICAZIONIARTICOLI"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE UBICAZIONIARTICOLI
          SET   CODICEART = I1.CODICE
         FROM   UBICAZIONIARTICOLI T2, INSERTED I1, DELETED D1
         WHERE  T2.CODICEART = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END
      
      /*  MODIFY PARENT CODE OF "ANAGRAFICAARTICOLI" FOR ALL CHILDREN IN "ARTICOLIUNITAMISURA"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE ARTICOLIUNITAMISURA
          SET   CODART = I1.CODICE
         FROM   ARTICOLIUNITAMISURA T2, INSERTED I1, DELETED D1
         WHERE  T2.CODART = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END
      
      /*  MODIFY PARENT CODE OF "ANAGRAFICAARTICOLI" FOR ALL CHILDREN IN "CODICIEQUIVALENTI"  */
      IF UPDATE(CODICE)
      BEGIN
         UPDATE CODICIEQUIVALENTI
          SET   CODICEART = I1.CODICE
         FROM   CODICIEQUIVALENTI T2, INSERTED I1, DELETED D1
         WHERE  T2.CODICEART = D1.CODICE
          AND  (I1.CODICE != D1.CODICE)
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
GRANT DELETE
    ON OBJECT::[dbo].[ANAGRAFICAARTICOLI] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[ANAGRAFICAARTICOLI] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[ANAGRAFICAARTICOLI] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[ANAGRAFICAARTICOLI] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[ANAGRAFICAARTICOLI] TO [Metodo98]
    AS [dbo];

