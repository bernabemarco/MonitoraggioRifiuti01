CREATE TABLE [dbo].[UBICAZIONIARTICOLI] (
    [CODICEART]      VARCHAR (50)    NOT NULL,
    [CODDEPOSITO]    VARCHAR (10)    NOT NULL,
    [CODUBICAZIONE]  VARCHAR (10)    NOT NULL,
    [NRRIGA]         SMALLINT        NOT NULL,
    [QTAMIN]         DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [QTAMAX]         DECIMAL (16, 6) DEFAULT (0) NOT NULL,
    [UTENTEMODIFICA] VARCHAR (25)    NOT NULL,
    [DATAMODIFICA]   DATETIME        NOT NULL,
    CONSTRAINT [PK_UBICAZIONIARTICOLI] PRIMARY KEY CLUSTERED ([CODICEART] ASC, [CODDEPOSITO] ASC, [CODUBICAZIONE] ASC, [NRRIGA] ASC) WITH (FILLFACTOR = 90)
);


GO
CREATE NONCLUSTERED INDEX [UBICAZ_DEPOSITO]
    ON [dbo].[UBICAZIONIARTICOLI]([CODDEPOSITO] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [UBICAZ_UBICAZ]
    ON [dbo].[UBICAZIONIARTICOLI]([CODUBICAZIONE] ASC) WITH (FILLFACTOR = 90);


GO

/*  UPDATE TRIGGER "TU_UBICAZIONIARTICOLI" FOR TABLE "UBICAZIONIARTICOLI"  */
CREATE TRIGGER TU_UBICAZIONIARTICOLI ON UBICAZIONIARTICOLI FOR UPDATE AS
BEGIN
   DECLARE
      @MAXCARD  INT,
      @NUMROWS  INT,
      @NUMNULL  INT,
      @ERRNO    INT,
      @ERRMSG   VARCHAR(255)

      SELECT  @NUMROWS = @@ROWCOUNT
      IF @NUMROWS = 0
         RETURN

      
      /*  PARENT "ANAGRAFICAARTICOLI" MUST EXIST WHEN UPDATING A CHILD IN "UBICAZIONIARTICOLI"  */
      IF UPDATE(CODICEART)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   ANAGRAFICAARTICOLI T1, INSERTED T2
             WHERE  T1.CODICE = T2.CODICEART) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"ANAGRAFICAARTICOLI" does not exist. Cannot modify child in "UBICAZIONIARTICOLI".'
               GOTO ERROR
            END
      END
      
      /*  PARENT "TABUBICAZIONIDEPOSITI" MUST EXIST WHEN UPDATING A CHILD IN "UBICAZIONIARTICOLI"  */
      IF UPDATE(CODDEPOSITO) OR
         UPDATE(CODUBICAZIONE)
      BEGIN
         IF (SELECT COUNT(*)
             FROM   TABUBICAZIONIDEPOSITI T1, INSERTED T2
             WHERE  T1.CODDEPOSITO = T2.CODDEPOSITO
              AND   T1.CODUBICAZIONE = T2.CODUBICAZIONE) != @NUMROWS
            BEGIN
               SELECT @ERRNO  = 30003,
                      @ERRMSG = '"TABUBICAZIONIDEPOSITI" does not exist. Cannot modify child in "UBICAZIONIARTICOLI".'
               GOTO ERROR
            END
      END

      RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO

/*  INSERT TRIGGER "TI_UBICAZIONIARTICOLI" FOR TABLE "UBICAZIONIARTICOLI"  */
CREATE TRIGGER TI_UBICAZIONIARTICOLI ON UBICAZIONIARTICOLI FOR INSERT AS
BEGIN
    DECLARE
       @MAXCARD  INT,
       @NUMROWS  INT,
       @NUMNULL  INT,
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

    
    /*  PARENT "ANAGRAFICAARTICOLI" MUST EXIST WHEN INSERTING A CHILD IN "UBICAZIONIARTICOLI"  */
    IF UPDATE(CODICEART)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   ANAGRAFICAARTICOLI T1, INSERTED T2
           WHERE  T1.CODICE = T2.CODICEART) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "ANAGRAFICAARTICOLI". Cannot create child in "UBICAZIONIARTICOLI".'
             GOTO ERROR
          END
    END
    
    /*  PARENT "TABUBICAZIONIDEPOSITI" MUST EXIST WHEN INSERTING A CHILD IN "UBICAZIONIARTICOLI"  */
    IF UPDATE(CODDEPOSITO) OR
       UPDATE(CODUBICAZIONE)
    BEGIN
       IF (SELECT COUNT(*)
           FROM   TABUBICAZIONIDEPOSITI T1, INSERTED T2
           WHERE  T1.CODDEPOSITO = T2.CODDEPOSITO
            AND   T1.CODUBICAZIONE = T2.CODUBICAZIONE) != @NUMROWS
          BEGIN
             SELECT @ERRNO  = 30002,
                    @ERRMSG = 'Parent does not exist in "TABUBICAZIONIDEPOSITI". Cannot create child in "UBICAZIONIARTICOLI".'
             GOTO ERROR
          END
    END

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    RAISERROR (@ERRMSG, 1, 1)
    ROLLBACK  TRANSACTION
END

GO
GRANT DELETE
    ON OBJECT::[dbo].[UBICAZIONIARTICOLI] TO [Metodo98]
    AS [dbo];


GO
GRANT INSERT
    ON OBJECT::[dbo].[UBICAZIONIARTICOLI] TO [Metodo98]
    AS [dbo];


GO
GRANT REFERENCES
    ON OBJECT::[dbo].[UBICAZIONIARTICOLI] TO [Metodo98]
    AS [dbo];


GO
GRANT SELECT
    ON OBJECT::[dbo].[UBICAZIONIARTICOLI] TO [Metodo98]
    AS [dbo];


GO
GRANT UPDATE
    ON OBJECT::[dbo].[UBICAZIONIARTICOLI] TO [Metodo98]
    AS [dbo];

