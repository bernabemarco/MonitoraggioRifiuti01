
CREATE PROCEDURE [PRICE].[SetRigheContratti]
--ENCRY--
AS
BEGIN
    SET NOCOUNT ON


    SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;
    BEGIN TRY
        BEGIN TRAN
        ;
            WITH ConsDocATTPASS As (
             SELECT TABESERCIZI.CODICE
                ,TIPODOC
                ,CONSIDERARIGHEVALORE
                ,CONSIDERARIGHEQTASCTMERCE
                ,FLGESERCIZIO
                ,INSOTTRAZIONE
                ,CASE WHEN DOCATTTUTTI=0 THEN DADATA ELSE CONVERT(DATETIME,CONVERT(VARCHAR(4),TABESERCIZI.CODICE) +'-' + CONVERT(VARCHAR(2),MONTH(DADATA)) +'-'+CONVERT(VARCHAR(2),DAY(DADATA)) ,101) END DADATA
                ,CASE WHEN DOCATTTUTTI=0 THEN ADATA ELSE CONVERT(DATETIME,CONVERT(VARCHAR(4),TABESERCIZI.CODICE) +'-' + CONVERT(VARCHAR(2),MONTH(ADATA)) +'-'+CONVERT(VARCHAR(2),DAY(ADATA))   ,101) END ADATA
             FROM CONTRATTI_CONSDOC_ATT, dbo.CONTRATTI_PARAMETRI, TABESERCIZI
             WHERE  (DOCATTTUTTI=1) OR (DOCATTTUTTI=0 AND TABESERCIZI.CODICE =  CONTRATTI_CONSDOC_ATT.ESERCIZIO)  

             UNION 

             SELECT TABESERCIZI.CODICE
                ,TIPODOC
                ,CONSIDERARIGHEVALORE
                ,CONSIDERARIGHEQTASCTMERCE
                ,FLGESERCIZIO
                ,INSOTTRAZIONE
                ,CASE WHEN DOCPASSTUTTI=0 THEN DADATA ELSE CONVERT(DATETIME,CONVERT(VARCHAR(4),TABESERCIZI.CODICE) +'-' + CONVERT(VARCHAR(2),MONTH(DADATA)) +'-'+CONVERT(VARCHAR(2),DAY(DADATA)) ,101) END DADATA
                ,CASE WHEN DOCPASSTUTTI=0 THEN ADATA ELSE CONVERT(DATETIME,CONVERT(VARCHAR(4),TABESERCIZI.CODICE) +'-' + CONVERT(VARCHAR(2),MONTH(ADATA)) +'-'+CONVERT(VARCHAR(2),DAY(ADATA))   ,101) END ADATA
             FROM CONTRATTI_CONSDOC_PASS, dbo.CONTRATTI_PARAMETRI, TABESERCIZI
             WHERE (DOCPASSTUTTI=1 ) OR ( DOCPASSTUTTI=0 AND TABESERCIZI.CODICE =  CONTRATTI_CONSDOC_PASS.ESERCIZIO )
             )


            MERGE into Contratti_Periodi_DocumentiValidi AS T
            USING 
                (SELECT SD.PROGRESSIVO
                    ,TIPODOC
                    ,CONSIDERARIGHEVALORE
                    ,CONSIDERARIGHEQTASCTMERCE
                    ,FLGESERCIZIO
                    ,INSOTTRAZIONE 
                    ,DADATA
                    ,ADATA
                    ,DATEDIFF(DAY,'1990-1-1',DADATA) GGDADATA  
                    ,DATEDIFF(DAY,'1990-1-1',ADATA)  GGADATA 
                 FROM  consDocATTPASS, (SELECT PROGRESSIVO FROM TESTE_CONTRATTI TK Left outer join CONTRATTI_CONSDOC KD ON KD.RIFPROGRESSIVO = TK.PROGRESSIVO WHERE KD.RIFPROGRESSIVO IS NULL ) SD
                UNION
                 SELECT RIFPROGRESSIVO as PROGRESSIVO, TIPODOC,  CONSIDERARIGHEVALORE, CONSIDERARIGHEQTASCTMERCE, FLGESERCIZIO, INSOTTRAZIONE 
                    ,DADATA
                    ,ADATA 
                    ,DATEDIFF(DAY,'1990-1-1',DADATA) GGDADATA  
                    ,DATEDIFF(DAY,'1990-1-1',ADATA)  GGADATA 
         
                 FROM CONTRATTI_CONSDOC
                )   As S
            ON T.PROGRESSIVO = S.PROGRESSIVO 
                AND T.TIPODOC = S.TIPODOC  
                AND T.CONSIDERARIGHEVALORE = S.CONSIDERARIGHEVALORE 
                AND T.CONSIDERARIGHEQTASCTMERCE= S.CONSIDERARIGHEQTASCTMERCE 
                AND T.FLGESERCIZIO = S.FLGESERCIZIO
                AND T.INSOTTRAZIONE = S.INSOTTRAZIONE
                AND T.DADATA   = S.DADATA
                AND T.ADATA    = S.ADATA
                AND T.GGDADATA = S.GGDADATA
                AND T.GGADATA  = S.GGADATA
            WHEN MATCHED THEN
                UPDATE SET  T.TIPODOC = S.TIPODOC  
                ,T.CONSIDERARIGHEVALORE = S.CONSIDERARIGHEVALORE 
                ,T.CONSIDERARIGHEQTASCTMERCE= S.CONSIDERARIGHEQTASCTMERCE 
                ,T.FLGESERCIZIO = S.FLGESERCIZIO
                ,T.INSOTTRAZIONE = S.INSOTTRAZIONE
                ,T.DADATA   = S.DADATA
                ,T.ADATA    = S.ADATA
                ,T.GGDADATA = S.GGDADATA
                ,T.GGADATA  = S.GGADATA

            WHEN NOT MATCHED THEN
                INSERT (PROGRESSIVO, TIPODOC, CONSIDERARIGHEVALORE, CONSIDERARIGHEQTASCTMERCE, FLGESERCIZIO, INSOTTRAZIONE, DADATA, ADATA, GGDADATA, GGADATA )
                VALUES(S.PROGRESSIVO, S.TIPODOC, CONSIDERARIGHEVALORE, S.CONSIDERARIGHEQTASCTMERCE, S.FLGESERCIZIO, S.INSOTTRAZIONE, S.DADATA, S.ADATA, S.GGDADATA, S.GGADATA )
            WHEN NOT MATCHED BY SOURCE THEN
                DELETE  ;                




            COMMIT TRAN
    END TRY
    BEGIN CATCH
        
        IF(@@TRANCOUNT > 0)
            ROLLBACK TRAN
    END CATCH
            



    IF OBJECT_ID('tempdb..#PeriodoClientiContratti') IS NOT NULL
        DROP TABLE #PeriodoClientiContratti


    ;

    WITH List As (
        SELECT NodoChild.Progressivo
            ,NodoParent.progressivo As ProgressivoParent
            ,NodoChild.NUMEROCONTRATTO
            ,NodoChild.CODICE 
            ,1 As Type
            ,CAST((CASE WHEN Nodoparent.CODICE <>'' THEN Nodoparent.Codice ELSE NodoChild.CODICE  END) As VARBINARY) As IDCODCLI_ORIGINE_FATT
            ,CAST((CASE WHEN NodoChild.TIPONODO  IN (2,4) THEN NodoChild.CODICE  ELSE '' END) As VARBINARY) As IDCODCLIFOR_ORIGINE
            ,CAST((CASE WHEN ISNULL(DESTDIV.CODICE,0)  <>0    THEN DESTDIV.CODICE  ELSE 0 END) As DECIMAL(5,0)) As IDDESTINAZIONECLI_ORIGINE
            ,ISNULL(DESTDIV.CODICE,0) IsDestDiv
            ,NodoChild.DATAINIZIOCONTRATTO, NodoChild.DATAFINECONTRATTO
            ,DATEDIFF(DAY,'1990-1-1',NodoChild.DATAINIZIOCONTRATTO) GGINIZIOCONTRATTO 
            ,CASE WHEN NodoChild.DATAFINECONTRATTO <= ISNULL(NodoChild.DATAINTERRUZIONECONTRATTO,NodoChild.DATAFINECONTRATTO) THEN DATEDIFF(DAY,'1990-1-1',NodoChild.DATAFINECONTRATTO) ELSE DATEDIFF(DAY,'1990-1-1',NodoChild.DATAINTERRUZIONECONTRATTO) END AS GGFINECONTRATTO 
            ,CASE WHEN NodoChild.DATAFINECONTRATTO <= ISNULL(NodoChild.DATAINTERRUZIONECONTRATTO,NodoChild.DATAFINECONTRATTO) THEN DATEDIFF(DAY,'1990-1-1',NodoChild.DATAFINECONTRATTO) ELSE DATEDIFF(DAY,'1990-1-1',NodoChild.DATAINTERRUZIONECONTRATTO) END - DATEDIFF(DAY,'1990-1-1',NodoChild.DATAINIZIOCONTRATTO) AS DURATA
        FROM TESTE_CONTRATTI NodoChild 
            LEFT OUTER JOIN (SELECT NODOPARENT ,CODICE, TIPONODO FROM TESTE_CONTRATTI WHERE tiponodo=3) DESTDIV
            ON Destdiv.NODOPARENT = NodoChild.Progressivo
            ,TESTE_CONTRATTI NodoParent
        WHERE NodoParent.PROGRESSIVO= NodoChild.NODOPARENT AND NodoChild.TIPONODO in (2,4) AND NodoParent.TIPONODO = (1)
        
        UNION ALL
        
        SELECT NodoParent.progressivo
            ,NodoParent.progressivo As ProgressivoParent
            ,NodoChild.NUMEROCONTRATTO
            ,NodoChild.CODICE 
            ,1 As Type
            ,CAST((CASE WHEN Nodoparent.CODICE <>''        THEN Nodoparent.Codice ELSE NodoChild.CODICE  END) As VARBINARY) As IDCODCLI_ORIGINE_FATT
            ,CAST((CASE WHEN NodoChild.TIPONODO  IN (2,4)  THEN NodoChild.CODICE  ELSE ''                END) As VARBINARY) As IDCODCLIFOR_ORIGINE
            ,CAST((CASE WHEN ISNULL(DESTDIV.CODICE,0)  <>0 THEN DESTDIV.CODICE    ELSE 0                 END) As DECIMAL(5,0)) As IDDESTINAZIONECLI_ORIGINE
            ,ISNULL(DESTDIV.CODICE,0) IsDestDiv
            ,NodoChild.DATAINIZIOCONTRATTO
            ,NodoChild.DATAFINECONTRATTO
            ,DATEDIFF(DAY,'1990-1-1',NodoChild.DATAINIZIOCONTRATTO) GGINIZIOCONTRATTO 
            ,CASE WHEN NodoChild.DATAFINECONTRATTO <= ISNULL(NodoChild.DATAINTERRUZIONECONTRATTO,NodoChild.DATAFINECONTRATTO) THEN DATEDIFF(DAY,'1990-1-1',NodoChild.DATAFINECONTRATTO) ELSE DATEDIFF(DAY,'1990-1-1',NodoChild.DATAINTERRUZIONECONTRATTO) END AS GGFINECONTRATTO 
            ,CASE WHEN NodoChild.DATAFINECONTRATTO <= ISNULL(NodoChild.DATAINTERRUZIONECONTRATTO,NodoChild.DATAFINECONTRATTO) THEN DATEDIFF(DAY,'1990-1-1',NodoChild.DATAFINECONTRATTO) ELSE DATEDIFF(DAY,'1990-1-1',NodoChild.DATAINTERRUZIONECONTRATTO) END - DATEDIFF(DAY,'1990-1-1',NodoChild.DATAINIZIOCONTRATTO)  AS DURATA
        FROM TESTE_CONTRATTI NodoChild 
            LEFT OUTER JOIN  (Select NODOPARENT ,CODICE, TIPONODO from TESTE_CONTRATTI where tiponodo=3) DESTDIV
            ON Destdiv.NODOPARENT = NodoChild.Progressivo
            ,TESTE_CONTRATTI NodoParent
        WHERE NodoParent.PROGRESSIVO= NodoChild.NODOPARENT AND NodoChild.TIPONODO in (2,4) AND NodoParent.TIPONODO = (1)


        UNION ALL


        SELECT Nodo.Progressivo
            ,NodoParent.progressivo As ProgressivoParent
            ,Nodo.NUMEROCONTRATTO
            ,Nodo.CODICE 
            ,0 As Type
            ,CAST((CASE WHEN Nodo.TIPONODO =1        THEN Nodo.Codice  ELSE '' END) As VARBINARY) As IDCODCLI_ORIGINE_FATT
            ,CAST((CASE WHEN Nodo.TIPONODO IN (2,4)  THEN Nodo.CODICE  ELSE '' END) As VARBINARY) As IDCODCLIFOR_ORIGINE
            ,CAST((CASE WHEN ISNULL(DESTDIV.CODICE,0)  <>0    THEN DESTDIV.CODICE  ELSE 0 END) As DECIMAL(5,0)) As IDDESTINAZIONECLI_ORIGINE
            ,ISNULL(DESTDIV.CODICE,0) IsDestDiv
            ,Nodo.DATAINIZIOCONTRATTO, Nodo.DATAFINECONTRATTO
            ,DATEDIFF(DAY,'1990-1-1',Nodo.DATAINIZIOCONTRATTO) GGINIZIOCONTRATTO 
            ,CASE WHEN Nodo.DATAFINECONTRATTO <= ISNULL(Nodo.DATAINTERRUZIONECONTRATTO,Nodo.DATAFINECONTRATTO) THEN DATEDIFF(DAY,'1990-1-1',Nodo.DATAFINECONTRATTO) ELSE DATEDIFF(DAY,'1990-1-1',Nodo.DATAINTERRUZIONECONTRATTO) END As GGFINECONTRATTO 
            ,CASE WHEN Nodo.DATAFINECONTRATTO <= ISNULL(Nodo.DATAINTERRUZIONECONTRATTO,Nodo.DATAFINECONTRATTO) THEN DATEDIFF(DAY,'1990-1-1',Nodo.DATAFINECONTRATTO) ELSE DATEDIFF(DAY,'1990-1-1',Nodo.DATAINTERRUZIONECONTRATTO) END - DATEDIFF(DAY,'1990-1-1',Nodo.DATAINIZIOCONTRATTO) AS DURATA
        FROM TESTE_CONTRATTI   Nodo
            LEFT OUTER JOIN TESTE_CONTRATTI NodoChild ON Nodo.PROGRESSIVO = NodoChild.NODOPARENT
            LEFT OUTER JOIN TESTE_CONTRATTI NodoParent ON Nodo.NODOPARENT = NodoParent.PROGRESSIVO
            LEFT OUTER JOIN (Select NODOPARENT ,CODICE, TIPONODO from TESTE_CONTRATTI where tiponodo=3) DESTDIV ON Destdiv.NODOPARENT = Nodo.Progressivo
        WHERE NodoChild.TIPONODO IS NULL and ISNULL(NodoParent.TIPONODO,1) <>1 and Nodo.TIPONODO in (1,2,4)
            )
        SELECT  Progressivo, NUMEROCONTRATTO, CODICE, Type, IDCODCLI_ORIGINE_FATT, IDCODCLIFOR_ORIGINE, IDDESTINAZIONECLI_ORIGINE, IsDestDiv, DATAINIZIOCONTRATTO, DATAFINECONTRATTO, GGINIZIOCONTRATTO,   GGFINECONTRATTO, DURATA
        INTO #PeriodoClientiContratti
        FROM  (SELECT * FROM (SELECT Progressivo, NUMEROCONTRATTO,  CODICE, Type, IDCODCLI_ORIGINE_FATT, IDCODCLIFOR_ORIGINE, IDDESTINAZIONECLI_ORIGINE, IsDestDiv, DATAINIZIOCONTRATTO, DATAFINECONTRATTO, GGINIZIOCONTRATTO,   GGFINECONTRATTO, DURATA
                FROM List 

                UNION ALL

                SELECT Distinct Libero.ProgressivoLibero, list.NUMEROCONTRATTO,  CODICE, Type, IDCODCLI_ORIGINE_FATT, IDCODCLIFOR_ORIGINE, IDDESTINAZIONECLI_ORIGINE, IsDestDiv, Libero.DATAINIZIOCONTRATTO, Libero.DATAFINECONTRATTO, GGINIZIOCONTRATTO,   GGFINECONTRATTO, DURATA
                FROM List 
                INNER JOIN
                    (SELECT RL.PROGRESSIVO ProgressivoLibero, RL.NUMEROCONTRATTO,  D.PROGRESSIVO,RL.DATAINIZIOCONTRATTO, RL.DATAFINECONTRATTO    
                            FROM (SELECT L.INDICEALBERO  ,L.PROGRESSIVO ,L.NUMEROCONTRATTO,  L.CODICE, L.DATAINIZIOCONTRATTO, L.DATAFINECONTRATTO  
                                        FROM TESTE_CONTRATTI L
                                        WHERE L.TIPONODO = 0
                                    ) RL
                            INNER JOIN TESTE_CONTRATTI D ON LEFT(D.INDICEALBERO,len(RL.INDICEALBERO + '\N' + CAST(RL.PROGRESSIVO as VARCHAR)  )) = RL.INDICEALBERO  + '\N' + CAST(RL.PROGRESSIVO as VARCHAR)  AND D.TIPONODO in (1,2,3,4)
                        ) Libero
                    ON libero.PROGRESSIVO =  List.Progressivo
                    ) Lista --order by PROGRESSIVO

                ) ListaCompleta
        INNER JOIN (SELECT RIFCONTRATTO AS PROGRESSIVOCONTRATTO from CONTRATTI_CON
                UNION
                SELECT rifprogressivo from CONTRATTI_CL ) ListaPremi ON ListaCompleta.Progressivo = ListaPremi.PROGRESSIVOCONTRATTO
    
    ;

    
    
    --Rigenerazione Tabella [Contratti_RiferimentoDocumenti] e contemporaneamente riempimento dati
    BEGIN TRY
        BEGIN TRAN
    
            MERGE into Contratti_RiferimentoDocumenti AS T
            USING  (SELECT KT.PROGRESSIVO
                            ,KT.NUMEROCONTRATTO
                            ,TMP.IDTESTA
                            ,TMP.IDRIGA
                            ,TMP.KEYIDTIDR
                            ,TMP.TOTSPESETRASPRES
                            ,TMP.TOTIMPONIBILEEURO
                            FROM  (SELECT  DATEDIFF(DAY,'1990-1-1',TD.DATADOC) GGDATADOC ,TD.PROGRESSIVO IDTESTA,RD.IDRIGA ,cast (RD.IDTESTA as bigint) *10000 + RD.IDRIGA AS KEYIDTIDR
                                        ,CAST(ISNULL((Select CODCLIFOR FROM TESTEDOCUMENTI WHERE progressivo = [dbo].[FUNSGetDUMP_IDTESTARP_RigheDocumenti](td.progressivo,rd.idriga,0,0)),CAST(TD.CODCLIFOR As VARBINARY))  As VARBINARY) IDCODCLIFOR_ORIGINE
                                        ,CAST(ISNULL((Select CODCFFATT FROM TESTEDOCUMENTI WHERE progressivo = [dbo].[FUNSGetDUMP_IDTESTARP_RigheDocumenti](td.progressivo,rd.idriga,0,0)),CAST(TD.CODCFFATT As VARBINARY))  As VARBINARY) IDCODCLIFOR_ORIGINE_FATT
                                        ,(SELECT numdestdiversamerci   FROM TESTEDOCUMENTI  WHERE progressivo = [dbo].[FUNSGetDUMP_IDTESTARP_RigheDocumenti](td.progressivo,rd.idriga,0,0)) AS IDDESTINAZIONECLI_ORIGINE
                                        ,TD.CODAGENTE1 AGENTE1
                                        ,TD.TOTSPESETRASPRES,TD.TOTIMPONIBILEEURO
                                    FROM (SELECT TD.PROGRESSIVO, TD.CODCLIFOR, Td.CODCFFATT, TD.CODAGENTE1, DATADOC, DATARIFDOC,TOTSPESETRASPRES,TOTIMPONIBILEEURO, ESERCIZIO
                                            FROM TESTEDOCUMENTI  TD  WITH(NOLOCK)
                                            INNER JOIN (SELECT Distinct TIPODOC
                                                            ,GGDADATA
                                                            ,GGADATA 
                                                        FROM [Contratti_Periodi_DocumentiValidi]) Documenti ON Documenti.TIPODOC= TD.TIPODOC 
                                                        WHERE  DATEDIFF(DAY,'1990-1-1',TD.DATADOC) BETWEEN Documenti.GGDADATA AND GGADATA
                                                        ) TD 
                                    INNER JOIN RIGHEDOCUMENTI RD WITH(NOLOCK) ON Td.PROGRESSIVO= rd.IDTESTA 
                                    INNER JOIN 
                                    (SELECT TP.TP_FORMULASCT, IDTESTA, IDRIGA  
                                                    FROM (SELECT IDTESTA, IDRIGA,  CASE WHEN ISNULL(NPROMOZIONE,'') =''  THEN '0' ELSE NPROMOZIONE END NPROMOZIONE , TP_FORMULASCT 
                                                          FROM TP_EXTRARIGHEDOC)   TP 
                                                          LEFT OUTER JOIN  TP_PROMOZIONI_TESTE PROMOT ON PROMOT.Progressivo = CONVERT(DECIMAL(10,0),ISNULL(TP.NPromozione,'0')) 
                                                    WHERE   ISNULL(PROMOT.BolValidaPerContratti,1) = 1  AND  ISNUMERIC(TP.NPROMOZIONE) =1
                                                    ) TP

                
                                    
                                    ON RD.IDTESTA= Tp.IDTESTA AND TP.IDRIGA = Rd.IDRIGA 
                                    INNER JOIN CONTRATTI_ESERCIZI KE ON TD.ESERCIZIO = KE.Esercizio
                                    WHERE  RD.TIPORIGA in ('N','V')  AND KE.Stato= 1 
                                    ) TMP, #PeriodoClientiContratti KT 
                        WHERE  tmp.GGDATADOC between KT.GGINIZIOCONTRATTO and KT.GGFINECONTRATTO 
                        AND (
                            (Kt.type =1 AND kT.IDCODCLIFOR_ORIGINE = TMP.IDCODCLIFOR_ORIGINE AND KT.IDCODCLI_ORIGINE_FATT = tmp.IDCODCLIFOR_ORIGINE_FATT AND ( KT.IDDESTINAZIONECLI_ORIGINE = TMP.IDDESTINAZIONECLI_ORIGINE OR KT.IsDestDiv=0 ))
                            OR  
                            ((KT.type =0 AND (kT.IDCODCLIFOR_ORIGINE = TMP.IDCODCLIFOR_ORIGINE OR kT.IDCODCLI_ORIGINE_FATT = tmp.IDCODCLIFOR_ORIGINE_FATT)) AND (KT.IDDESTINAZIONECLI_ORIGINE = TMP.IDDESTINAZIONECLI_ORIGINE OR  KT.IsDestDiv=0))
                            ) 
                        ) S
                ON T.PROGRESSIVO = S.PROGRESSIVO
                    AND T.NUMEROCONTRATTO = S.NUMEROCONTRATTO
                    AND T.IDTESTA     = S.IDTESTA
                    AND T.IDRIGA      = S.IDRIGA
                    AND T.KEYIDTIDR   = S.KEYIDTIDR
                    AND T.TOTSPESETRASPRES = S.TOTSPESETRASPRES
                    AND T.TOTIMPONIBILEEURO= S.TOTIMPONIBILEEURO
                WHEN MATCHED THEN
                    UPDATE SET  T.PROGRESSIVO = S.PROGRESSIVO
                        ,T.NUMEROCONTRATTO = S.NUMEROCONTRATTO
                        ,T.IDTESTA     = S.IDTESTA
                        ,T.IDRIGA      = S.IDRIGA
                        ,T.KEYIDTIDR   = S.KEYIDTIDR
                        ,T.TOTSPESETRASPRES = S.TOTSPESETRASPRES
                        ,T.TOTIMPONIBILEEURO= S.TOTIMPONIBILEEURO

                WHEN NOT MATCHED THEN
                    INSERT ( PROGRESSIVO, NUMEROCONTRATTO, IDTESTA, IDRIGA, KEYIDTIDR, TOTSPESETRASPRES, TOTIMPONIBILEEURO)
                    VALUES(S.PROGRESSIVO, S.NUMEROCONTRATTO, S.IDTESTA, S.IDRIGA, S.KEYIDTIDR, S.TOTSPESETRASPRES, S.TOTIMPONIBILEEURO )
                WHEN NOT MATCHED BY SOURCE THEN
                    DELETE  ;   

    COMMIT TRAN
    END TRY
    BEGIN CATCH
        
        IF(@@TRANCOUNT > 0)
            ROLLBACK TRAN
    END CATCH


    IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tempdb..#RigheContratti_tmp') AND type in (N'U'))
        DROP TABLE [#RigheContratti_tmp]


    ----------------------------------------------------------------------------
    SELECT * INTO #RigheContratti_tmp
        FROM 
        (SELECT TMP.* FROM 
            (SELECT DB_NAME() DATABASE_NAME
                ,TD.ESERCIZIO
                ,TD.TIPODOC
                ,TD.DATADOC
                ,datediff(DAY,'1990-1-1',TD.DATADOC) GGDATADOC 
                ,TD.PROGRESSIVO IDTESTA
                ,RD.IDRIGA
                ,RD.TIPORIGA
                ,cast (RD.IDTESTA as bigint) *10000 + RD.IDRIGA AS KEYIDTIDR
                ,TD.CODCLIFOR CLIENTE
                ,CAST(ISNULL((Select CODCLIFOR FROM TESTEDOCUMENTI where progressivo = [dbo].[FUNSGetDUMP_IDTESTARP_RigheDocumenti](td.progressivo,rd.idriga,0,0)),CAST(TD.CODCLIFOR As VARBINARY))  As VARBINARY) IDCODCLIFOR_ORIGINE
                ,CAST(ISNULL((Select CODCFFATT FROM TESTEDOCUMENTI where progressivo = [dbo].[FUNSGetDUMP_IDTESTARP_RigheDocumenti](td.progressivo,rd.idriga,0,0)),CAST(TD.CODCFFATT As VARBINARY))  As VARBINARY) IDCODCLIFOR_ORIGINE_FATT
                ,(Select numdestdiversamerci FROM TESTEDOCUMENTI where progressivo = [dbo].[FUNSGetDUMP_IDTESTARP_RigheDocumenti](td.progressivo,rd.idriga,0,0))  AS IDDESTINAZIONECLI_ORIGINE
                ,TD.CODAGENTE1 AGENTE1
                ,TD.CODAGENTE2 AGENTE2
                ,TD.CODAGENTE3 AGENTE3
                ,TD.TOTIMPONIBILEEURO IMPONIBILE_DOCUMENTO
                ,Rd.CODART CODICEARTICOLO
                ,ART.GRUPPO GRUPPO
                ,ART.CATEGORIA CATEGORIA
                ,ART.CODCATEGORIASTAT CATEGORIA_STATISTICA
                ,COMM.GRUPPOPRZPART GRUPPO_PREZZI
                ,TP_M.CodFamigliaPOS FAMIGLIA
                ,TP_M.CodRepartoPOS REPARTO
                ,RD.UMGEST
                ,Rd.QTAGEST QTA
                ,Rd.PREZZOUNITLORDO
                ,rd.SCONTORIGA SCONTORIGA
                ,TP.TP_FORMULASCT FORMULA_SCONTI_ACQ
                ,RD.TOTNETTORIGAEURO IMPORTORIGA
                ,TD.SCONTOFINALE
                ,TD.PRCSCONTOINCOND
                ,TD.SCONTOINCOND 
                ,RD.QTAPREZZO
                ,TD.SEGNO
            FROM TESTEDOCUMENTI TD  WITH(NOLOCK)
                INNER JOIN righedocumenti RD   WITH(NOLOCK)    ON Td.PROGRESSIVO= rd.IDTESTA
                INNER JOIN TP_EXTRARIGHEDOC TP ON RD.IDTESTA= Tp.IDTESTA AND TP.IDRIGA = Rd.IDRIGA
                LEFT OUTER JOIN ANAGRAFICAARTICOLI ART On RD.CODART = ART.CODICE
                LEFT OUTER JOIN ANAGRAFICAARTICOLICOMM COMM ON ART.CODICE = COMM.CODICEART
                LEFT OUTER JOIN TP_ExtraMag TP_M ON TP_M.CodArt = ART.CODICE

            WHERE  COMM.ESERCIZIO = RD.ESERCIZIO 

            ) TMP
        INNER JOIN (SELECT Distinct KEYIDTIDR FROM Contratti_RiferimentoDocumenti With(nolock)) RIF ON RIF.KEYIDTIDR = tmp.KEYIDTIDR
        ) XX

    /* 
    Merge fra i dati
    */

    BEGIN TRY
        BEGIN TRAN
            MERGE into RIGHECONTRATTI AS T
            USING #righecontratti_tmp As S
            ON t.KEYIDTIDR = s.KEYIDTIDR AND t.DATABASE_NAME = s.DATABASE_NAME  AND t.CODICEARTICOLO=S.CODICEARTICOLO
            WHEN MATCHED THEN
                UPDATE SET T.ESERCIZIO = S.ESERCIZIO ,T.DATADOC= S.DATADOC,T.GGDATADOC = S.GGDATADOC ,T.TIPORIGA= S.TIPORIGA
                            ,T.CLIENTE = S.CLIENTE,T.IDCODCLIFOR_ORIGINE = S.IDCODCLIFOR_ORIGINE, T.IDCODCLIFOR_ORIGINE_FATT = S.IDCODCLIFOR_ORIGINE_FATT
                            ,T.IDDESTINAZIONECLI_ORIGINE =S.IDDESTINAZIONECLI_ORIGINE
                            ,T.AGENTE1 = S.AGENTE1, T.AGENTE2 = S.AGENTE2, T.AGENTE3 = S.AGENTE3
                            ,T.UMGEST = S.UMGEST,T.QTA = S.QTA, T.QTAPREZZO= S.QTAPREZZO, T.PREZZOUNITLORDO = S.PREZZOUNITLORDO, T.SCONTORIGA = S.SCONTORIGA,T.FORMULA_SCONTI_ACQ = S.FORMULA_SCONTI_ACQ,T.IMPORTORIGA= S.IMPORTORIGA
                            ,T.SCONTOFINALE=S.SCONTOFINALE, T.PRCSCONTOINCOND = S.PRCSCONTOINCOND,T.SCONTOINCOND = S.SCONTOINCOND
                            ,T.IMPONIBILE_DOCUMENTO = S.IMPONIBILE_DOCUMENTO

            WHEN NOT MATCHED THEN
                INSERT (DATABASE_NAME, ESERCIZIO, TIPODOC, DATADOC, GGDATADOC, IDTESTA, IDRIGA,KEYIDTIDR,TIPORIGA, CLIENTE, IDCODCLIFOR_ORIGINE, IDCODCLIFOR_ORIGINE_FATT, IDDESTINAZIONECLI_ORIGINE, AGENTE1, AGENTE2, 
                                     AGENTE3, IMPONIBILE_DOCUMENTO, CODICEARTICOLO, GRUPPO, CATEGORIA, CATEGORIA_STATISTICA, GRUPPO_PREZZI, FAMIGLIA, REPARTO, UMGEST, QTA,PREZZOUNITLORDO, SCONTORIGA, FORMULA_SCONTI_ACQ, IMPORTORIGA,SCONTOFINALE,PRCSCONTOINCOND,SCONTOINCOND,QTAPREZZO,SEGNO)
                VALUES(S.DATABASE_NAME, S.ESERCIZIO, TIPODOC, DATADOC, GGDATADOC, IDTESTA, IDRIGA,KEYIDTIDR,TIPORIGA, CLIENTE, IDCODCLIFOR_ORIGINE, IDCODCLIFOR_ORIGINE_FATT, IDDESTINAZIONECLI_ORIGINE, AGENTE1, AGENTE2, 
                                     AGENTE3, IMPONIBILE_DOCUMENTO, CODICEARTICOLO, GRUPPO, CATEGORIA, CATEGORIA_STATISTICA, GRUPPO_PREZZI, FAMIGLIA, REPARTO, UMGEST, QTA,PREZZOUNITLORDO, SCONTORIGA, FORMULA_SCONTI_ACQ, IMPORTORIGA,SCONTOFINALE,PRCSCONTOINCOND,SCONTOINCOND,QTAPREZZO,SEGNO)
            WHEN NOT MATCHED BY SOURCE THEN
                DELETE  ;                

         
        COMMIT TRAN
    END TRY
    BEGIN CATCH
        
        IF(@@TRANCOUNT > 0)
            ROLLBACK TRAN
    END CATCH



    

END

GO
GRANT EXECUTE
    ON OBJECT::[Price].[SetRigheContratti] TO [Metodo98]
    AS [dbo];

